

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Dec 14 16:14:50 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.45
    35                           ; Generated 16/11/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009E                     	;# 
   130  009F                     	;# 
   131  0105                     	;# 
   132  0107                     	;# 
   133  0108                     	;# 
   134  0109                     	;# 
   135  010C                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  0185                     	;# 
   141  0187                     	;# 
   142  0188                     	;# 
   143  0189                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146                           
   147                           	psect	strings
   148  0531                     __pstrings:	
   149  0531                     stringtab:	
   150  0531                     __stringtab:	
   151  0531                     stringcode:	
   152                           ;	String table - string pointers are 1 byte each
   153                           
   154  0531                     stringdir:	
   155  0531  3005               	movlw	high stringdir
   156  0532  008A               	movwf	10
   157  0533  0804               	movf	4,w
   158  0534  0A84               	incf	4,f
   159  0535  0782               	addwf	2,f
   160  0536                     __stringbase:	
   161  0536  3400               	retlw	0
   162  0537                     __end_of__stringtab:	
   163  0537                     _dpowers:	
   164  0537  3401               	retlw	1
   165  0538  3400               	retlw	0
   166  0539  340A               	retlw	10
   167  053A  3400               	retlw	0
   168  053B  3464               	retlw	100
   169  053C  3400               	retlw	0
   170  053D  34E8               	retlw	232
   171  053E  3403               	retlw	3
   172  053F  3410               	retlw	16
   173  0540  3427               	retlw	39
   174  0541                     __end_of_dpowers:	
   175  000E                     _TMR1	set	14
   176  0013                     _SSPBUF	set	19
   177  0007                     _PORTCbits	set	7
   178  0014                     _SSPCON	set	20
   179  000B                     _INTCONbits	set	11
   180  000E                     _TMR1L	set	14
   181  000F                     _TMR1H	set	15
   182  0010                     _T1CONbits	set	16
   183  0010                     _T1CON	set	16
   184  0007                     _PORTC	set	7
   185  0006                     _PORTB	set	6
   186  000C                     _PIR1bits	set	12
   187  0006                     _PORTBbits	set	6
   188  0094                     _SSPSTATbits	set	148
   189  0094                     _SSPSTAT	set	148
   190  008C                     _PIE1bits	set	140
   191  0086                     _TRISB	set	134
   192  0087                     _TRISCbits	set	135
   193  0189                     _ANSELH	set	393
   194  0188                     _ANSEL	set	392
   195  0541                     STR_1:	
   196  0541  3446               	retlw	70	;'F'
   197  0542  3445               	retlw	69	;'E'
   198  0543  3443               	retlw	67	;'C'
   199  0544  3448               	retlw	72	;'H'
   200  0545  3441               	retlw	65	;'A'
   201  0546  3420               	retlw	32	;' '
   202  0547  3425               	retlw	37	;'%'
   203  0548  3430               	retlw	48	;'0'
   204  0549  3432               	retlw	50	;'2'
   205  054A  3475               	retlw	117	;'u'
   206  054B  342F               	retlw	47	;'/'
   207  054C  3425               	retlw	37	;'%'
   208  054D  3430               	retlw	48	;'0'
   209  054E  3432               	retlw	50	;'2'
   210  054F  3475               	retlw	117	;'u'
   211  0550  342F               	retlw	47	;'/'
   212  0551  3425               	retlw	37	;'%'
   213  0552  3430               	retlw	48	;'0'
   214  0553  3432               	retlw	50	;'2'
   215  0554  3475               	retlw	117	;'u'
   216  0555  3400               	retlw	0
   217  0556                     STR_2:	
   218  0556  3448               	retlw	72	;'H'
   219  0557  344F               	retlw	79	;'O'
   220  0558  3452               	retlw	82	;'R'
   221  0559  3441               	retlw	65	;'A'
   222  055A  3420               	retlw	32	;' '
   223  055B  3425               	retlw	37	;'%'
   224  055C  3430               	retlw	48	;'0'
   225  055D  3432               	retlw	50	;'2'
   226  055E  3475               	retlw	117	;'u'
   227  055F  343A               	retlw	58	;':'
   228  0560  3425               	retlw	37	;'%'
   229  0561  3430               	retlw	48	;'0'
   230  0562  3432               	retlw	50	;'2'
   231  0563  3475               	retlw	117	;'u'
   232  0564  343A               	retlw	58	;':'
   233  0565  3425               	retlw	37	;'%'
   234  0566  3430               	retlw	48	;'0'
   235  0567  3432               	retlw	50	;'2'
   236  0568  3475               	retlw	117	;'u'
   237  0569  3400               	retlw	0
   238                           
   239                           ; #config settings
   240  0000                     
   241                           	psect	cinit
   242  0015                     start_initialization:	
   243  0015                     __initialization:	
   244                           
   245                           ; Clear objects allocated to COMMON
   246  0015  01F8               	clrf	__pbssCOMMON& (0+127)
   247                           
   248                           ; Clear objects allocated to BANK0
   249  0016  1383               	bcf	3,7	;select IRP bank0
   250  0017  3047               	movlw	low __pbssBANK0
   251  0018  0084               	movwf	4
   252  0019  3068               	movlw	low (__pbssBANK0+33)
   253  001A  120A  118A  268D  120A  118A  	fcall	clear_ram0
   254                           
   255                           ; Clear objects allocated to BANK1
   256  001F  30A0               	movlw	low __pbssBANK1
   257  0020  0084               	movwf	4
   258  0021  30B0               	movlw	low (__pbssBANK1+16)
   259  0022  120A  118A  268D   	fcall	clear_ram0
   260  0025                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  0025                     __end_of__initialization:	
   264  0025  0183               	clrf	3
   265  0026  120A  118A  2ABF   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268  0078                     __pbssCOMMON:	
   269  0078                     _Contador:	
   270  0078                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0047                     __pbssBANK0:	
   274  0047                     _BanderaAdquisicion:	
   275  0047                     	ds	1
   276  0048                     _bufer:	
   277  0048                     	ds	16
   278  0058                     _linea1:	
   279  0058                     	ds	16
   280                           
   281                           	psect	bssBANK1
   282  00A0                     __pbssBANK1:	
   283  00A0                     _linea2:	
   284  00A0                     	ds	16
   285                           
   286                           	psect	clrtext
   287  068D                     clear_ram0:	
   288                           ;	Called with FSR containing the base address, and
   289                           ;	W with the last address+1
   290                           
   291  068D  0064               	clrwdt	;clear the watchdog before getting into this loop
   292  068E                     clrloop0:	
   293  068E  0180               	clrf	0	;clear RAM location pointed to by FSR
   294  068F  0A84               	incf	4,f	;increment pointer
   295  0690  0604               	xorwf	4,w	;XOR with final address
   296  0691  1903               	btfsc	3,2	;have we reached the end yet?
   297  0692  3400               	retlw	0	;all done for this memory range, return
   298  0693  0604               	xorwf	4,w	;XOR again to restore value
   299  0694  2E8E               	goto	clrloop0	;do the next byte
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:	
   303  0070                     ?_isdigit:	
   304  0070                     ?_InitES:	
   305                           ; 1 bit 
   306                           
   307  0070                     ?_InitSPI:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_InitTMR1:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_Adquisicion:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_invertir:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_envio:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_inicializacion:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_bajar:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_subir:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_LCD:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_LCD2:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_rutinainterrupciones:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_rutinainterrupciones:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346                           
   347                           ; 1 bytes @ 0x0
   348  0070                     	ds	5
   349  0075                     ??_InitES:	
   350  0075                     ??_InitSPI:	
   351                           ; 1 bytes @ 0x5
   352                           
   353  0075                     ??_InitTMR1:	
   354                           ; 1 bytes @ 0x5
   355                           
   356  0075                     ??_Adquisicion:	
   357                           ; 1 bytes @ 0x5
   358                           
   359  0075                     ??_isdigit:	
   360                           ; 1 bytes @ 0x5
   361                           
   362  0075                     ??_invertir:	
   363                           ; 1 bytes @ 0x5
   364                           
   365  0075                     ??_envio:	
   366                           ; 1 bytes @ 0x5
   367                           
   368  0075                     ??_inicializacion:	
   369                           ; 1 bytes @ 0x5
   370                           
   371  0075                     ??_bajar:	
   372                           ; 1 bytes @ 0x5
   373                           
   374  0075                     ??_subir:	
   375                           ; 1 bytes @ 0x5
   376                           
   377  0075                     ??___wmul:	
   378                           ; 1 bytes @ 0x5
   379                           
   380  0075                     ?___bmul:	
   381                           ; 1 bytes @ 0x5
   382                           
   383  0075                     ??___lwdiv:	
   384                           ; 1 bytes @ 0x5
   385                           
   386  0075                     ___bmul@multiplicand:	
   387                           ; 1 bytes @ 0x5
   388                           
   389  0075                     _isdigit$645:	
   390                           ; 1 bytes @ 0x5
   391                           
   392  0075                     ___wmul@product:	
   393                           ; 1 bytes @ 0x5
   394                           
   395                           
   396                           ; 2 bytes @ 0x5
   397  0075                     	ds	1
   398  0076                     ??___bmul:	
   399  0076                     ??___lwmod:	
   400                           ; 1 bytes @ 0x6
   401                           
   402  0076                     isdigit@c:	
   403                           ; 1 bytes @ 0x6
   404                           
   405  0076                     Adquisicion@i:	
   406                           ; 1 bytes @ 0x6
   407                           
   408                           
   409                           ; 2 bytes @ 0x6
   410  0076                     	ds	1
   411  0077                     invertir@entrada:	
   412  0077                     ___lwmod@counter:	
   413                           ; 1 bytes @ 0x7
   414                           
   415                           
   416                           ; 1 bytes @ 0x7
   417  0077                     	ds	1
   418                           
   419                           	psect	cstackBANK0
   420  0020                     __pcstackBANK0:	
   421  0020                     ??_LCD:	
   422  0020                     ??_LCD2:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0020                     ?___wmul:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0020                     ?___lwdiv:	
   429                           ; 2 bytes @ 0x0
   430                           
   431  0020                     ___bmul@product:	
   432                           ; 2 bytes @ 0x0
   433                           
   434  0020                     ___wmul@multiplier:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     ___lwdiv@divisor:	
   438                           ; 2 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442  0020                     	ds	1
   443  0021                     ___bmul@multiplier:	
   444                           
   445                           ; 1 bytes @ 0x1
   446  0021                     	ds	1
   447  0022                     LCD@p1:	
   448  0022                     LCD2@p2:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0022                     ___wmul@multiplicand:	
   452                           ; 1 bytes @ 0x2
   453                           
   454  0022                     ___lwdiv@dividend:	
   455                           ; 2 bytes @ 0x2
   456                           
   457                           
   458                           ; 2 bytes @ 0x2
   459  0022                     	ds	1
   460  0023                     LCD@letraenvio:	
   461  0023                     LCD2@letraenvio:	
   462                           ; 1 bytes @ 0x3
   463                           
   464                           
   465                           ; 1 bytes @ 0x3
   466  0023                     	ds	1
   467  0024                     ___lwdiv@counter:	
   468                           
   469                           ; 1 bytes @ 0x4
   470  0024                     	ds	1
   471  0025                     ___lwdiv@quotient:	
   472                           
   473                           ; 2 bytes @ 0x5
   474  0025                     	ds	2
   475  0027                     ?___lwmod:	
   476  0027                     ___lwmod@divisor:	
   477                           ; 2 bytes @ 0x7
   478                           
   479                           
   480                           ; 2 bytes @ 0x7
   481  0027                     	ds	2
   482  0029                     ___lwmod@dividend:	
   483                           
   484                           ; 2 bytes @ 0x9
   485  0029                     	ds	2
   486  002B                     ?_sprintf:	
   487  002B                     sprintf@f:	
   488                           ; 2 bytes @ 0xB
   489                           
   490                           
   491                           ; 1 bytes @ 0xB
   492  002B                     	ds	7
   493  0032                     ??_sprintf:	
   494                           
   495                           ; 1 bytes @ 0x12
   496  0032                     	ds	3
   497  0035                     sprintf@ap:	
   498                           
   499                           ; 1 bytes @ 0x15
   500  0035                     	ds	1
   501  0036                     sprintf@flag:	
   502                           
   503                           ; 1 bytes @ 0x16
   504  0036                     	ds	1
   505  0037                     sprintf@val:	
   506                           
   507                           ; 2 bytes @ 0x17
   508  0037                     	ds	2
   509  0039                     sprintf@prec:	
   510                           
   511                           ; 1 bytes @ 0x19
   512  0039                     	ds	1
   513  003A                     sprintf@sp:	
   514                           
   515                           ; 1 bytes @ 0x1A
   516  003A                     	ds	1
   517  003B                     sprintf@width:	
   518                           
   519                           ; 2 bytes @ 0x1B
   520  003B                     	ds	2
   521  003D                     sprintf@c:	
   522                           
   523                           ; 1 bytes @ 0x1D
   524  003D                     	ds	1
   525  003E                     ??_main:	
   526                           
   527                           ; 1 bytes @ 0x1E
   528  003E                     	ds	7
   529  0045                     main@j:	
   530                           
   531                           ; 2 bytes @ 0x25
   532  0045                     	ds	2
   533                           
   534                           	psect	maintext
   535  02BF                     __pmaintext:	
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 60 in file "lab4ej1.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  j               2   37[BANK0 ] int 
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   550 ;; Tracked objects:
   551 ;;		On entry : B00/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       2       0       0       0
   557 ;;      Temps:          0       7       0       0       0
   558 ;;      Totals:         0       9       0       0       0
   559 ;;Total ram usage:        9 bytes
   560 ;; Hardware stack levels required when called:    3
   561 ;; This function calls:
   562 ;;		_Adquisicion
   563 ;;		_InitES
   564 ;;		_InitSPI
   565 ;;		_InitTMR1
   566 ;;		_LCD
   567 ;;		_LCD2
   568 ;;		___bmul
   569 ;;		_inicializacion
   570 ;;		_sprintf
   571 ;; This function is called by:
   572 ;;		Startup code after reset
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _main
   578  02BF                     _main:	
   579                           
   580                           ;lab4ej1.c: 62: InitES();
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   584  02BF  120A  118A  266F  120A  118A  	fcall	_InitES
   585                           
   586                           ;lab4ej1.c: 63: inicializacion();
   587  02C4  120A  118A  21A3  120A  118A  	fcall	_inicializacion
   588                           
   589                           ;lab4ej1.c: 64: InitSPI();
   590  02C9  120A  118A  2378  120A  118A  	fcall	_InitSPI
   591                           
   592                           ;lab4ej1.c: 65: InitTMR1();
   593  02CE  120A  118A  2647  120A  118A  	fcall	_InitTMR1
   594  02D3                     l1997:	
   595                           ;lab4ej1.c: 66: while(1)
   596                           
   597                           
   598                           ;lab4ej1.c: 67: {
   599                           ;lab4ej1.c: 68: if(BanderaAdquisicion==1)
   600  02D3  1283               	bcf	3,5	;RP0=0, select bank0
   601  02D4  1303               	bcf	3,6	;RP1=0, select bank0
   602  02D5  0347               	decf	_BanderaAdquisicion,w
   603  02D6  1D03               	btfss	3,2
   604  02D7  2B6B               	goto	l2019
   605                           
   606                           ;lab4ej1.c: 69: {
   607                           ;lab4ej1.c: 70: BanderaAdquisicion=0;
   608  02D8  01C7               	clrf	_BanderaAdquisicion
   609                           
   610                           ;lab4ej1.c: 71: Adquisicion();
   611  02D9  120A  118A  2472  120A  118A  	fcall	_Adquisicion
   612                           
   613                           ;lab4ej1.c: 72: int j=0;
   614  02DE  1283               	bcf	3,5	;RP0=0, select bank0
   615  02DF  1303               	bcf	3,6	;RP1=0, select bank0
   616  02E0  01C5               	clrf	main@j
   617  02E1  01C6               	clrf	main@j+1
   618                           
   619                           ;lab4ej1.c: 73: for(j=0;j<7;j++)
   620  02E2  01C5               	clrf	main@j
   621  02E3  01C6               	clrf	main@j+1
   622  02E4  0846               	movf	main@j+1,w
   623  02E5  3A80               	xorlw	128
   624  02E6  00FF               	movwf	127
   625  02E7  3080               	movlw	128
   626  02E8  027F               	subwf	127,w
   627  02E9  1D03               	skipz
   628  02EA  2AED               	goto	u1595
   629  02EB  3007               	movlw	7
   630  02EC  0245               	subwf	main@j,w
   631  02ED                     u1595:	
   632  02ED  1803               	btfsc	3,0
   633  02EE  2B29               	goto	l2017
   634  02EF                     l2011:	
   635                           
   636                           ;lab4ej1.c: 74: {
   637                           ;lab4ej1.c: 75: bufer[j]=((bufer[j] & 0xF0)>>4) *10 + (bufer[j] & 0x0F);
   638  02EF  1283               	bcf	3,5	;RP0=0, select bank0
   639  02F0  1303               	bcf	3,6	;RP1=0, select bank0
   640  02F1  0845               	movf	main@j,w
   641  02F2  3E48               	addlw	(low (_bufer| 0))& (0+255)
   642  02F3  0084               	movwf	4
   643  02F4  300F               	movlw	15
   644  02F5  1383               	bcf	3,7	;select IRP bank0
   645  02F6  0500               	andwf	0,w
   646  02F7  00BE               	movwf	??_main
   647  02F8  300A               	movlw	10
   648  02F9  00BF               	movwf	??_main+1
   649  02FA  083F               	movf	??_main+1,w
   650  02FB  00F5               	movwf	___bmul@multiplicand
   651  02FC  0845               	movf	main@j,w
   652  02FD  3E48               	addlw	(low (_bufer| 0))& (0+255)
   653  02FE  0084               	movwf	4
   654  02FF  0800               	movf	0,w
   655  0300  00C0               	movwf	??_main+2
   656  0301  3004               	movlw	4
   657  0302                     u1605:	
   658  0302  1003               	clrc
   659  0303  0CC0               	rrf	??_main+2,f
   660  0304  3EFF               	addlw	-1
   661  0305  1D03               	skipz
   662  0306  2B02               	goto	u1605
   663  0307  0840               	movf	??_main+2,w
   664  0308  390F               	andlw	15
   665  0309  120A  118A  265C  120A  118A  	fcall	___bmul
   666  030E  1283               	bcf	3,5	;RP0=0, select bank0
   667  030F  1303               	bcf	3,6	;RP1=0, select bank0
   668  0310  073E               	addwf	??_main,w
   669  0311  00C1               	movwf	??_main+3
   670  0312  0845               	movf	main@j,w
   671  0313  3E48               	addlw	(low (_bufer| 0))& (0+255)
   672  0314  0084               	movwf	4
   673  0315  0841               	movf	??_main+3,w
   674  0316  1383               	bcf	3,7	;select IRP bank0
   675  0317  0080               	movwf	0
   676  0318  3001               	movlw	1
   677  0319  07C5               	addwf	main@j,f
   678  031A  1803               	skipnc
   679  031B  0AC6               	incf	main@j+1,f
   680  031C  3000               	movlw	0
   681  031D  07C6               	addwf	main@j+1,f
   682  031E  0846               	movf	main@j+1,w
   683  031F  3A80               	xorlw	128
   684  0320  00FF               	movwf	127
   685  0321  3080               	movlw	128
   686  0322  027F               	subwf	127,w
   687  0323  1D03               	skipz
   688  0324  2B27               	goto	u1615
   689  0325  3007               	movlw	7
   690  0326  0245               	subwf	main@j,w
   691  0327                     u1615:	
   692  0327  1C03               	skipc
   693  0328  2AEF               	goto	l2011
   694  0329                     l2017:	
   695                           
   696                           ;lab4ej1.c: 76: }
   697                           ;lab4ej1.c: 77: sprintf(linea1,"FECHA %02u/%02u/%02u",bufer[4],bufer[5],bufer[6]);
   698  0329  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   699  032A  1283               	bcf	3,5	;RP0=0, select bank0
   700  032B  1303               	bcf	3,6	;RP1=0, select bank0
   701  032C  00BE               	movwf	??_main
   702  032D  083E               	movf	??_main,w
   703  032E  00AB               	movwf	sprintf@f
   704  032F  084C               	movf	_bufer+4,w
   705  0330  00BF               	movwf	??_main+1
   706  0331  01C0               	clrf	??_main+2
   707  0332  083F               	movf	??_main+1,w
   708  0333  00AC               	movwf	?_sprintf+1
   709  0334  0840               	movf	??_main+2,w
   710  0335  00AD               	movwf	?_sprintf+2
   711  0336  084D               	movf	_bufer+5,w
   712  0337  00C1               	movwf	??_main+3
   713  0338  01C2               	clrf	??_main+4
   714  0339  0841               	movf	??_main+3,w
   715  033A  00AE               	movwf	?_sprintf+3
   716  033B  0842               	movf	??_main+4,w
   717  033C  00AF               	movwf	?_sprintf+4
   718  033D  084E               	movf	_bufer+6,w
   719  033E  00C3               	movwf	??_main+5
   720  033F  01C4               	clrf	??_main+6
   721  0340  0843               	movf	??_main+5,w
   722  0341  00B0               	movwf	?_sprintf+5
   723  0342  0844               	movf	??_main+6,w
   724  0343  00B1               	movwf	?_sprintf+6
   725  0344  3058               	movlw	(low (_linea1| 0))& (0+255)
   726  0345  120A  118A  2029  120A  118A  	fcall	_sprintf
   727                           
   728                           ;lab4ej1.c: 78: sprintf(linea2,"HORA %02u:%02u:%02u",bufer[2],bufer[1],bufer[0]);
   729  034A  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   730  034B  1283               	bcf	3,5	;RP0=0, select bank0
   731  034C  1303               	bcf	3,6	;RP1=0, select bank0
   732  034D  00BE               	movwf	??_main
   733  034E  083E               	movf	??_main,w
   734  034F  00AB               	movwf	sprintf@f
   735  0350  084A               	movf	_bufer+2,w
   736  0351  00BF               	movwf	??_main+1
   737  0352  01C0               	clrf	??_main+2
   738  0353  083F               	movf	??_main+1,w
   739  0354  00AC               	movwf	?_sprintf+1
   740  0355  0840               	movf	??_main+2,w
   741  0356  00AD               	movwf	?_sprintf+2
   742  0357  0849               	movf	_bufer+1,w
   743  0358  00C1               	movwf	??_main+3
   744  0359  01C2               	clrf	??_main+4
   745  035A  0841               	movf	??_main+3,w
   746  035B  00AE               	movwf	?_sprintf+3
   747  035C  0842               	movf	??_main+4,w
   748  035D  00AF               	movwf	?_sprintf+4
   749  035E  0848               	movf	_bufer,w
   750  035F  00C3               	movwf	??_main+5
   751  0360  01C4               	clrf	??_main+6
   752  0361  0843               	movf	??_main+5,w
   753  0362  00B0               	movwf	?_sprintf+5
   754  0363  0844               	movf	??_main+6,w
   755  0364  00B1               	movwf	?_sprintf+6
   756  0365  30A0               	movlw	(low (_linea2| 0))& (0+255)
   757  0366  120A  118A  2029  120A  118A  	fcall	_sprintf
   758  036B                     l2019:	
   759                           
   760                           ;lab4ej1.c: 79: }
   761                           ;lab4ej1.c: 80: LCD(&linea1);
   762  036B  3058               	movlw	(low (_linea1| 0))& (0+255)
   763  036C  120A  118A  242E  120A  118A  	fcall	_LCD
   764                           
   765                           ;lab4ej1.c: 81: LCD2(&linea2);
   766  0371  30A0               	movlw	(low (_linea2| 0))& (0+255)
   767  0372  120A  118A  23DD  120A  118A  	fcall	_LCD2
   768  0377  2AD3               	goto	l1997
   769  0378                     __end_of_main:	
   770                           
   771                           	psect	text1
   772  0029                     __ptext1:	
   773 ;; *************** function _sprintf *****************
   774 ;; Defined at:
   775 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  sp              1    wreg     PTR unsigned char 
   778 ;;		 -> linea2(16), linea1(16), 
   779 ;;  f               1   11[BANK0 ] PTR const unsigned char 
   780 ;;		 -> STR_2(20), STR_1(21), 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  sp              1   26[BANK0 ] PTR unsigned char 
   783 ;;		 -> linea2(16), linea1(16), 
   784 ;;  tmpval          4    0        struct .
   785 ;;  width           2   27[BANK0 ] int 
   786 ;;  val             2   23[BANK0 ] unsigned int 
   787 ;;  cp              2    0        PTR const unsigned char 
   788 ;;  len             2    0        unsigned int 
   789 ;;  c               1   29[BANK0 ] char 
   790 ;;  prec            1   25[BANK0 ] char 
   791 ;;  flag            1   22[BANK0 ] unsigned char 
   792 ;;  ap              1   21[BANK0 ] PTR void [1]
   793 ;;		 -> ?_sprintf(2), 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  2   11[BANK0 ] int 
   796 ;; Registers used:
   797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   803 ;;      Params:         0       7       0       0       0
   804 ;;      Locals:         0       9       0       0       0
   805 ;;      Temps:          0       3       0       0       0
   806 ;;      Totals:         0      19       0       0       0
   807 ;;Total ram usage:       19 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    2
   810 ;; This function calls:
   811 ;;		___lwdiv
   812 ;;		___lwmod
   813 ;;		___wmul
   814 ;;		_isdigit
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _sprintf
   822  0029                     _sprintf:	
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   826                           ;sprintf@sp stored from wreg
   827  0029  1283               	bcf	3,5	;RP0=0, select bank0
   828  002A  1303               	bcf	3,6	;RP1=0, select bank0
   829  002B  00BA               	movwf	sprintf@sp
   830                           
   831                           ;doprnt.c: 494: va_list ap;
   832                           ;doprnt.c: 499: signed char c;
   833                           ;doprnt.c: 501: int width;
   834                           ;doprnt.c: 506: signed char prec;
   835                           ;doprnt.c: 508: unsigned char flag;
   836                           ;doprnt.c: 523: union {
   837                           ;doprnt.c: 524: unsigned long vd;
   838                           ;doprnt.c: 525: double integ;
   839                           ;doprnt.c: 526: } tmpval;
   840                           ;doprnt.c: 528: unsigned int val;
   841                           ;doprnt.c: 529: unsigned len;
   842                           ;doprnt.c: 530: const char * cp;
   843                           ;doprnt.c: 533: *ap = __va_start();
   844  002C  302C               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   845  002D  00B2               	movwf	??_sprintf
   846  002E  0832               	movf	??_sprintf,w
   847  002F  00B5               	movwf	sprintf@ap
   848  0030                     l1969:	
   849                           ;doprnt.c: 536: while(c = *f++) {
   850                           
   851  0030  3001               	movlw	1
   852  0031  1283               	bcf	3,5	;RP0=0, select bank0
   853  0032  1303               	bcf	3,6	;RP1=0, select bank0
   854  0033  07AB               	addwf	sprintf@f,f
   855  0034  30FF               	movlw	-1
   856  0035  072B               	addwf	sprintf@f,w
   857  0036  0084               	movwf	4
   858  0037  120A  118A  2531  120A  118A  	fcall	stringdir
   859  003C  00B2               	movwf	??_sprintf
   860  003D  0832               	movf	??_sprintf,w
   861  003E  00BD               	movwf	sprintf@c
   862  003F  083D               	movf	sprintf@c,w
   863  0040  1903               	btfsc	3,2
   864  0041  299C               	goto	l1971
   865                           
   866                           ;doprnt.c: 538: if(c != '%')
   867  0042  3025               	movlw	37
   868  0043  063D               	xorwf	sprintf@c,w
   869  0044  1903               	btfsc	3,2
   870  0045  2852               	goto	l1893
   871                           
   872                           ;doprnt.c: 540: {
   873                           ;doprnt.c: 541: ((*sp++ = (c)));
   874  0046  083D               	movf	sprintf@c,w
   875  0047  00B2               	movwf	??_sprintf
   876  0048  083A               	movf	sprintf@sp,w
   877  0049  0084               	movwf	4
   878  004A  0832               	movf	??_sprintf,w
   879  004B  1383               	bcf	3,7	;select IRP bank0
   880  004C  0080               	movwf	0
   881  004D  3001               	movlw	1
   882  004E  00B2               	movwf	??_sprintf
   883  004F  0832               	movf	??_sprintf,w
   884  0050  07BA               	addwf	sprintf@sp,f
   885                           
   886                           ;doprnt.c: 542: continue;
   887  0051  2830               	goto	l1969
   888  0052                     l1893:	
   889                           
   890                           ;doprnt.c: 543: }
   891                           ;doprnt.c: 546: width = 0;
   892  0052  01BB               	clrf	sprintf@width
   893  0053  01BC               	clrf	sprintf@width+1
   894                           
   895                           ;doprnt.c: 548: flag = 0;
   896  0054  01B6               	clrf	sprintf@flag
   897                           
   898                           ;doprnt.c: 551: switch(*f) {
   899                           
   900                           ;doprnt.c: 550: for(;;) {
   901  0055  285B               	goto	l1899
   902  0056                     l176:	
   903                           ;doprnt.c: 579: case '0':
   904                           
   905                           
   906                           ;doprnt.c: 580: flag |= 0x04;
   907  0056  1536               	bsf	sprintf@flag,2
   908                           
   909                           ;doprnt.c: 581: f++;
   910  0057  3001               	movlw	1
   911  0058  00B2               	movwf	??_sprintf
   912  0059  0832               	movf	??_sprintf,w
   913  005A  07AB               	addwf	sprintf@f,f
   914  005B                     l1899:	
   915                           ;doprnt.c: 584: }
   916                           
   917                           ;doprnt.c: 582: continue;
   918                           
   919  005B  082B               	movf	sprintf@f,w
   920  005C  0084               	movwf	4
   921  005D  120A  118A  2531  120A  118A  	fcall	stringdir
   922                           
   923                           ; Switch size 1, requested type "space"
   924                           ; Number of cases is 1, Range of values is 48 to 48
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte            4     3 (average)
   928                           ; direct_byte           14    11 (fixed)
   929                           ; jumptable            263     9 (fixed)
   930                           ;	Chosen strategy is simple_byte
   931  0062  3A30               	xorlw	48	; case 48
   932  0063  1903               	skipnz
   933  0064  2856               	goto	l176
   934  0065  2866               	goto	l1901
   935  0066                     l1901:	
   936                           ;doprnt.c: 586: }
   937                           
   938                           ;doprnt.c: 585: break;
   939                           
   940                           
   941                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
   942  0066  082B               	movf	sprintf@f,w
   943  0067  0084               	movwf	4
   944  0068  120A  118A  2531  120A  118A  	fcall	stringdir
   945  006D  120A  118A  267F  120A  118A  	fcall	_isdigit
   946  0072  1C03               	btfss	3,0
   947  0073  28BA               	goto	l1917
   948                           
   949                           ;doprnt.c: 598: width = 0;
   950  0074  1283               	bcf	3,5	;RP0=0, select bank0
   951  0075  1303               	bcf	3,6	;RP1=0, select bank0
   952  0076  01BB               	clrf	sprintf@width
   953  0077  01BC               	clrf	sprintf@width+1
   954  0078                     l1905:	
   955                           ;doprnt.c: 599: do {
   956                           
   957                           
   958                           ;doprnt.c: 600: width *= 10;
   959  0078  300A               	movlw	10
   960  0079  1283               	bcf	3,5	;RP0=0, select bank0
   961  007A  1303               	bcf	3,6	;RP1=0, select bank0
   962  007B  00A0               	movwf	___wmul@multiplier
   963  007C  3000               	movlw	0
   964  007D  00A1               	movwf	___wmul@multiplier+1
   965  007E  083C               	movf	sprintf@width+1,w
   966  007F  00A3               	movwf	___wmul@multiplicand+1
   967  0080  083B               	movf	sprintf@width,w
   968  0081  00A2               	movwf	___wmul@multiplicand
   969  0082  120A  118A  25F0  120A  118A  	fcall	___wmul
   970  0087  1283               	bcf	3,5	;RP0=0, select bank0
   971  0088  1303               	bcf	3,6	;RP1=0, select bank0
   972  0089  0821               	movf	?___wmul+1,w
   973  008A  00BC               	movwf	sprintf@width+1
   974  008B  0820               	movf	?___wmul,w
   975  008C  00BB               	movwf	sprintf@width
   976                           
   977                           ;doprnt.c: 601: width += *f++ - '0';
   978  008D  082B               	movf	sprintf@f,w
   979  008E  0084               	movwf	4
   980  008F  120A  118A  2531  120A  118A  	fcall	stringdir
   981  0094  3ED0               	addlw	208
   982  0095  00B2               	movwf	??_sprintf
   983  0096  30FF               	movlw	255
   984  0097  1803               	skipnc
   985  0098  3000               	movlw	0
   986  0099  00B3               	movwf	??_sprintf+1
   987  009A  0832               	movf	??_sprintf,w
   988  009B  07BB               	addwf	sprintf@width,f
   989  009C  1803               	skipnc
   990  009D  0ABC               	incf	sprintf@width+1,f
   991  009E  0833               	movf	??_sprintf+1,w
   992  009F  07BC               	addwf	sprintf@width+1,f
   993  00A0  3001               	movlw	1
   994  00A1  00B2               	movwf	??_sprintf
   995  00A2  0832               	movf	??_sprintf,w
   996  00A3  07AB               	addwf	sprintf@f,f
   997                           
   998                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
   999  00A4  082B               	movf	sprintf@f,w
  1000  00A5  0084               	movwf	4
  1001  00A6  120A  118A  2531  120A  118A  	fcall	stringdir
  1002  00AB  120A  118A  267F  120A  118A  	fcall	_isdigit
  1003  00B0  1C03               	btfss	3,0
  1004  00B1  28BA               	goto	l1917
  1005  00B2  2878               	goto	l1905
  1006  00B3                     l1913:	
  1007                           ;doprnt.c: 817: case 'u':
  1008                           
  1009                           ;doprnt.c: 813: continue;
  1010                           
  1011                           ;doprnt.c: 802: default:
  1012                           
  1013                           ;doprnt.c: 638: goto alldone;
  1014                           
  1015                           ;doprnt.c: 637: case 0:
  1016                           
  1017                           ;doprnt.c: 608: }
  1018                           ;doprnt.c: 635: switch(c = *f++) {
  1019                           
  1020                           
  1021                           ;doprnt.c: 818: flag |= 0xC0;
  1022  00B3  30C0               	movlw	192
  1023  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1024  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1025  00B6  00B2               	movwf	??_sprintf
  1026  00B7  0832               	movf	??_sprintf,w
  1027  00B8  04B6               	iorwf	sprintf@flag,f
  1028                           
  1029                           ;doprnt.c: 822: }
  1030                           
  1031                           ;doprnt.c: 819: break;
  1032  00B9  28CE               	goto	l1919
  1033  00BA                     l1917:	
  1034  00BA  3001               	movlw	1
  1035  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1036  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1037  00BD  07AB               	addwf	sprintf@f,f
  1038  00BE  30FF               	movlw	-1
  1039  00BF  072B               	addwf	sprintf@f,w
  1040  00C0  0084               	movwf	4
  1041  00C1  120A  118A  2531  120A  118A  	fcall	stringdir
  1042  00C6  00BD               	movwf	sprintf@c
  1043                           
  1044                           ; Switch size 1, requested type "space"
  1045                           ; Number of cases is 2, Range of values is 0 to 117
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            7     4 (average)
  1049                           ; jumptable            260     6 (fixed)
  1050                           ;	Chosen strategy is simple_byte
  1051  00C7  3A00               	xorlw	0	; case 0
  1052  00C8  1903               	skipnz
  1053  00C9  299C               	goto	l1971
  1054  00CA  3A75               	xorlw	117	; case 117
  1055  00CB  1903               	skipnz
  1056  00CC  28B3               	goto	l1913
  1057  00CD  2830               	goto	l1969
  1058  00CE                     l1919:	
  1059                           
  1060                           ;doprnt.c: 1273: {
  1061                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1062  00CE  0835               	movf	sprintf@ap,w
  1063  00CF  0084               	movwf	4
  1064  00D0  1383               	bcf	3,7	;select IRP bank0
  1065  00D1  0800               	movf	0,w
  1066  00D2  00B7               	movwf	sprintf@val
  1067  00D3  0A84               	incf	4,f
  1068  00D4  0800               	movf	0,w
  1069  00D5  00B8               	movwf	sprintf@val+1
  1070  00D6  3002               	movlw	2
  1071  00D7  00B2               	movwf	??_sprintf
  1072  00D8  0832               	movf	??_sprintf,w
  1073  00D9  07B5               	addwf	sprintf@ap,f
  1074                           
  1075                           ;doprnt.c: 1287: }
  1076                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1077  00DA  01BD               	clrf	sprintf@c
  1078  00DB  0ABD               	incf	sprintf@c,f
  1079  00DC  3005               	movlw	5
  1080  00DD  063D               	xorwf	sprintf@c,w
  1081  00DE  1903               	btfsc	3,2
  1082  00DF  2901               	goto	l1935
  1083  00E0                     l1929:	
  1084                           
  1085                           ;doprnt.c: 1306: if(val < dpowers[c])
  1086  00E0  083D               	movf	sprintf@c,w
  1087  00E1  00B2               	movwf	??_sprintf
  1088  00E2  0732               	addwf	??_sprintf,w
  1089  00E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1090  00E4  0084               	movwf	4
  1091  00E5  120A  118A  2531  120A  118A  	fcall	stringdir
  1092  00EA  00B3               	movwf	??_sprintf+1
  1093  00EB  120A  118A  2531  120A  118A  	fcall	stringdir
  1094  00F0  00B4               	movwf	??_sprintf+2
  1095  00F1  0834               	movf	??_sprintf+2,w
  1096  00F2  0238               	subwf	sprintf@val+1,w
  1097  00F3  1D03               	skipz
  1098  00F4  28F7               	goto	u1465
  1099  00F5  0833               	movf	??_sprintf+1,w
  1100  00F6  0237               	subwf	sprintf@val,w
  1101  00F7                     u1465:	
  1102  00F7  1C03               	btfss	3,0
  1103  00F8  2901               	goto	l1935
  1104                           
  1105                           ;doprnt.c: 1307: break;
  1106  00F9  3001               	movlw	1
  1107  00FA  00B2               	movwf	??_sprintf
  1108  00FB  0832               	movf	??_sprintf,w
  1109  00FC  07BD               	addwf	sprintf@c,f
  1110  00FD  3005               	movlw	5
  1111  00FE  063D               	xorwf	sprintf@c,w
  1112  00FF  1D03               	btfss	3,2
  1113  0100  28E0               	goto	l1929
  1114  0101                     l1935:	
  1115                           
  1116                           ;doprnt.c: 1381: if(width > c)
  1117  0101  083D               	movf	sprintf@c,w
  1118  0102  00B2               	movwf	??_sprintf
  1119  0103  01B3               	clrf	??_sprintf+1
  1120  0104  1BB2               	btfsc	??_sprintf,7
  1121  0105  03B3               	decf	??_sprintf+1,f
  1122  0106  0833               	movf	??_sprintf+1,w
  1123  0107  3A80               	xorlw	128
  1124  0108  00B4               	movwf	??_sprintf+2
  1125  0109  083C               	movf	sprintf@width+1,w
  1126  010A  3A80               	xorlw	128
  1127  010B  0234               	subwf	??_sprintf+2,w
  1128  010C  1D03               	skipz
  1129  010D  2910               	goto	u1485
  1130  010E  083B               	movf	sprintf@width,w
  1131  010F  0232               	subwf	??_sprintf,w
  1132  0110                     u1485:	
  1133  0110  1803               	skipnc
  1134  0111  2920               	goto	l1939
  1135                           
  1136                           ;doprnt.c: 1382: width -= c;
  1137  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0114  083D               	movf	sprintf@c,w
  1140  0115  00B2               	movwf	??_sprintf
  1141  0116  01B3               	clrf	??_sprintf+1
  1142  0117  1BB2               	btfsc	??_sprintf,7
  1143  0118  03B3               	decf	??_sprintf+1,f
  1144  0119  0832               	movf	??_sprintf,w
  1145  011A  02BB               	subwf	sprintf@width,f
  1146  011B  0833               	movf	??_sprintf+1,w
  1147  011C  1C03               	skipc
  1148  011D  03BC               	decf	sprintf@width+1,f
  1149  011E  02BC               	subwf	sprintf@width+1,f
  1150  011F  2924               	goto	l1941
  1151  0120                     l1939:	
  1152                           
  1153                           ;doprnt.c: 1383: else
  1154                           ;doprnt.c: 1384: width = 0;
  1155  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0122  01BB               	clrf	sprintf@width
  1158  0123  01BC               	clrf	sprintf@width+1
  1159  0124                     l1941:	
  1160                           
  1161                           ;doprnt.c: 1387: if(flag & 0x04) {
  1162  0124  1D36               	btfss	sprintf@flag,2
  1163  0125  293C               	goto	l1951
  1164  0126                     L2:	
  1165                           
  1166                           ;doprnt.c: 1415: if(width)
  1167  0126  083B               	movf	sprintf@width,w
  1168  0127  043C               	iorwf	sprintf@width+1,w
  1169  0128  1903               	btfsc	3,2
  1170  0129  2955               	goto	l1959
  1171                           
  1172                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1173                           
  1174                           ;doprnt.c: 1416: do
  1175  012A  3030               	movlw	48
  1176  012B  00B2               	movwf	??_sprintf
  1177  012C  083A               	movf	sprintf@sp,w
  1178  012D  0084               	movwf	4
  1179  012E  0832               	movf	??_sprintf,w
  1180  012F  1383               	bcf	3,7	;select IRP bank0
  1181  0130  0080               	movwf	0
  1182  0131  3001               	movlw	1
  1183  0132  00B2               	movwf	??_sprintf
  1184  0133  0832               	movf	??_sprintf,w
  1185  0134  07BA               	addwf	sprintf@sp,f
  1186                           
  1187                           ;doprnt.c: 1418: while(--width);
  1188  0135  30FF               	movlw	255
  1189  0136  07BB               	addwf	sprintf@width,f
  1190  0137  1803               	skipnc
  1191  0138  0ABC               	incf	sprintf@width+1,f
  1192  0139  30FF               	movlw	255
  1193  013A  07BC               	addwf	sprintf@width+1,f
  1194  013B  2926               	goto	L2
  1195  013C                     l1951:	
  1196                           ;doprnt.c: 1420: } else
  1197                           
  1198                           
  1199                           ;doprnt.c: 1422: {
  1200                           ;doprnt.c: 1424: if(width
  1201                           ;doprnt.c: 1428: )
  1202  013C  083B               	movf	sprintf@width,w
  1203  013D  043C               	iorwf	sprintf@width+1,w
  1204  013E  1903               	btfsc	3,2
  1205  013F  2955               	goto	l1959
  1206  0140                     l1953:	
  1207                           ;doprnt.c: 1429: do
  1208                           
  1209                           
  1210                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1211  0140  3020               	movlw	32
  1212  0141  00B2               	movwf	??_sprintf
  1213  0142  083A               	movf	sprintf@sp,w
  1214  0143  0084               	movwf	4
  1215  0144  0832               	movf	??_sprintf,w
  1216  0145  1383               	bcf	3,7	;select IRP bank0
  1217  0146  0080               	movwf	0
  1218  0147  3001               	movlw	1
  1219  0148  00B2               	movwf	??_sprintf
  1220  0149  0832               	movf	??_sprintf,w
  1221  014A  07BA               	addwf	sprintf@sp,f
  1222                           
  1223                           ;doprnt.c: 1431: while(--width);
  1224  014B  30FF               	movlw	255
  1225  014C  07BB               	addwf	sprintf@width,f
  1226  014D  1803               	skipnc
  1227  014E  0ABC               	incf	sprintf@width+1,f
  1228  014F  30FF               	movlw	255
  1229  0150  07BC               	addwf	sprintf@width+1,f
  1230  0151  083B               	movf	sprintf@width,w
  1231  0152  043C               	iorwf	sprintf@width+1,w
  1232  0153  1D03               	btfss	3,2
  1233  0154  2940               	goto	l1953
  1234  0155                     l1959:	
  1235                           
  1236                           ;doprnt.c: 1469: }
  1237                           ;doprnt.c: 1472: prec = c;
  1238  0155  083D               	movf	sprintf@c,w
  1239  0156  00B2               	movwf	??_sprintf
  1240  0157  0832               	movf	??_sprintf,w
  1241  0158  00B9               	movwf	sprintf@prec
  1242  0159                     l1967:	
  1243                           ;doprnt.c: 1474: while(prec--) {
  1244                           
  1245  0159  30FF               	movlw	255
  1246  015A  00B2               	movwf	??_sprintf
  1247  015B  0832               	movf	??_sprintf,w
  1248  015C  07B9               	addwf	sprintf@prec,f
  1249  015D  0A39               	incf	sprintf@prec,w
  1250  015E  1903               	btfsc	3,2
  1251  015F  2830               	goto	l1969
  1252                           
  1253                           ;doprnt.c: 1478: {
  1254                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1255  0160  300A               	movlw	10
  1256  0161  00A7               	movwf	___lwmod@divisor
  1257  0162  3000               	movlw	0
  1258  0163  00A8               	movwf	___lwmod@divisor+1
  1259  0164  0839               	movf	sprintf@prec,w
  1260  0165  00B2               	movwf	??_sprintf
  1261  0166  0732               	addwf	??_sprintf,w
  1262  0167  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1263  0168  0084               	movwf	4
  1264  0169  120A  118A  2531  120A  118A  	fcall	stringdir
  1265  016E  00A0               	movwf	___lwdiv@divisor
  1266  016F  120A  118A  2531  120A  118A  	fcall	stringdir
  1267  0174  00A1               	movwf	___lwdiv@divisor+1
  1268  0175  0838               	movf	sprintf@val+1,w
  1269  0176  00A3               	movwf	___lwdiv@dividend+1
  1270  0177  0837               	movf	sprintf@val,w
  1271  0178  00A2               	movwf	___lwdiv@dividend
  1272  0179  120A  118A  24B6  120A  118A  	fcall	___lwdiv
  1273  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1274  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0180  0821               	movf	?___lwdiv+1,w
  1276  0181  00AA               	movwf	___lwmod@dividend+1
  1277  0182  0820               	movf	?___lwdiv,w
  1278  0183  00A9               	movwf	___lwmod@dividend
  1279  0184  120A  118A  256A  120A  118A  	fcall	___lwmod
  1280  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1281  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1282  018B  0827               	movf	?___lwmod,w
  1283  018C  3E30               	addlw	48
  1284  018D  00B3               	movwf	??_sprintf+1
  1285  018E  0833               	movf	??_sprintf+1,w
  1286  018F  00BD               	movwf	sprintf@c
  1287                           
  1288                           ;doprnt.c: 1523: }
  1289                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1290  0190  083D               	movf	sprintf@c,w
  1291  0191  00B2               	movwf	??_sprintf
  1292  0192  083A               	movf	sprintf@sp,w
  1293  0193  0084               	movwf	4
  1294  0194  0832               	movf	??_sprintf,w
  1295  0195  1383               	bcf	3,7	;select IRP bank0
  1296  0196  0080               	movwf	0
  1297  0197  3001               	movlw	1
  1298  0198  00B2               	movwf	??_sprintf
  1299  0199  0832               	movf	??_sprintf,w
  1300  019A  07BA               	addwf	sprintf@sp,f
  1301  019B  2959               	goto	l1967
  1302  019C                     l1971:	
  1303                           ;doprnt.c: 1525: }
  1304                           ;doprnt.c: 1533: }
  1305                           ;doprnt.c: 1535: alldone:
  1306                           
  1307                           
  1308                           ;doprnt.c: 1538: *sp = 0;
  1309  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1310  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1311  019E  083A               	movf	sprintf@sp,w
  1312  019F  0084               	movwf	4
  1313  01A0  1383               	bcf	3,7	;select IRP bank0
  1314  01A1  0180               	clrf	0
  1315  01A2  0008               	return
  1316  01A3                     __end_of_sprintf:	
  1317                           ;doprnt.c: 1540: return 0;
  1318                           ;	Return value of _sprintf is never used
  1319                           
  1320                           
  1321                           	psect	text2
  1322  067F                     __ptext2:	
  1323 ;; *************** function _isdigit *****************
  1324 ;; Defined at:
  1325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  c               1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  c               1    6[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;		None               void
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         2       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         2       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_sprintf
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _isdigit
  1355  067F                     _isdigit:	
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1359                           ;isdigit@c stored from wreg
  1360  067F  00F6               	movwf	isdigit@c
  1361  0680  01F5               	clrf	_isdigit$645
  1362  0681  303A               	movlw	58
  1363  0682  0276               	subwf	isdigit@c,w
  1364  0683  1803               	skipnc
  1365  0684  2E8B               	goto	l1311
  1366  0685  3030               	movlw	48
  1367  0686  0276               	subwf	isdigit@c,w
  1368  0687  1C03               	skipc
  1369  0688  2E8B               	goto	l1311
  1370  0689  01F5               	clrf	_isdigit$645
  1371  068A  0AF5               	incf	_isdigit$645,f
  1372  068B                     l1311:	
  1373  068B  0C75               	rrf	_isdigit$645,w
  1374  068C  0008               	return
  1375  068D                     __end_of_isdigit:	
  1376                           
  1377                           	psect	text3
  1378  05F0                     __ptext3:	
  1379 ;; *************** function ___wmul *****************
  1380 ;; Defined at:
  1381 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1384 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  product         2    5[COMMON] unsigned int 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  2    0[BANK0 ] unsigned int 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       4       0       0       0
  1397 ;;      Locals:         2       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0
  1399 ;;      Totals:         2       4       0       0       0
  1400 ;;Total ram usage:        6 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_sprintf
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function ___wmul
  1412  05F0                     ___wmul:	
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1416  05F0  01F5               	clrf	___wmul@product
  1417  05F1  01F6               	clrf	___wmul@product+1
  1418  05F2                     l1825:	
  1419  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1420  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1421  05F4  1C20               	btfss	___wmul@multiplier,0
  1422  05F5  2DFC               	goto	l290
  1423  05F6  0822               	movf	___wmul@multiplicand,w
  1424  05F7  07F5               	addwf	___wmul@product,f
  1425  05F8  1803               	skipnc
  1426  05F9  0AF6               	incf	___wmul@product+1,f
  1427  05FA  0823               	movf	___wmul@multiplicand+1,w
  1428  05FB  07F6               	addwf	___wmul@product+1,f
  1429  05FC                     l290:	
  1430  05FC  3001               	movlw	1
  1431  05FD                     u1265:	
  1432  05FD  1003               	clrc
  1433  05FE  0DA2               	rlf	___wmul@multiplicand,f
  1434  05FF  0DA3               	rlf	___wmul@multiplicand+1,f
  1435  0600  3EFF               	addlw	-1
  1436  0601  1D03               	skipz
  1437  0602  2DFD               	goto	u1265
  1438  0603  3001               	movlw	1
  1439  0604                     u1275:	
  1440  0604  1003               	clrc
  1441  0605  0CA1               	rrf	___wmul@multiplier+1,f
  1442  0606  0CA0               	rrf	___wmul@multiplier,f
  1443  0607  3EFF               	addlw	-1
  1444  0608  1D03               	skipz
  1445  0609  2E04               	goto	u1275
  1446  060A  0820               	movf	___wmul@multiplier,w
  1447  060B  0421               	iorwf	___wmul@multiplier+1,w
  1448  060C  1D03               	btfss	3,2
  1449  060D  2DF2               	goto	l1825
  1450  060E  0876               	movf	___wmul@product+1,w
  1451  060F  00A1               	movwf	?___wmul+1
  1452  0610  0875               	movf	___wmul@product,w
  1453  0611  00A0               	movwf	?___wmul
  1454  0612  0008               	return
  1455  0613                     __end_of___wmul:	
  1456                           
  1457                           	psect	text4
  1458  056A                     __ptext4:	
  1459 ;; *************** function ___lwmod *****************
  1460 ;; Defined at:
  1461 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  divisor         2    7[BANK0 ] unsigned int 
  1464 ;;  dividend        2    9[BANK0 ] unsigned int 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  counter         1    7[COMMON] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  2    7[BANK0 ] unsigned int 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       4       0       0       0
  1477 ;;      Locals:         1       0       0       0       0
  1478 ;;      Temps:          1       0       0       0       0
  1479 ;;      Totals:         2       4       0       0       0
  1480 ;;Total ram usage:        6 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_sprintf
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function ___lwmod
  1492  056A                     ___lwmod:	
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1496  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1497  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1498  056C  0827               	movf	___lwmod@divisor,w
  1499  056D  0428               	iorwf	___lwmod@divisor+1,w
  1500  056E  1903               	btfsc	3,2
  1501  056F  2D99               	goto	l1881
  1502  0570  01F7               	clrf	___lwmod@counter
  1503  0571  0AF7               	incf	___lwmod@counter,f
  1504  0572                     l1871:	
  1505  0572  1BA8               	btfsc	___lwmod@divisor+1,7
  1506  0573  2D80               	goto	l1873
  1507  0574  3001               	movlw	1
  1508  0575                     u1375:	
  1509  0575  1003               	clrc
  1510  0576  0DA7               	rlf	___lwmod@divisor,f
  1511  0577  0DA8               	rlf	___lwmod@divisor+1,f
  1512  0578  3EFF               	addlw	-1
  1513  0579  1D03               	skipz
  1514  057A  2D75               	goto	u1375
  1515  057B  3001               	movlw	1
  1516  057C  00F6               	movwf	??___lwmod
  1517  057D  0876               	movf	??___lwmod,w
  1518  057E  07F7               	addwf	___lwmod@counter,f
  1519  057F  2D72               	goto	l1871
  1520  0580                     l1873:	
  1521  0580  0828               	movf	___lwmod@divisor+1,w
  1522  0581  022A               	subwf	___lwmod@dividend+1,w
  1523  0582  1D03               	skipz
  1524  0583  2D86               	goto	u1395
  1525  0584  0827               	movf	___lwmod@divisor,w
  1526  0585  0229               	subwf	___lwmod@dividend,w
  1527  0586                     u1395:	
  1528  0586  1C03               	skipc
  1529  0587  2D8E               	goto	l1877
  1530  0588  0827               	movf	___lwmod@divisor,w
  1531  0589  02A9               	subwf	___lwmod@dividend,f
  1532  058A  0828               	movf	___lwmod@divisor+1,w
  1533  058B  1C03               	skipc
  1534  058C  03AA               	decf	___lwmod@dividend+1,f
  1535  058D  02AA               	subwf	___lwmod@dividend+1,f
  1536  058E                     l1877:	
  1537  058E  3001               	movlw	1
  1538  058F                     u1405:	
  1539  058F  1003               	clrc
  1540  0590  0CA8               	rrf	___lwmod@divisor+1,f
  1541  0591  0CA7               	rrf	___lwmod@divisor,f
  1542  0592  3EFF               	addlw	-1
  1543  0593  1D03               	skipz
  1544  0594  2D8F               	goto	u1405
  1545  0595  3001               	movlw	1
  1546  0596  02F7               	subwf	___lwmod@counter,f
  1547  0597  1D03               	btfss	3,2
  1548  0598  2D80               	goto	l1873
  1549  0599                     l1881:	
  1550  0599  082A               	movf	___lwmod@dividend+1,w
  1551  059A  00A8               	movwf	?___lwmod+1
  1552  059B  0829               	movf	___lwmod@dividend,w
  1553  059C  00A7               	movwf	?___lwmod
  1554  059D  0008               	return
  1555  059E                     __end_of___lwmod:	
  1556                           
  1557                           	psect	text5
  1558  04B6                     __ptext5:	
  1559 ;; *************** function ___lwdiv *****************
  1560 ;; Defined at:
  1561 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  divisor         2    0[BANK0 ] unsigned int 
  1564 ;;  dividend        2    2[BANK0 ] unsigned int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  quotient        2    5[BANK0 ] unsigned int 
  1567 ;;  counter         1    4[BANK0 ] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  2    0[BANK0 ] unsigned int 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       4       0       0       0
  1578 ;;      Locals:         0       3       0       0       0
  1579 ;;      Temps:          1       0       0       0       0
  1580 ;;      Totals:         1       7       0       0       0
  1581 ;;Total ram usage:        8 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; Hardware stack levels required when called:    1
  1584 ;; This function calls:
  1585 ;;		Nothing
  1586 ;; This function is called by:
  1587 ;;		_sprintf
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function ___lwdiv
  1593  04B6                     ___lwdiv:	
  1594                           
  1595                           ;incstack = 0
  1596                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1597  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1598  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1599  04B8  01A5               	clrf	___lwdiv@quotient
  1600  04B9  01A6               	clrf	___lwdiv@quotient+1
  1601  04BA  0820               	movf	___lwdiv@divisor,w
  1602  04BB  0421               	iorwf	___lwdiv@divisor+1,w
  1603  04BC  1903               	btfsc	3,2
  1604  04BD  2CEF               	goto	l1859
  1605  04BE  01A4               	clrf	___lwdiv@counter
  1606  04BF  0AA4               	incf	___lwdiv@counter,f
  1607  04C0                     l1847:	
  1608  04C0  1BA1               	btfsc	___lwdiv@divisor+1,7
  1609  04C1  2CCE               	goto	l1849
  1610  04C2  3001               	movlw	1
  1611  04C3                     u1305:	
  1612  04C3  1003               	clrc
  1613  04C4  0DA0               	rlf	___lwdiv@divisor,f
  1614  04C5  0DA1               	rlf	___lwdiv@divisor+1,f
  1615  04C6  3EFF               	addlw	-1
  1616  04C7  1D03               	skipz
  1617  04C8  2CC3               	goto	u1305
  1618  04C9  3001               	movlw	1
  1619  04CA  00F5               	movwf	??___lwdiv
  1620  04CB  0875               	movf	??___lwdiv,w
  1621  04CC  07A4               	addwf	___lwdiv@counter,f
  1622  04CD  2CC0               	goto	l1847
  1623  04CE                     l1849:	
  1624  04CE  3001               	movlw	1
  1625  04CF                     u1325:	
  1626  04CF  1003               	clrc
  1627  04D0  0DA5               	rlf	___lwdiv@quotient,f
  1628  04D1  0DA6               	rlf	___lwdiv@quotient+1,f
  1629  04D2  3EFF               	addlw	-1
  1630  04D3  1D03               	skipz
  1631  04D4  2CCF               	goto	u1325
  1632  04D5  0821               	movf	___lwdiv@divisor+1,w
  1633  04D6  0223               	subwf	___lwdiv@dividend+1,w
  1634  04D7  1D03               	skipz
  1635  04D8  2CDB               	goto	u1335
  1636  04D9  0820               	movf	___lwdiv@divisor,w
  1637  04DA  0222               	subwf	___lwdiv@dividend,w
  1638  04DB                     u1335:	
  1639  04DB  1C03               	skipc
  1640  04DC  2CE4               	goto	l1855
  1641  04DD  0820               	movf	___lwdiv@divisor,w
  1642  04DE  02A2               	subwf	___lwdiv@dividend,f
  1643  04DF  0821               	movf	___lwdiv@divisor+1,w
  1644  04E0  1C03               	skipc
  1645  04E1  03A3               	decf	___lwdiv@dividend+1,f
  1646  04E2  02A3               	subwf	___lwdiv@dividend+1,f
  1647  04E3  1425               	bsf	___lwdiv@quotient,0
  1648  04E4                     l1855:	
  1649  04E4  3001               	movlw	1
  1650  04E5                     u1345:	
  1651  04E5  1003               	clrc
  1652  04E6  0CA1               	rrf	___lwdiv@divisor+1,f
  1653  04E7  0CA0               	rrf	___lwdiv@divisor,f
  1654  04E8  3EFF               	addlw	-1
  1655  04E9  1D03               	skipz
  1656  04EA  2CE5               	goto	u1345
  1657  04EB  3001               	movlw	1
  1658  04EC  02A4               	subwf	___lwdiv@counter,f
  1659  04ED  1D03               	btfss	3,2
  1660  04EE  2CCE               	goto	l1849
  1661  04EF                     l1859:	
  1662  04EF  0826               	movf	___lwdiv@quotient+1,w
  1663  04F0  00A1               	movwf	?___lwdiv+1
  1664  04F1  0825               	movf	___lwdiv@quotient,w
  1665  04F2  00A0               	movwf	?___lwdiv
  1666  04F3  0008               	return
  1667  04F4                     __end_of___lwdiv:	
  1668                           
  1669                           	psect	text6
  1670  01A3                     __ptext6:	
  1671 ;; *************** function _inicializacion *****************
  1672 ;; Defined at:
  1673 ;;		line 27 in file "LCD.h"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0
  1689 ;;      Temps:          2       0       0       0       0
  1690 ;;      Totals:         2       0       0       0       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_main
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function _inicializacion
  1703  01A3                     _inicializacion:	
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in _inicializacion: [wreg]
  1707  01A3  30C3               	movlw	195
  1708  01A4  00F6               	movwf	??_inicializacion+1
  1709  01A5  30CD               	movlw	205
  1710  01A6  00F5               	movwf	??_inicializacion
  1711  01A7                     u1627:	
  1712  01A7  0BF5               	decfsz	??_inicializacion,f
  1713  01A8  29A7               	goto	u1627
  1714  01A9  0BF6               	decfsz	??_inicializacion+1,f
  1715  01AA  29A7               	goto	u1627
  1716                           
  1717                           ;LCD.h: 29: PORTBbits.RB6=0;
  1718  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1719  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1720  01AD  1306               	bcf	6,6	;volatile
  1721                           
  1722                           ;LCD.h: 30: PORTBbits.RB5=0;
  1723  01AE  1286               	bcf	6,5	;volatile
  1724                           
  1725                           ;LCD.h: 31: PORTBbits.RB0=0;
  1726  01AF  1006               	bcf	6,0	;volatile
  1727                           
  1728                           ;LCD.h: 32: PORTBbits.RB1=0;
  1729  01B0  1086               	bcf	6,1	;volatile
  1730                           
  1731                           ;LCD.h: 33: PORTBbits.RB2=1;
  1732  01B1  1506               	bsf	6,2	;volatile
  1733                           
  1734                           ;LCD.h: 34: PORTBbits.RB3=1;
  1735  01B2  1586               	bsf	6,3	;volatile
  1736                           
  1737                           ;LCD.h: 35: PORTBbits.RB4=1;
  1738  01B3  1606               	bsf	6,4	;volatile
  1739                           
  1740                           ;LCD.h: 36: _delay((unsigned long)((5)*(20000000/4000.0)));
  1741  01B4  3021               	movlw	33
  1742  01B5  00F6               	movwf	??_inicializacion+1
  1743  01B6  3076               	movlw	118
  1744  01B7  00F5               	movwf	??_inicializacion
  1745  01B8                     u1637:	
  1746  01B8  0BF5               	decfsz	??_inicializacion,f
  1747  01B9  29B8               	goto	u1637
  1748  01BA  0BF6               	decfsz	??_inicializacion+1,f
  1749  01BB  29B8               	goto	u1637
  1750  01BC  0000               	nop
  1751                           
  1752                           ;LCD.h: 37: PORTBbits.RB4=0;
  1753  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1754  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1755  01BF  1206               	bcf	6,4	;volatile
  1756                           
  1757                           ;LCD.h: 38: _delay((unsigned long)((5)*(20000000/4000.0)));
  1758  01C0  3021               	movlw	33
  1759  01C1  00F6               	movwf	??_inicializacion+1
  1760  01C2  3076               	movlw	118
  1761  01C3  00F5               	movwf	??_inicializacion
  1762  01C4                     u1647:	
  1763  01C4  0BF5               	decfsz	??_inicializacion,f
  1764  01C5  29C4               	goto	u1647
  1765  01C6  0BF6               	decfsz	??_inicializacion+1,f
  1766  01C7  29C4               	goto	u1647
  1767  01C8  0000               	nop
  1768                           
  1769                           ;LCD.h: 39: PORTBbits.RB6=0;
  1770  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1771  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1772  01CB  1306               	bcf	6,6	;volatile
  1773                           
  1774                           ;LCD.h: 40: PORTBbits.RB5=0;
  1775  01CC  1286               	bcf	6,5	;volatile
  1776                           
  1777                           ;LCD.h: 41: PORTBbits.RB0=0;
  1778  01CD  1006               	bcf	6,0	;volatile
  1779                           
  1780                           ;LCD.h: 42: PORTBbits.RB1=0;
  1781  01CE  1086               	bcf	6,1	;volatile
  1782                           
  1783                           ;LCD.h: 43: PORTBbits.RB2=1;
  1784  01CF  1506               	bsf	6,2	;volatile
  1785                           
  1786                           ;LCD.h: 44: PORTBbits.RB3=1;
  1787  01D0  1586               	bsf	6,3	;volatile
  1788                           
  1789                           ;LCD.h: 45: PORTBbits.RB4=1;
  1790  01D1  1606               	bsf	6,4	;volatile
  1791                           
  1792                           ;LCD.h: 46: _delay((unsigned long)((5)*(20000000/4000.0)));
  1793  01D2  3021               	movlw	33
  1794  01D3  00F6               	movwf	??_inicializacion+1
  1795  01D4  3076               	movlw	118
  1796  01D5  00F5               	movwf	??_inicializacion
  1797  01D6                     u1657:	
  1798  01D6  0BF5               	decfsz	??_inicializacion,f
  1799  01D7  29D6               	goto	u1657
  1800  01D8  0BF6               	decfsz	??_inicializacion+1,f
  1801  01D9  29D6               	goto	u1657
  1802  01DA  0000               	nop
  1803                           
  1804                           ;LCD.h: 47: PORTBbits.RB4=0;
  1805  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1806  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1807  01DD  1206               	bcf	6,4	;volatile
  1808                           
  1809                           ;LCD.h: 48: _delay((unsigned long)((5)*(20000000/4000.0)));
  1810  01DE  3021               	movlw	33
  1811  01DF  00F6               	movwf	??_inicializacion+1
  1812  01E0  3076               	movlw	118
  1813  01E1  00F5               	movwf	??_inicializacion
  1814  01E2                     u1667:	
  1815  01E2  0BF5               	decfsz	??_inicializacion,f
  1816  01E3  29E2               	goto	u1667
  1817  01E4  0BF6               	decfsz	??_inicializacion+1,f
  1818  01E5  29E2               	goto	u1667
  1819  01E6  0000               	nop
  1820                           
  1821                           ;LCD.h: 49: PORTBbits.RB6=0;
  1822  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1823  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1824  01E9  1306               	bcf	6,6	;volatile
  1825                           
  1826                           ;LCD.h: 50: PORTBbits.RB5=0;
  1827  01EA  1286               	bcf	6,5	;volatile
  1828                           
  1829                           ;LCD.h: 51: PORTBbits.RB0=0;
  1830  01EB  1006               	bcf	6,0	;volatile
  1831                           
  1832                           ;LCD.h: 52: PORTBbits.RB1=0;
  1833  01EC  1086               	bcf	6,1	;volatile
  1834                           
  1835                           ;LCD.h: 53: PORTBbits.RB2=1;
  1836  01ED  1506               	bsf	6,2	;volatile
  1837                           
  1838                           ;LCD.h: 54: PORTBbits.RB3=0;
  1839  01EE  1186               	bcf	6,3	;volatile
  1840                           
  1841                           ;LCD.h: 55: PORTBbits.RB4=1;
  1842  01EF  1606               	bsf	6,4	;volatile
  1843                           
  1844                           ;LCD.h: 56: _delay((unsigned long)((5)*(20000000/4000.0)));
  1845  01F0  3021               	movlw	33
  1846  01F1  00F6               	movwf	??_inicializacion+1
  1847  01F2  3076               	movlw	118
  1848  01F3  00F5               	movwf	??_inicializacion
  1849  01F4                     u1677:	
  1850  01F4  0BF5               	decfsz	??_inicializacion,f
  1851  01F5  29F4               	goto	u1677
  1852  01F6  0BF6               	decfsz	??_inicializacion+1,f
  1853  01F7  29F4               	goto	u1677
  1854  01F8  0000               	nop
  1855                           
  1856                           ;LCD.h: 57: PORTBbits.RB4=0;
  1857  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1858  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1859  01FB  1206               	bcf	6,4	;volatile
  1860                           
  1861                           ;LCD.h: 58: _delay((unsigned long)((5)*(20000000/4000.0)));
  1862  01FC  3021               	movlw	33
  1863  01FD  00F6               	movwf	??_inicializacion+1
  1864  01FE  3076               	movlw	118
  1865  01FF  00F5               	movwf	??_inicializacion
  1866  0200                     u1687:	
  1867  0200  0BF5               	decfsz	??_inicializacion,f
  1868  0201  2A00               	goto	u1687
  1869  0202  0BF6               	decfsz	??_inicializacion+1,f
  1870  0203  2A00               	goto	u1687
  1871  0204  0000               	nop
  1872                           
  1873                           ;LCD.h: 59: PORTBbits.RB6=0;
  1874  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0207  1306               	bcf	6,6	;volatile
  1877                           
  1878                           ;LCD.h: 60: PORTBbits.RB5=0;
  1879  0208  1286               	bcf	6,5	;volatile
  1880                           
  1881                           ;LCD.h: 61: PORTBbits.RB0=0;
  1882  0209  1006               	bcf	6,0	;volatile
  1883                           
  1884                           ;LCD.h: 62: PORTBbits.RB1=0;
  1885  020A  1086               	bcf	6,1	;volatile
  1886                           
  1887                           ;LCD.h: 63: PORTBbits.RB2=1;
  1888  020B  1506               	bsf	6,2	;volatile
  1889                           
  1890                           ;LCD.h: 64: PORTBbits.RB3=0;
  1891  020C  1186               	bcf	6,3	;volatile
  1892                           
  1893                           ;LCD.h: 65: PORTBbits.RB4=1;
  1894  020D  1606               	bsf	6,4	;volatile
  1895                           
  1896                           ;LCD.h: 66: _delay((unsigned long)((5)*(20000000/4000.0)));
  1897  020E  3021               	movlw	33
  1898  020F  00F6               	movwf	??_inicializacion+1
  1899  0210  3076               	movlw	118
  1900  0211  00F5               	movwf	??_inicializacion
  1901  0212                     u1697:	
  1902  0212  0BF5               	decfsz	??_inicializacion,f
  1903  0213  2A12               	goto	u1697
  1904  0214  0BF6               	decfsz	??_inicializacion+1,f
  1905  0215  2A12               	goto	u1697
  1906  0216  0000               	nop
  1907                           
  1908                           ;LCD.h: 67: PORTBbits.RB4=0;
  1909  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0219  1206               	bcf	6,4	;volatile
  1912                           
  1913                           ;LCD.h: 68: PORTBbits.RB6=0;
  1914  021A  1306               	bcf	6,6	;volatile
  1915                           
  1916                           ;LCD.h: 69: PORTBbits.RB5=0;
  1917  021B  1286               	bcf	6,5	;volatile
  1918                           
  1919                           ;LCD.h: 70: PORTBbits.RB0=1;
  1920  021C  1406               	bsf	6,0	;volatile
  1921                           
  1922                           ;LCD.h: 71: PORTBbits.RB1=1;
  1923  021D  1486               	bsf	6,1	;volatile
  1924                           
  1925                           ;LCD.h: 72: PORTBbits.RB4=1;
  1926  021E  1606               	bsf	6,4	;volatile
  1927                           
  1928                           ;LCD.h: 73: _delay((unsigned long)((5)*(20000000/4000.0)));
  1929  021F  3021               	movlw	33
  1930  0220  00F6               	movwf	??_inicializacion+1
  1931  0221  3076               	movlw	118
  1932  0222  00F5               	movwf	??_inicializacion
  1933  0223                     u1707:	
  1934  0223  0BF5               	decfsz	??_inicializacion,f
  1935  0224  2A23               	goto	u1707
  1936  0225  0BF6               	decfsz	??_inicializacion+1,f
  1937  0226  2A23               	goto	u1707
  1938  0227  0000               	nop
  1939                           
  1940                           ;LCD.h: 74: PORTBbits.RB4=0;
  1941  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1943  022A  1206               	bcf	6,4	;volatile
  1944                           
  1945                           ;LCD.h: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
  1946  022B  3021               	movlw	33
  1947  022C  00F6               	movwf	??_inicializacion+1
  1948  022D  3076               	movlw	118
  1949  022E  00F5               	movwf	??_inicializacion
  1950  022F                     u1717:	
  1951  022F  0BF5               	decfsz	??_inicializacion,f
  1952  0230  2A2F               	goto	u1717
  1953  0231  0BF6               	decfsz	??_inicializacion+1,f
  1954  0232  2A2F               	goto	u1717
  1955  0233  0000               	nop
  1956                           
  1957                           ;LCD.h: 76: PORTBbits.RB6=0;
  1958  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0236  1306               	bcf	6,6	;volatile
  1961                           
  1962                           ;LCD.h: 77: PORTBbits.RB5=0;
  1963  0237  1286               	bcf	6,5	;volatile
  1964                           
  1965                           ;LCD.h: 78: PORTBbits.RB0=0;
  1966  0238  1006               	bcf	6,0	;volatile
  1967                           
  1968                           ;LCD.h: 79: PORTBbits.RB1=0;
  1969  0239  1086               	bcf	6,1	;volatile
  1970                           
  1971                           ;LCD.h: 80: PORTBbits.RB2=0;
  1972  023A  1106               	bcf	6,2	;volatile
  1973                           
  1974                           ;LCD.h: 81: PORTBbits.RB3=0;
  1975  023B  1186               	bcf	6,3	;volatile
  1976                           
  1977                           ;LCD.h: 82: PORTBbits.RB4=1;
  1978  023C  1606               	bsf	6,4	;volatile
  1979                           
  1980                           ;LCD.h: 83: _delay((unsigned long)((5)*(20000000/4000.0)));
  1981  023D  3021               	movlw	33
  1982  023E  00F6               	movwf	??_inicializacion+1
  1983  023F  3076               	movlw	118
  1984  0240  00F5               	movwf	??_inicializacion
  1985  0241                     u1727:	
  1986  0241  0BF5               	decfsz	??_inicializacion,f
  1987  0242  2A41               	goto	u1727
  1988  0243  0BF6               	decfsz	??_inicializacion+1,f
  1989  0244  2A41               	goto	u1727
  1990  0245  0000               	nop
  1991                           
  1992                           ;LCD.h: 84: PORTBbits.RB4=0;
  1993  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0248  1206               	bcf	6,4	;volatile
  1996                           
  1997                           ;LCD.h: 85: PORTBbits.RB6=0;
  1998  0249  1306               	bcf	6,6	;volatile
  1999                           
  2000                           ;LCD.h: 86: PORTBbits.RB5=0;
  2001  024A  1286               	bcf	6,5	;volatile
  2002                           
  2003                           ;LCD.h: 87: PORTBbits.RB0=1;
  2004  024B  1406               	bsf	6,0	;volatile
  2005                           
  2006                           ;LCD.h: 88: PORTBbits.RB1=0;
  2007  024C  1086               	bcf	6,1	;volatile
  2008                           
  2009                           ;LCD.h: 89: PORTBbits.RB2=0;
  2010  024D  1106               	bcf	6,2	;volatile
  2011                           
  2012                           ;LCD.h: 90: PORTBbits.RB3=0;
  2013  024E  1186               	bcf	6,3	;volatile
  2014                           
  2015                           ;LCD.h: 91: PORTBbits.RB4=1;
  2016  024F  1606               	bsf	6,4	;volatile
  2017                           
  2018                           ;LCD.h: 92: _delay((unsigned long)((5)*(20000000/4000.0)));
  2019  0250  3021               	movlw	33
  2020  0251  00F6               	movwf	??_inicializacion+1
  2021  0252  3076               	movlw	118
  2022  0253  00F5               	movwf	??_inicializacion
  2023  0254                     u1737:	
  2024  0254  0BF5               	decfsz	??_inicializacion,f
  2025  0255  2A54               	goto	u1737
  2026  0256  0BF6               	decfsz	??_inicializacion+1,f
  2027  0257  2A54               	goto	u1737
  2028  0258  0000               	nop
  2029                           
  2030                           ;LCD.h: 93: PORTBbits.RB4=0;
  2031  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2032  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2033  025B  1206               	bcf	6,4	;volatile
  2034                           
  2035                           ;LCD.h: 94: _delay((unsigned long)((5)*(20000000/4000.0)));
  2036  025C  3021               	movlw	33
  2037  025D  00F6               	movwf	??_inicializacion+1
  2038  025E  3076               	movlw	118
  2039  025F  00F5               	movwf	??_inicializacion
  2040  0260                     u1747:	
  2041  0260  0BF5               	decfsz	??_inicializacion,f
  2042  0261  2A60               	goto	u1747
  2043  0262  0BF6               	decfsz	??_inicializacion+1,f
  2044  0263  2A60               	goto	u1747
  2045  0264  0000               	nop
  2046                           
  2047                           ;LCD.h: 95: PORTBbits.RB6=0;
  2048  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0267  1306               	bcf	6,6	;volatile
  2051                           
  2052                           ;LCD.h: 96: PORTBbits.RB5=0;
  2053  0268  1286               	bcf	6,5	;volatile
  2054                           
  2055                           ;LCD.h: 97: PORTBbits.RB0=0;
  2056  0269  1006               	bcf	6,0	;volatile
  2057                           
  2058                           ;LCD.h: 98: PORTBbits.RB1=0;
  2059  026A  1086               	bcf	6,1	;volatile
  2060                           
  2061                           ;LCD.h: 99: PORTBbits.RB2=0;
  2062  026B  1106               	bcf	6,2	;volatile
  2063                           
  2064                           ;LCD.h: 100: PORTBbits.RB3=0;
  2065  026C  1186               	bcf	6,3	;volatile
  2066                           
  2067                           ;LCD.h: 101: PORTBbits.RB4=1;
  2068  026D  1606               	bsf	6,4	;volatile
  2069                           
  2070                           ;LCD.h: 102: _delay((unsigned long)((5)*(20000000/4000.0)));
  2071  026E  3021               	movlw	33
  2072  026F  00F6               	movwf	??_inicializacion+1
  2073  0270  3076               	movlw	118
  2074  0271  00F5               	movwf	??_inicializacion
  2075  0272                     u1757:	
  2076  0272  0BF5               	decfsz	??_inicializacion,f
  2077  0273  2A72               	goto	u1757
  2078  0274  0BF6               	decfsz	??_inicializacion+1,f
  2079  0275  2A72               	goto	u1757
  2080  0276  0000               	nop
  2081                           
  2082                           ;LCD.h: 103: PORTBbits.RB4=0;
  2083  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0279  1206               	bcf	6,4	;volatile
  2086                           
  2087                           ;LCD.h: 104: PORTBbits.RB6=0;
  2088  027A  1306               	bcf	6,6	;volatile
  2089                           
  2090                           ;LCD.h: 105: PORTBbits.RB5=0;
  2091  027B  1286               	bcf	6,5	;volatile
  2092                           
  2093                           ;LCD.h: 106: PORTBbits.RB0=0;
  2094  027C  1006               	bcf	6,0	;volatile
  2095                           
  2096                           ;LCD.h: 107: PORTBbits.RB1=0;
  2097  027D  1086               	bcf	6,1	;volatile
  2098                           
  2099                           ;LCD.h: 108: PORTBbits.RB2=0;
  2100  027E  1106               	bcf	6,2	;volatile
  2101                           
  2102                           ;LCD.h: 109: PORTBbits.RB3=1;
  2103  027F  1586               	bsf	6,3	;volatile
  2104                           
  2105                           ;LCD.h: 110: PORTBbits.RB4=1;
  2106  0280  1606               	bsf	6,4	;volatile
  2107                           
  2108                           ;LCD.h: 111: _delay((unsigned long)((5)*(20000000/4000.0)));
  2109  0281  3021               	movlw	33
  2110  0282  00F6               	movwf	??_inicializacion+1
  2111  0283  3076               	movlw	118
  2112  0284  00F5               	movwf	??_inicializacion
  2113  0285                     u1767:	
  2114  0285  0BF5               	decfsz	??_inicializacion,f
  2115  0286  2A85               	goto	u1767
  2116  0287  0BF6               	decfsz	??_inicializacion+1,f
  2117  0288  2A85               	goto	u1767
  2118  0289  0000               	nop
  2119                           
  2120                           ;LCD.h: 112: PORTBbits.RB4=0;
  2121  028A  1283               	bcf	3,5	;RP0=0, select bank0
  2122  028B  1303               	bcf	3,6	;RP1=0, select bank0
  2123  028C  1206               	bcf	6,4	;volatile
  2124                           
  2125                           ;LCD.h: 113: _delay((unsigned long)((5)*(20000000/4000.0)));
  2126  028D  3021               	movlw	33
  2127  028E  00F6               	movwf	??_inicializacion+1
  2128  028F  3076               	movlw	118
  2129  0290  00F5               	movwf	??_inicializacion
  2130  0291                     u1777:	
  2131  0291  0BF5               	decfsz	??_inicializacion,f
  2132  0292  2A91               	goto	u1777
  2133  0293  0BF6               	decfsz	??_inicializacion+1,f
  2134  0294  2A91               	goto	u1777
  2135  0295  0000               	nop
  2136                           
  2137                           ;LCD.h: 114: PORTBbits.RB6=0;
  2138  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0298  1306               	bcf	6,6	;volatile
  2141                           
  2142                           ;LCD.h: 115: PORTBbits.RB5=0;
  2143  0299  1286               	bcf	6,5	;volatile
  2144                           
  2145                           ;LCD.h: 116: PORTBbits.RB0=0;
  2146  029A  1006               	bcf	6,0	;volatile
  2147                           
  2148                           ;LCD.h: 117: PORTBbits.RB1=0;
  2149  029B  1086               	bcf	6,1	;volatile
  2150                           
  2151                           ;LCD.h: 118: PORTBbits.RB2=0;
  2152  029C  1106               	bcf	6,2	;volatile
  2153                           
  2154                           ;LCD.h: 119: PORTBbits.RB3=0;
  2155  029D  1186               	bcf	6,3	;volatile
  2156                           
  2157                           ;LCD.h: 120: PORTBbits.RB4=1;
  2158  029E  1606               	bsf	6,4	;volatile
  2159                           
  2160                           ;LCD.h: 121: _delay((unsigned long)((5)*(20000000/4000.0)));
  2161  029F  3021               	movlw	33
  2162  02A0  00F6               	movwf	??_inicializacion+1
  2163  02A1  3076               	movlw	118
  2164  02A2  00F5               	movwf	??_inicializacion
  2165  02A3                     u1787:	
  2166  02A3  0BF5               	decfsz	??_inicializacion,f
  2167  02A4  2AA3               	goto	u1787
  2168  02A5  0BF6               	decfsz	??_inicializacion+1,f
  2169  02A6  2AA3               	goto	u1787
  2170  02A7  0000               	nop
  2171                           
  2172                           ;LCD.h: 122: PORTBbits.RB4=0;
  2173  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2174  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2175  02AA  1206               	bcf	6,4	;volatile
  2176                           
  2177                           ;LCD.h: 123: PORTBbits.RB6=0;
  2178  02AB  1306               	bcf	6,6	;volatile
  2179                           
  2180                           ;LCD.h: 124: PORTBbits.RB5=0;
  2181  02AC  1286               	bcf	6,5	;volatile
  2182                           
  2183                           ;LCD.h: 125: PORTBbits.RB0=1;
  2184  02AD  1406               	bsf	6,0	;volatile
  2185                           
  2186                           ;LCD.h: 126: PORTBbits.RB1=1;
  2187  02AE  1486               	bsf	6,1	;volatile
  2188                           
  2189                           ;LCD.h: 127: PORTBbits.RB2=1;
  2190  02AF  1506               	bsf	6,2	;volatile
  2191                           
  2192                           ;LCD.h: 128: PORTBbits.RB3=0;
  2193  02B0  1186               	bcf	6,3	;volatile
  2194                           
  2195                           ;LCD.h: 129: PORTBbits.RB4=1;
  2196  02B1  1606               	bsf	6,4	;volatile
  2197                           
  2198                           ;LCD.h: 130: _delay((unsigned long)((5)*(20000000/4000.0)));
  2199  02B2  3021               	movlw	33
  2200  02B3  00F6               	movwf	??_inicializacion+1
  2201  02B4  3076               	movlw	118
  2202  02B5  00F5               	movwf	??_inicializacion
  2203  02B6                     u1797:	
  2204  02B6  0BF5               	decfsz	??_inicializacion,f
  2205  02B7  2AB6               	goto	u1797
  2206  02B8  0BF6               	decfsz	??_inicializacion+1,f
  2207  02B9  2AB6               	goto	u1797
  2208  02BA  0000               	nop
  2209                           
  2210                           ;LCD.h: 131: PORTBbits.RB4=0;
  2211  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2212  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2213  02BD  1206               	bcf	6,4	;volatile
  2214  02BE  0008               	return
  2215  02BF                     __end_of_inicializacion:	
  2216                           
  2217                           	psect	text7
  2218  065C                     __ptext7:	
  2219 ;; *************** function ___bmul *****************
  2220 ;; Defined at:
  2221 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  multiplier      1    wreg     unsigned char 
  2224 ;;  multiplicand    1    5[COMMON] unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2227 ;;  product         1    0[BANK0 ] unsigned char 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  1    wreg      unsigned char 
  2230 ;; Registers used:
  2231 ;;		wreg, status,2, status,0
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         1       0       0       0       0
  2238 ;;      Locals:         0       2       0       0       0
  2239 ;;      Temps:          1       0       0       0       0
  2240 ;;      Totals:         2       2       0       0       0
  2241 ;;Total ram usage:        4 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    1
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function ___bmul
  2253  065C                     ___bmul:	
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2257                           ;___bmul@multiplier stored from wreg
  2258  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2259  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2260  065E  00A1               	movwf	___bmul@multiplier
  2261  065F  01A0               	clrf	___bmul@product
  2262  0660                     l1977:	
  2263  0660  1C21               	btfss	___bmul@multiplier,0
  2264  0661  2E66               	goto	l1981
  2265  0662  0875               	movf	___bmul@multiplicand,w
  2266  0663  00F6               	movwf	??___bmul
  2267  0664  0876               	movf	??___bmul,w
  2268  0665  07A0               	addwf	___bmul@product,f
  2269  0666                     l1981:	
  2270  0666  1003               	clrc
  2271  0667  0DF5               	rlf	___bmul@multiplicand,f
  2272  0668  1003               	clrc
  2273  0669  0CA1               	rrf	___bmul@multiplier,f
  2274  066A  0821               	movf	___bmul@multiplier,w
  2275  066B  1D03               	btfss	3,2
  2276  066C  2E60               	goto	l1977
  2277  066D  0820               	movf	___bmul@product,w
  2278  066E  0008               	return
  2279  066F                     __end_of___bmul:	
  2280                           
  2281                           	psect	text8
  2282  03DD                     __ptext8:	
  2283 ;; *************** function _LCD2 *****************
  2284 ;; Defined at:
  2285 ;;		line 195 in file "LCD.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  p2              1    wreg     PTR unsigned char 
  2288 ;;		 -> linea2(16), 
  2289 ;; Auto vars:     Size  Location     Type
  2290 ;;  p2              1    2[BANK0 ] PTR unsigned char 
  2291 ;;		 -> linea2(16), 
  2292 ;;  letraenvio      1    3[BANK0 ] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         0       0       0       0       0
  2303 ;;      Locals:         0       2       0       0       0
  2304 ;;      Temps:          0       2       0       0       0
  2305 ;;      Totals:         0       4       0       0       0
  2306 ;;Total ram usage:        4 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    2
  2309 ;; This function calls:
  2310 ;;		_bajar
  2311 ;;		_envio
  2312 ;;		_invertir
  2313 ;;		_subir
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _LCD2
  2321  03DD                     _LCD2:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _LCD2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2325                           ;LCD2@p2 stored from wreg
  2326  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2327  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2328  03DF  00A2               	movwf	LCD2@p2
  2329                           
  2330                           ;LCD.h: 197: unsigned char letraenvio=0;
  2331  03E0  01A3               	clrf	LCD2@letraenvio
  2332                           
  2333                           ;LCD.h: 198: bajar();
  2334  03E1  120A  118A  25C7  120A  118A  	fcall	_bajar
  2335  03E6                     l1591:	
  2336                           ;LCD.h: 199: while(*p2!=0)
  2337                           
  2338  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2339  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2340  03E8  0822               	movf	LCD2@p2,w
  2341  03E9  0084               	movwf	4
  2342  03EA  1383               	bcf	3,7	;select IRP bank0
  2343  03EB  0800               	movf	0,w
  2344  03EC  1903               	btfsc	3,2
  2345  03ED  2C2A               	goto	l1593
  2346                           
  2347                           ;LCD.h: 200: {
  2348                           ;LCD.h: 201: letraenvio = *p2;
  2349  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2350  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2351  03F0  0822               	movf	LCD2@p2,w
  2352  03F1  0084               	movwf	4
  2353  03F2  1383               	bcf	3,7	;select IRP bank0
  2354  03F3  0800               	movf	0,w
  2355  03F4  00A0               	movwf	??_LCD2
  2356  03F5  0820               	movf	??_LCD2,w
  2357  03F6  00A3               	movwf	LCD2@letraenvio
  2358                           
  2359                           ;LCD.h: 202: letraenvio= letraenvio>>4;
  2360  03F7  0823               	movf	LCD2@letraenvio,w
  2361  03F8  00A0               	movwf	??_LCD2
  2362  03F9  3004               	movlw	4
  2363  03FA                     u865:	
  2364  03FA  1003               	clrc
  2365  03FB  0CA0               	rrf	??_LCD2,f
  2366  03FC  3EFF               	addlw	-1
  2367  03FD  1D03               	skipz
  2368  03FE  2BFA               	goto	u865
  2369  03FF  0820               	movf	??_LCD2,w
  2370  0400  00A1               	movwf	??_LCD2+1
  2371  0401  0821               	movf	??_LCD2+1,w
  2372  0402  00A3               	movwf	LCD2@letraenvio
  2373                           
  2374                           ;LCD.h: 203: invertir(letraenvio);
  2375  0403  0823               	movf	LCD2@letraenvio,w
  2376  0404  120A  118A  24F4  120A  118A  	fcall	_invertir
  2377                           
  2378                           ;LCD.h: 204: envio();
  2379  0409  120A  118A  2630  120A  118A  	fcall	_envio
  2380                           
  2381                           ;LCD.h: 205: letraenvio= *p2 & 0x0F;
  2382  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2383  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0410  0822               	movf	LCD2@p2,w
  2385  0411  0084               	movwf	4
  2386  0412  1383               	bcf	3,7	;select IRP bank0
  2387  0413  0800               	movf	0,w
  2388  0414  390F               	andlw	15
  2389  0415  00A0               	movwf	??_LCD2
  2390  0416  0820               	movf	??_LCD2,w
  2391  0417  00A3               	movwf	LCD2@letraenvio
  2392                           
  2393                           ;LCD.h: 206: invertir(letraenvio);
  2394  0418  0823               	movf	LCD2@letraenvio,w
  2395  0419  120A  118A  24F4  120A  118A  	fcall	_invertir
  2396                           
  2397                           ;LCD.h: 207: envio();
  2398  041E  120A  118A  2630  120A  118A  	fcall	_envio
  2399                           
  2400                           ;LCD.h: 208: p2++;
  2401  0423  3001               	movlw	1
  2402  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0426  00A0               	movwf	??_LCD2
  2405  0427  0820               	movf	??_LCD2,w
  2406  0428  07A2               	addwf	LCD2@p2,f
  2407  0429  2BE6               	goto	l1591
  2408  042A                     l1593:	
  2409                           
  2410                           ;LCD.h: 209: }
  2411                           ;LCD.h: 210: subir();
  2412  042A  120A  118A  259E   	fcall	_subir
  2413  042D  0008               	return
  2414  042E                     __end_of_LCD2:	
  2415                           
  2416                           	psect	text9
  2417  059E                     __ptext9:	
  2418 ;; *************** function _subir *****************
  2419 ;; Defined at:
  2420 ;;		line 157 in file "LCD.h"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;		None
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      void 
  2427 ;; Registers used:
  2428 ;;		wreg
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       0       0       0       0
  2435 ;;      Locals:         0       0       0       0       0
  2436 ;;      Temps:          2       0       0       0       0
  2437 ;;      Totals:         2       0       0       0       0
  2438 ;;Total ram usage:        2 bytes
  2439 ;; Hardware stack levels used:    1
  2440 ;; Hardware stack levels required when called:    1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_LCD2
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           
  2449                           ;psect for function _subir
  2450  059E                     _subir:	
  2451                           
  2452                           ;LCD.h: 159: PORTBbits.RB5=0;
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _subir: [wreg]
  2456  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2457  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2458  05A0  1286               	bcf	6,5	;volatile
  2459                           
  2460                           ;LCD.h: 160: PORTBbits.RB6=0;
  2461  05A1  1306               	bcf	6,6	;volatile
  2462                           
  2463                           ;LCD.h: 161: PORTBbits.RB0=1;
  2464  05A2  1406               	bsf	6,0	;volatile
  2465                           
  2466                           ;LCD.h: 162: PORTBbits.RB1=0;
  2467  05A3  1086               	bcf	6,1	;volatile
  2468                           
  2469                           ;LCD.h: 163: PORTBbits.RB2=0;
  2470  05A4  1106               	bcf	6,2	;volatile
  2471                           
  2472                           ;LCD.h: 164: PORTBbits.RB3=0;
  2473  05A5  1186               	bcf	6,3	;volatile
  2474                           
  2475                           ;LCD.h: 165: PORTBbits.RB4=1;
  2476  05A6  1606               	bsf	6,4	;volatile
  2477                           
  2478                           ;LCD.h: 166: _delay((unsigned long)((5)*(20000000/4000.0)));
  2479  05A7  3021               	movlw	33
  2480  05A8  00F6               	movwf	??_subir+1
  2481  05A9  3076               	movlw	118
  2482  05AA  00F5               	movwf	??_subir
  2483  05AB                     u1807:	
  2484  05AB  0BF5               	decfsz	??_subir,f
  2485  05AC  2DAB               	goto	u1807
  2486  05AD  0BF6               	decfsz	??_subir+1,f
  2487  05AE  2DAB               	goto	u1807
  2488  05AF  0000               	nop
  2489                           
  2490                           ;LCD.h: 167: PORTBbits.RB4=0;
  2491  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2492  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2493  05B2  1206               	bcf	6,4	;volatile
  2494                           
  2495                           ;LCD.h: 168: PORTBbits.RB5=0;
  2496  05B3  1286               	bcf	6,5	;volatile
  2497                           
  2498                           ;LCD.h: 169: PORTBbits.RB6=0;
  2499  05B4  1306               	bcf	6,6	;volatile
  2500                           
  2501                           ;LCD.h: 170: PORTBbits.RB0=0;
  2502  05B5  1006               	bcf	6,0	;volatile
  2503                           
  2504                           ;LCD.h: 171: PORTBbits.RB1=0;
  2505  05B6  1086               	bcf	6,1	;volatile
  2506                           
  2507                           ;LCD.h: 172: PORTBbits.RB2=0;
  2508  05B7  1106               	bcf	6,2	;volatile
  2509                           
  2510                           ;LCD.h: 173: PORTBbits.RB3=0;
  2511  05B8  1186               	bcf	6,3	;volatile
  2512                           
  2513                           ;LCD.h: 174: PORTBbits.RB4=1;
  2514  05B9  1606               	bsf	6,4	;volatile
  2515                           
  2516                           ;LCD.h: 175: _delay((unsigned long)((5)*(20000000/4000.0)));
  2517  05BA  3021               	movlw	33
  2518  05BB  00F6               	movwf	??_subir+1
  2519  05BC  3076               	movlw	118
  2520  05BD  00F5               	movwf	??_subir
  2521  05BE                     u1817:	
  2522  05BE  0BF5               	decfsz	??_subir,f
  2523  05BF  2DBE               	goto	u1817
  2524  05C0  0BF6               	decfsz	??_subir+1,f
  2525  05C1  2DBE               	goto	u1817
  2526  05C2  0000               	nop
  2527                           
  2528                           ;LCD.h: 176: PORTBbits.RB4=0;
  2529  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2530  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  2531  05C5  1206               	bcf	6,4	;volatile
  2532  05C6  0008               	return
  2533  05C7                     __end_of_subir:	
  2534                           
  2535                           	psect	text10
  2536  05C7                     __ptext10:	
  2537 ;; *************** function _bajar *****************
  2538 ;; Defined at:
  2539 ;;		line 135 in file "LCD.h"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          2       0       0       0       0
  2556 ;;      Totals:         2       0       0       0       0
  2557 ;;Total ram usage:        2 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_LCD2
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _bajar
  2569  05C7                     _bajar:	
  2570                           
  2571                           ;LCD.h: 137: PORTBbits.RB5=0;
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _bajar: [wreg]
  2575  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  2576  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  2577  05C9  1286               	bcf	6,5	;volatile
  2578                           
  2579                           ;LCD.h: 138: PORTBbits.RB6=0;
  2580  05CA  1306               	bcf	6,6	;volatile
  2581                           
  2582                           ;LCD.h: 139: PORTBbits.RB0=1;
  2583  05CB  1406               	bsf	6,0	;volatile
  2584                           
  2585                           ;LCD.h: 140: PORTBbits.RB1=1;
  2586  05CC  1486               	bsf	6,1	;volatile
  2587                           
  2588                           ;LCD.h: 141: PORTBbits.RB2=0;
  2589  05CD  1106               	bcf	6,2	;volatile
  2590                           
  2591                           ;LCD.h: 142: PORTBbits.RB3=0;
  2592  05CE  1186               	bcf	6,3	;volatile
  2593                           
  2594                           ;LCD.h: 143: PORTBbits.RB4=1;
  2595  05CF  1606               	bsf	6,4	;volatile
  2596                           
  2597                           ;LCD.h: 144: _delay((unsigned long)((5)*(20000000/4000.0)));
  2598  05D0  3021               	movlw	33
  2599  05D1  00F6               	movwf	??_bajar+1
  2600  05D2  3076               	movlw	118
  2601  05D3  00F5               	movwf	??_bajar
  2602  05D4                     u1827:	
  2603  05D4  0BF5               	decfsz	??_bajar,f
  2604  05D5  2DD4               	goto	u1827
  2605  05D6  0BF6               	decfsz	??_bajar+1,f
  2606  05D7  2DD4               	goto	u1827
  2607  05D8  0000               	nop
  2608                           
  2609                           ;LCD.h: 145: PORTBbits.RB4=0;
  2610  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2611  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2612  05DB  1206               	bcf	6,4	;volatile
  2613                           
  2614                           ;LCD.h: 146: PORTBbits.RB5=0;
  2615  05DC  1286               	bcf	6,5	;volatile
  2616                           
  2617                           ;LCD.h: 147: PORTBbits.RB6=0;
  2618  05DD  1306               	bcf	6,6	;volatile
  2619                           
  2620                           ;LCD.h: 148: PORTBbits.RB0=0;
  2621  05DE  1006               	bcf	6,0	;volatile
  2622                           
  2623                           ;LCD.h: 149: PORTBbits.RB1=0;
  2624  05DF  1086               	bcf	6,1	;volatile
  2625                           
  2626                           ;LCD.h: 150: PORTBbits.RB2=0;
  2627  05E0  1106               	bcf	6,2	;volatile
  2628                           
  2629                           ;LCD.h: 151: PORTBbits.RB3=0;
  2630  05E1  1186               	bcf	6,3	;volatile
  2631                           
  2632                           ;LCD.h: 152: PORTBbits.RB4=1;
  2633  05E2  1606               	bsf	6,4	;volatile
  2634                           
  2635                           ;LCD.h: 153: _delay((unsigned long)((5)*(20000000/4000.0)));
  2636  05E3  3021               	movlw	33
  2637  05E4  00F6               	movwf	??_bajar+1
  2638  05E5  3076               	movlw	118
  2639  05E6  00F5               	movwf	??_bajar
  2640  05E7                     u1837:	
  2641  05E7  0BF5               	decfsz	??_bajar,f
  2642  05E8  2DE7               	goto	u1837
  2643  05E9  0BF6               	decfsz	??_bajar+1,f
  2644  05EA  2DE7               	goto	u1837
  2645  05EB  0000               	nop
  2646                           
  2647                           ;LCD.h: 154: PORTBbits.RB4=0;
  2648  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  2649  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  2650  05EE  1206               	bcf	6,4	;volatile
  2651  05EF  0008               	return
  2652  05F0                     __end_of_bajar:	
  2653                           
  2654                           	psect	text11
  2655  042E                     __ptext11:	
  2656 ;; *************** function _LCD *****************
  2657 ;; Defined at:
  2658 ;;		line 179 in file "LCD.h"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  p1              1    wreg     PTR unsigned char 
  2661 ;;		 -> linea1(16), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  p1              1    2[BANK0 ] PTR unsigned char 
  2664 ;;		 -> linea1(16), 
  2665 ;;  letraenvio      1    3[BANK0 ] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2675 ;;      Params:         0       0       0       0       0
  2676 ;;      Locals:         0       2       0       0       0
  2677 ;;      Temps:          0       2       0       0       0
  2678 ;;      Totals:         0       4       0       0       0
  2679 ;;Total ram usage:        4 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    2
  2682 ;; This function calls:
  2683 ;;		_envio
  2684 ;;		_invertir
  2685 ;; This function is called by:
  2686 ;;		_main
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           
  2691                           ;psect for function _LCD
  2692  042E                     _LCD:	
  2693                           
  2694                           ;incstack = 0
  2695                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2696                           ;LCD@p1 stored from wreg
  2697  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2698  042F  1303               	bcf	3,6	;RP1=0, select bank0
  2699  0430  00A2               	movwf	LCD@p1
  2700                           
  2701                           ;LCD.h: 181: unsigned char letraenvio=0;
  2702  0431  01A3               	clrf	LCD@letraenvio
  2703  0432                     l1569:	
  2704                           ;LCD.h: 182: while(*p1!=0)
  2705                           
  2706  0432  0822               	movf	LCD@p1,w
  2707  0433  0084               	movwf	4
  2708  0434  1383               	bcf	3,7	;select IRP bank0
  2709  0435  0800               	movf	0,w
  2710  0436  1903               	btfsc	3,2
  2711  0437  0008               	return
  2712                           
  2713                           ;LCD.h: 183: {
  2714                           ;LCD.h: 184: letraenvio = *p1;
  2715  0438  0822               	movf	LCD@p1,w
  2716  0439  0084               	movwf	4
  2717  043A  1383               	bcf	3,7	;select IRP bank0
  2718  043B  0800               	movf	0,w
  2719  043C  00A0               	movwf	??_LCD
  2720  043D  0820               	movf	??_LCD,w
  2721  043E  00A3               	movwf	LCD@letraenvio
  2722                           
  2723                           ;LCD.h: 185: letraenvio= letraenvio>>4;
  2724  043F  0823               	movf	LCD@letraenvio,w
  2725  0440  00A0               	movwf	??_LCD
  2726  0441  3004               	movlw	4
  2727  0442                     u845:	
  2728  0442  1003               	clrc
  2729  0443  0CA0               	rrf	??_LCD,f
  2730  0444  3EFF               	addlw	-1
  2731  0445  1D03               	skipz
  2732  0446  2C42               	goto	u845
  2733  0447  0820               	movf	??_LCD,w
  2734  0448  00A1               	movwf	??_LCD+1
  2735  0449  0821               	movf	??_LCD+1,w
  2736  044A  00A3               	movwf	LCD@letraenvio
  2737                           
  2738                           ;LCD.h: 186: invertir(letraenvio);
  2739  044B  0823               	movf	LCD@letraenvio,w
  2740  044C  120A  118A  24F4  120A  118A  	fcall	_invertir
  2741                           
  2742                           ;LCD.h: 187: envio();
  2743  0451  120A  118A  2630  120A  118A  	fcall	_envio
  2744                           
  2745                           ;LCD.h: 188: letraenvio=*p1 & 0x0F;
  2746  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0458  0822               	movf	LCD@p1,w
  2749  0459  0084               	movwf	4
  2750  045A  1383               	bcf	3,7	;select IRP bank0
  2751  045B  0800               	movf	0,w
  2752  045C  390F               	andlw	15
  2753  045D  00A0               	movwf	??_LCD
  2754  045E  0820               	movf	??_LCD,w
  2755  045F  00A3               	movwf	LCD@letraenvio
  2756                           
  2757                           ;LCD.h: 189: invertir(letraenvio);
  2758  0460  0823               	movf	LCD@letraenvio,w
  2759  0461  120A  118A  24F4  120A  118A  	fcall	_invertir
  2760                           
  2761                           ;LCD.h: 190: envio();
  2762  0466  120A  118A  2630  120A  118A  	fcall	_envio
  2763                           
  2764                           ;LCD.h: 191: p1++;
  2765  046B  3001               	movlw	1
  2766  046C  1283               	bcf	3,5	;RP0=0, select bank0
  2767  046D  1303               	bcf	3,6	;RP1=0, select bank0
  2768  046E  00A0               	movwf	??_LCD
  2769  046F  0820               	movf	??_LCD,w
  2770  0470  07A2               	addwf	LCD@p1,f
  2771  0471  2C32               	goto	l1569
  2772  0472                     __end_of_LCD:	
  2773                           
  2774                           	psect	text12
  2775  04F4                     __ptext12:	
  2776 ;; *************** function _invertir *****************
  2777 ;; Defined at:
  2778 ;;		line 9 in file "LCD.h"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  entrada         1    wreg     unsigned char 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  entrada         1    7[COMMON] unsigned char 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         1       0       0       0       0
  2794 ;;      Temps:          2       0       0       0       0
  2795 ;;      Totals:         3       0       0       0       0
  2796 ;;Total ram usage:        3 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    1
  2799 ;; This function calls:
  2800 ;;		Nothing
  2801 ;; This function is called by:
  2802 ;;		_LCD
  2803 ;;		_LCD2
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _invertir
  2809  04F4                     _invertir:	
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _invertir: [wreg+status,2+status,0]
  2813                           ;invertir@entrada stored from wreg
  2814  04F4  00F7               	movwf	invertir@entrada
  2815                           
  2816                           ;LCD.h: 11: PORTBbits.RB3= entrada & 0b00000001;
  2817  04F5  0877               	movf	invertir@entrada,w
  2818  04F6  3901               	andlw	1
  2819  04F7  00F5               	movwf	??_invertir
  2820  04F8  0DF5               	rlf	??_invertir,f
  2821  04F9  0DF5               	rlf	??_invertir,f
  2822  04FA  0DF5               	rlf	??_invertir,f
  2823  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2824  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2825  04FD  0806               	movf	6,w	;volatile
  2826  04FE  0675               	xorwf	??_invertir,w
  2827  04FF  39F7               	andlw	-9
  2828  0500  0675               	xorwf	??_invertir,w
  2829  0501  0086               	movwf	6	;volatile
  2830                           
  2831                           ;LCD.h: 12: PORTBbits.RB2= (entrada & 0b00000010)>>1;
  2832  0502  0877               	movf	invertir@entrada,w
  2833  0503  00F5               	movwf	??_invertir
  2834  0504  1003               	clrc
  2835  0505  0C75               	rrf	??_invertir,w
  2836  0506  3901               	andlw	1
  2837  0507  00F6               	movwf	??_invertir+1
  2838  0508  0DF6               	rlf	??_invertir+1,f
  2839  0509  0DF6               	rlf	??_invertir+1,f
  2840  050A  0806               	movf	6,w	;volatile
  2841  050B  0676               	xorwf	??_invertir+1,w
  2842  050C  39FB               	andlw	-5
  2843  050D  0676               	xorwf	??_invertir+1,w
  2844  050E  0086               	movwf	6	;volatile
  2845                           
  2846                           ;LCD.h: 13: PORTBbits.RB1= (entrada & 0b00000100)>>2;
  2847  050F  0877               	movf	invertir@entrada,w
  2848  0510  00F5               	movwf	??_invertir
  2849  0511  3002               	movlw	2
  2850  0512                     u635:	
  2851  0512  1003               	clrc
  2852  0513  0CF5               	rrf	??_invertir,f
  2853  0514  3EFF               	addlw	-1
  2854  0515  1D03               	skipz
  2855  0516  2D12               	goto	u635
  2856  0517  0875               	movf	??_invertir,w
  2857  0518  3901               	andlw	1
  2858  0519  00F6               	movwf	??_invertir+1
  2859  051A  0DF6               	rlf	??_invertir+1,f
  2860  051B  0806               	movf	6,w	;volatile
  2861  051C  0676               	xorwf	??_invertir+1,w
  2862  051D  39FD               	andlw	-3
  2863  051E  0676               	xorwf	??_invertir+1,w
  2864  051F  0086               	movwf	6	;volatile
  2865                           
  2866                           ;LCD.h: 14: PORTBbits.RB0= (entrada & 0b00001000)>>3;
  2867  0520  0877               	movf	invertir@entrada,w
  2868  0521  00F5               	movwf	??_invertir
  2869  0522  3003               	movlw	3
  2870  0523                     u645:	
  2871  0523  1003               	clrc
  2872  0524  0CF5               	rrf	??_invertir,f
  2873  0525  3EFF               	addlw	-1
  2874  0526  1D03               	skipz
  2875  0527  2D23               	goto	u645
  2876  0528  3001               	movlw	1
  2877  0529  0575               	andwf	??_invertir,w
  2878  052A  00F6               	movwf	??_invertir+1
  2879  052B  0806               	movf	6,w	;volatile
  2880  052C  0676               	xorwf	??_invertir+1,w
  2881  052D  39FE               	andlw	-2
  2882  052E  0676               	xorwf	??_invertir+1,w
  2883  052F  0086               	movwf	6	;volatile
  2884  0530  0008               	return
  2885  0531                     __end_of_invertir:	
  2886                           
  2887                           	psect	text13
  2888  0630                     __ptext13:	
  2889 ;; *************** function _envio *****************
  2890 ;; Defined at:
  2891 ;;		line 17 in file "LCD.h"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0
  2907 ;;      Temps:          2       0       0       0       0
  2908 ;;      Totals:         2       0       0       0       0
  2909 ;;Total ram usage:        2 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_LCD
  2916 ;;		_LCD2
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function _envio
  2922  0630                     _envio:	
  2923                           
  2924                           ;LCD.h: 19: PORTBbits.RB6=1;
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _envio: [wreg]
  2928  0630  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0631  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0632  1706               	bsf	6,6	;volatile
  2931                           
  2932                           ;LCD.h: 20: PORTBbits.RB5=0;
  2933  0633  1286               	bcf	6,5	;volatile
  2934                           
  2935                           ;LCD.h: 21: _delay((unsigned long)((1)*(20000000/4000.0)));
  2936  0634  3007               	movlw	7
  2937  0635  00F6               	movwf	??_envio+1
  2938  0636  307D               	movlw	125
  2939  0637  00F5               	movwf	??_envio
  2940  0638                     u1847:	
  2941  0638  0BF5               	decfsz	??_envio,f
  2942  0639  2E38               	goto	u1847
  2943  063A  0BF6               	decfsz	??_envio+1,f
  2944  063B  2E38               	goto	u1847
  2945                           
  2946                           ;LCD.h: 22: PORTBbits.RB4=1;
  2947  063C  1283               	bcf	3,5	;RP0=0, select bank0
  2948  063D  1303               	bcf	3,6	;RP1=0, select bank0
  2949  063E  1606               	bsf	6,4	;volatile
  2950                           
  2951                           ;LCD.h: 23: _delay((unsigned long)((2)*(20000000/4000000.0)));
  2952  063F  3003               	movlw	3
  2953  0640  00F5               	movwf	??_envio
  2954  0641                     u1857:	
  2955  0641  0BF5               	decfsz	??_envio,f
  2956  0642  2E41               	goto	u1857
  2957                           
  2958                           ;LCD.h: 24: PORTBbits.RB4=0;
  2959  0643  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0644  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0645  1206               	bcf	6,4	;volatile
  2962  0646  0008               	return
  2963  0647                     __end_of_envio:	
  2964                           
  2965                           	psect	text14
  2966  0647                     __ptext14:	
  2967 ;; *************** function _InitTMR1 *****************
  2968 ;; Defined at:
  2969 ;;		line 98 in file "lab4ej1.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2983 ;;      Params:         0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    1
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _InitTMR1
  2999  0647                     _InitTMR1:	
  3000                           
  3001                           ;lab4ej1.c: 100: T1CON=T1CON | 0x30;
  3002                           
  3003                           ;incstack = 0
  3004                           ; Regs used in _InitTMR1: [wreg+status,2]
  3005  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0649  0810               	movf	16,w	;volatile
  3008  064A  3830               	iorlw	48
  3009  064B  0090               	movwf	16	;volatile
  3010                           
  3011                           ;lab4ej1.c: 101: T1CONbits.TMR1CS = 0;
  3012  064C  1090               	bcf	16,1	;volatile
  3013                           
  3014                           ;lab4ej1.c: 102: T1CONbits.TMR1GE = 0;
  3015  064D  1310               	bcf	16,6	;volatile
  3016                           
  3017                           ;lab4ej1.c: 103: TMR1H = 0x0B;
  3018  064E  300B               	movlw	11
  3019  064F  008F               	movwf	15	;volatile
  3020                           
  3021                           ;lab4ej1.c: 104: TMR1L = 0xDC;
  3022  0650  30DC               	movlw	220
  3023  0651  008E               	movwf	14	;volatile
  3024                           
  3025                           ;lab4ej1.c: 105: PIR1bits.TMR1IF = 0;
  3026  0652  100C               	bcf	12,0	;volatile
  3027                           
  3028                           ;lab4ej1.c: 106: INTCONbits.GIE = 1;
  3029  0653  178B               	bsf	11,7	;volatile
  3030                           
  3031                           ;lab4ej1.c: 107: INTCONbits.PEIE = 1;
  3032  0654  170B               	bsf	11,6	;volatile
  3033                           
  3034                           ;lab4ej1.c: 108: PIE1bits.TMR1IE = 1;
  3035  0655  1683               	bsf	3,5	;RP0=1, select bank1
  3036  0656  1303               	bcf	3,6	;RP1=0, select bank1
  3037  0657  140C               	bsf	12,0	;volatile
  3038                           
  3039                           ;lab4ej1.c: 109: T1CONbits.TMR1ON = 1;
  3040  0658  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0659  1303               	bcf	3,6	;RP1=0, select bank0
  3042  065A  1410               	bsf	16,0	;volatile
  3043  065B  0008               	return
  3044  065C                     __end_of_InitTMR1:	
  3045                           
  3046                           	psect	text15
  3047  0378                     __ptext15:	
  3048 ;; *************** function _InitSPI *****************
  3049 ;; Defined at:
  3050 ;;		line 111 in file "lab4ej1.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0
  3066 ;;      Temps:          2       0       0       0       0
  3067 ;;      Totals:         2       0       0       0       0
  3068 ;;Total ram usage:        2 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_main
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           
  3079                           ;psect for function _InitSPI
  3080  0378                     _InitSPI:	
  3081                           
  3082                           ;lab4ej1.c: 113: SSPSTAT=0b00000000;
  3083                           
  3084                           ;incstack = 0
  3085                           ; Regs used in _InitSPI: [wreg+status,2]
  3086  0378  1683               	bsf	3,5	;RP0=1, select bank1
  3087  0379  1303               	bcf	3,6	;RP1=0, select bank1
  3088  037A  0194               	clrf	20	;volatile
  3089                           
  3090                           ;lab4ej1.c: 114: SSPCON=0b11100000;
  3091  037B  30E0               	movlw	224
  3092  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3093  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3094  037E  0094               	movwf	20	;volatile
  3095                           
  3096                           ;lab4ej1.c: 116: PORTCbits.RC0=1;
  3097  037F  1407               	bsf	7,0	;volatile
  3098                           
  3099                           ;lab4ej1.c: 117: SSPBUF=0x8f;
  3100  0380  308F               	movlw	143
  3101  0381  0093               	movwf	19	;volatile
  3102  0382                     l116:	
  3103                           ;lab4ej1.c: 118: while(SSPSTATbits.BF==0);
  3104                           
  3105  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3106  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3107  0384  1C14               	btfss	20,0	;volatile
  3108  0385  2B82               	goto	l116
  3109                           
  3110                           ;lab4ej1.c: 119: SSPBUF=0;
  3111  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0388  0193               	clrf	19	;volatile
  3114  0389                     l119:	
  3115                           ;lab4ej1.c: 120: while(SSPSTATbits.BF==0);
  3116                           
  3117  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3118  038A  1303               	bcf	3,6	;RP1=0, select bank1
  3119  038B  1C14               	btfss	20,0	;volatile
  3120  038C  2B89               	goto	l119
  3121                           
  3122                           ;lab4ej1.c: 121: PORTCbits.RC0=0;
  3123  038D  1283               	bcf	3,5	;RP0=0, select bank0
  3124  038E  1303               	bcf	3,6	;RP1=0, select bank0
  3125  038F  1007               	bcf	7,0	;volatile
  3126                           
  3127                           ;lab4ej1.c: 128: _delay((unsigned long)((1)*(20000000/4000.0)));
  3128  0390  3007               	movlw	7
  3129  0391  00F6               	movwf	??_InitSPI+1
  3130  0392  307D               	movlw	125
  3131  0393  00F5               	movwf	??_InitSPI
  3132  0394                     u1867:	
  3133  0394  0BF5               	decfsz	??_InitSPI,f
  3134  0395  2B94               	goto	u1867
  3135  0396  0BF6               	decfsz	??_InitSPI+1,f
  3136  0397  2B94               	goto	u1867
  3137                           
  3138                           ;lab4ej1.c: 129: PORTCbits.RC0=1;
  3139  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3141  039A  1407               	bsf	7,0	;volatile
  3142                           
  3143                           ;lab4ej1.c: 130: SSPBUF=0x80;
  3144  039B  3080               	movlw	128
  3145  039C  0093               	movwf	19	;volatile
  3146  039D                     l122:	
  3147                           ;lab4ej1.c: 131: while(SSPSTATbits.BF==0);
  3148                           
  3149  039D  1683               	bsf	3,5	;RP0=1, select bank1
  3150  039E  1303               	bcf	3,6	;RP1=0, select bank1
  3151  039F  1C14               	btfss	20,0	;volatile
  3152  03A0  2B9D               	goto	l122
  3153                           
  3154                           ;lab4ej1.c: 132: SSPBUF=0x20;
  3155  03A1  3020               	movlw	32
  3156  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3157  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3158  03A4  0093               	movwf	19	;volatile
  3159  03A5                     l125:	
  3160                           ;lab4ej1.c: 133: while(SSPSTATbits.BF==0);
  3161                           
  3162  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  3163  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  3164  03A7  1C14               	btfss	20,0	;volatile
  3165  03A8  2BA5               	goto	l125
  3166                           
  3167                           ;lab4ej1.c: 134: SSPBUF=0x20;
  3168  03A9  3020               	movlw	32
  3169  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  3170  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  3171  03AC  0093               	movwf	19	;volatile
  3172  03AD                     l128:	
  3173                           ;lab4ej1.c: 135: while(SSPSTATbits.BF==0);
  3174                           
  3175  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  3176  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  3177  03AF  1C14               	btfss	20,0	;volatile
  3178  03B0  2BAD               	goto	l128
  3179                           
  3180                           ;lab4ej1.c: 136: SSPBUF=0x20;
  3181  03B1  3020               	movlw	32
  3182  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  3183  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  3184  03B4  0093               	movwf	19	;volatile
  3185  03B5                     l131:	
  3186                           ;lab4ej1.c: 137: while(SSPSTATbits.BF==0);
  3187                           
  3188  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3189  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3190  03B7  1C14               	btfss	20,0	;volatile
  3191  03B8  2BB5               	goto	l131
  3192                           
  3193                           ;lab4ej1.c: 138: SSPBUF=0x04;
  3194  03B9  3004               	movlw	4
  3195  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3196  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3197  03BC  0093               	movwf	19	;volatile
  3198  03BD                     l134:	
  3199                           ;lab4ej1.c: 139: while(SSPSTATbits.BF==0);
  3200                           
  3201  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  3202  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  3203  03BF  1C14               	btfss	20,0	;volatile
  3204  03C0  2BBD               	goto	l134
  3205                           
  3206                           ;lab4ej1.c: 140: SSPBUF=0x24;
  3207  03C1  3024               	movlw	36
  3208  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  3209  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  3210  03C4  0093               	movwf	19	;volatile
  3211  03C5                     l137:	
  3212                           ;lab4ej1.c: 141: while(SSPSTATbits.BF==0);
  3213                           
  3214  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  3215  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  3216  03C7  1C14               	btfss	20,0	;volatile
  3217  03C8  2BC5               	goto	l137
  3218                           
  3219                           ;lab4ej1.c: 142: SSPBUF=0x05;
  3220  03C9  3005               	movlw	5
  3221  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3222  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3223  03CC  0093               	movwf	19	;volatile
  3224  03CD                     l140:	
  3225                           ;lab4ej1.c: 143: while(SSPSTATbits.BF==0);
  3226                           
  3227  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  3228  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  3229  03CF  1C14               	btfss	20,0	;volatile
  3230  03D0  2BCD               	goto	l140
  3231                           
  3232                           ;lab4ej1.c: 144: SSPBUF=0x18;
  3233  03D1  3018               	movlw	24
  3234  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3235  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3236  03D4  0093               	movwf	19	;volatile
  3237  03D5                     l143:	
  3238                           ;lab4ej1.c: 145: while(SSPSTATbits.BF==0);
  3239                           
  3240  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3241  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  3242  03D7  1C14               	btfss	20,0	;volatile
  3243  03D8  2BD5               	goto	l143
  3244                           
  3245                           ;lab4ej1.c: 146: PORTCbits.RC0=0;
  3246  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3247  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3248  03DB  1007               	bcf	7,0	;volatile
  3249  03DC  0008               	return
  3250  03DD                     __end_of_InitSPI:	
  3251                           
  3252                           	psect	text16
  3253  066F                     __ptext16:	
  3254 ;; *************** function _InitES *****************
  3255 ;; Defined at:
  3256 ;;		line 85 in file "lab4ej1.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		status,2
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3270 ;;      Params:         0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0
  3273 ;;      Totals:         0       0       0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used:    1
  3276 ;; Hardware stack levels required when called:    1
  3277 ;; This function calls:
  3278 ;;		Nothing
  3279 ;; This function is called by:
  3280 ;;		_main
  3281 ;; This function uses a non-reentrant model
  3282 ;;
  3283                           
  3284                           
  3285                           ;psect for function _InitES
  3286  066F                     _InitES:	
  3287                           
  3288                           ;lab4ej1.c: 87: ANSEL=0;
  3289                           
  3290                           ;incstack = 0
  3291                           ; Regs used in _InitES: [status,2]
  3292  066F  1683               	bsf	3,5	;RP0=1, select bank3
  3293  0670  1703               	bsf	3,6	;RP1=1, select bank3
  3294  0671  0188               	clrf	8	;volatile
  3295                           
  3296                           ;lab4ej1.c: 88: ANSELH=0;
  3297  0672  0189               	clrf	9	;volatile
  3298                           
  3299                           ;lab4ej1.c: 89: TRISCbits.TRISC0=0;
  3300  0673  1683               	bsf	3,5	;RP0=1, select bank1
  3301  0674  1303               	bcf	3,6	;RP1=0, select bank1
  3302  0675  1007               	bcf	7,0	;volatile
  3303                           
  3304                           ;lab4ej1.c: 90: TRISCbits.TRISC3=0;
  3305  0676  1187               	bcf	7,3	;volatile
  3306                           
  3307                           ;lab4ej1.c: 91: TRISCbits.TRISC4=1;
  3308  0677  1607               	bsf	7,4	;volatile
  3309                           
  3310                           ;lab4ej1.c: 92: TRISCbits.TRISC5=0;
  3311  0678  1287               	bcf	7,5	;volatile
  3312                           
  3313                           ;lab4ej1.c: 93: TRISB=0;
  3314  0679  0186               	clrf	6	;volatile
  3315                           
  3316                           ;lab4ej1.c: 94: PORTB=0;
  3317  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3318  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3319  067C  0186               	clrf	6	;volatile
  3320                           
  3321                           ;lab4ej1.c: 95: PORTC=0;
  3322  067D  0187               	clrf	7	;volatile
  3323  067E  0008               	return
  3324  067F                     __end_of_InitES:	
  3325                           
  3326                           	psect	text17
  3327  0472                     __ptext17:	
  3328 ;; *************** function _Adquisicion *****************
  3329 ;; Defined at:
  3330 ;;		line 149 in file "lab4ej1.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  i               2    6[COMMON] int 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       0       0       0       0
  3345 ;;      Locals:         2       0       0       0       0
  3346 ;;      Temps:          1       0       0       0       0
  3347 ;;      Totals:         3       0       0       0       0
  3348 ;;Total ram usage:        3 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    1
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           
  3359                           ;psect for function _Adquisicion
  3360  0472                     _Adquisicion:	
  3361                           
  3362                           ;lab4ej1.c: 151: int i=0;
  3363                           
  3364                           ;incstack = 0
  3365                           ; Regs used in _Adquisicion: [wreg-fsr0h+status,2+status,0+btemp+1]
  3366  0472  01F6               	clrf	Adquisicion@i
  3367  0473  01F7               	clrf	Adquisicion@i+1
  3368                           
  3369                           ;lab4ej1.c: 152: PORTCbits.RC0=1;
  3370  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0476  1407               	bsf	7,0	;volatile
  3373                           
  3374                           ;lab4ej1.c: 153: SSPBUF=0;
  3375  0477  0193               	clrf	19	;volatile
  3376  0478                     l149:	
  3377                           ;lab4ej1.c: 154: while(SSPSTATbits.BF==0);
  3378                           
  3379  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3380  0479  1303               	bcf	3,6	;RP1=0, select bank1
  3381  047A  1C14               	btfss	20,0	;volatile
  3382  047B  2C78               	goto	l149
  3383                           
  3384                           ;lab4ej1.c: 155: SSPBUF=0b11111111;
  3385  047C  30FF               	movlw	255
  3386  047D  1283               	bcf	3,5	;RP0=0, select bank0
  3387  047E  1303               	bcf	3,6	;RP1=0, select bank0
  3388  047F  0093               	movwf	19	;volatile
  3389  0480                     l152:	
  3390                           ;lab4ej1.c: 156: while(SSPSTATbits.BF==0);
  3391                           
  3392  0480  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0481  1303               	bcf	3,6	;RP1=0, select bank1
  3394  0482  1C14               	btfss	20,0	;volatile
  3395  0483  2C80               	goto	l152
  3396                           
  3397                           ;lab4ej1.c: 157: for (i=0;i<7;i++)
  3398  0484  01F6               	clrf	Adquisicion@i
  3399  0485  01F7               	clrf	Adquisicion@i+1
  3400  0486  0877               	movf	Adquisicion@i+1,w
  3401  0487  3A80               	xorlw	128
  3402  0488  00FF               	movwf	127
  3403  0489  3080               	movlw	128
  3404  048A  027F               	subwf	127,w
  3405  048B  1D03               	skipz
  3406  048C  2C8F               	goto	u1005
  3407  048D  3007               	movlw	7
  3408  048E  0276               	subwf	Adquisicion@i,w
  3409  048F                     u1005:	
  3410  048F  1803               	btfsc	3,0
  3411  0490  2CB2               	goto	l156
  3412  0491                     l1665:	
  3413                           
  3414                           ;lab4ej1.c: 158: {
  3415                           ;lab4ej1.c: 159: bufer[i]=SSPBUF;
  3416  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0493  0813               	movf	19,w	;volatile
  3419  0494  00F5               	movwf	??_Adquisicion
  3420  0495  0876               	movf	Adquisicion@i,w
  3421  0496  3E48               	addlw	(low (_bufer| 0))& (0+255)
  3422  0497  0084               	movwf	4
  3423  0498  0875               	movf	??_Adquisicion,w
  3424  0499  1383               	bcf	3,7	;select IRP bank0
  3425  049A  0080               	movwf	0
  3426                           
  3427                           ;lab4ej1.c: 160: SSPBUF=0xf2;
  3428  049B  30F2               	movlw	242
  3429  049C  0093               	movwf	19	;volatile
  3430  049D                     l157:	
  3431                           ;lab4ej1.c: 161: while(SSPSTATbits.BF==0);
  3432                           
  3433  049D  1683               	bsf	3,5	;RP0=1, select bank1
  3434  049E  1303               	bcf	3,6	;RP1=0, select bank1
  3435  049F  1C14               	btfss	20,0	;volatile
  3436  04A0  2C9D               	goto	l157
  3437  04A1  3001               	movlw	1
  3438  04A2  07F6               	addwf	Adquisicion@i,f
  3439  04A3  1803               	skipnc
  3440  04A4  0AF7               	incf	Adquisicion@i+1,f
  3441  04A5  3000               	movlw	0
  3442  04A6  07F7               	addwf	Adquisicion@i+1,f
  3443  04A7  0877               	movf	Adquisicion@i+1,w
  3444  04A8  3A80               	xorlw	128
  3445  04A9  00FF               	movwf	127
  3446  04AA  3080               	movlw	128
  3447  04AB  027F               	subwf	127,w
  3448  04AC  1D03               	skipz
  3449  04AD  2CB0               	goto	u1025
  3450  04AE  3007               	movlw	7
  3451  04AF  0276               	subwf	Adquisicion@i,w
  3452  04B0                     u1025:	
  3453  04B0  1C03               	skipc
  3454  04B1  2C91               	goto	l1665
  3455  04B2                     l156:	
  3456                           
  3457                           ;lab4ej1.c: 162: }
  3458                           ;lab4ej1.c: 163: PORTCbits.RC0=0;
  3459  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3460  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3461  04B4  1007               	bcf	7,0	;volatile
  3462  04B5  0008               	return
  3463  04B6                     __end_of_Adquisicion:	
  3464                           
  3465                           	psect	text18
  3466  0613                     __ptext18:	
  3467 ;; *************** function _rutinainterrupciones *****************
  3468 ;; Defined at:
  3469 ;;		line 39 in file "lab4ej1.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          5       0       0       0       0
  3486 ;;      Totals:         5       0       0       0       0
  3487 ;;Total ram usage:        5 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		Interrupt level 1
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           
  3497                           ;psect for function _rutinainterrupciones
  3498  0613                     _rutinainterrupciones:	
  3499                           
  3500                           ;lab4ej1.c: 41: if(PIR1bits.TMR1IF==1)
  3501  0613  1C0C               	btfss	12,0	;volatile
  3502  0614  2E25               	goto	i1l96
  3503                           
  3504                           ;lab4ej1.c: 42: {
  3505                           ;lab4ej1.c: 43: PIR1bits.TMR1IF=0;
  3506  0615  100C               	bcf	12,0	;volatile
  3507                           
  3508                           ;lab4ej1.c: 44: Contador++;
  3509  0616  3001               	movlw	1
  3510  0617  00F0               	movwf	??_rutinainterrupciones
  3511  0618  0870               	movf	??_rutinainterrupciones,w
  3512  0619  07F8               	addwf	_Contador,f
  3513                           
  3514                           ;lab4ej1.c: 45: TMR1=3036;
  3515  061A  300B               	movlw	11
  3516  061B  008F               	movwf	15	;volatile
  3517  061C  30DC               	movlw	220
  3518  061D  008E               	movwf	14	;volatile
  3519                           
  3520                           ;lab4ej1.c: 46: if(Contador==10)
  3521  061E  300A               	movlw	10
  3522  061F  0678               	xorwf	_Contador,w
  3523  0620  1D03               	btfss	3,2
  3524  0621  2E25               	goto	i1l96
  3525                           
  3526                           ;lab4ej1.c: 47: {
  3527                           ;lab4ej1.c: 48: Contador=0;
  3528  0622  01F8               	clrf	_Contador
  3529                           
  3530                           ;lab4ej1.c: 49: BanderaAdquisicion=1;
  3531  0623  01C7               	clrf	_BanderaAdquisicion
  3532  0624  0AC7               	incf	_BanderaAdquisicion,f
  3533  0625                     i1l96:	
  3534  0625  0874               	movf	??_rutinainterrupciones+4,w
  3535  0626  00FF               	movwf	127
  3536  0627  0873               	movf	??_rutinainterrupciones+3,w
  3537  0628  008A               	movwf	10
  3538  0629  0872               	movf	??_rutinainterrupciones+2,w
  3539  062A  0084               	movwf	4
  3540  062B  0E71               	swapf	(??_rutinainterrupciones+1)^(0+-128),w
  3541  062C  0083               	movwf	3
  3542  062D  0EFE               	swapf	126,f
  3543  062E  0E7E               	swapf	126,w
  3544  062F  0009               	retfie
  3545  0630                     __end_of_rutinainterrupciones:	
  3546  007E                     btemp	set	126	;btemp
  3547  007E                     wtemp0	set	126
  3548                           
  3549                           	psect	intentry
  3550  0004                     __pintentry:	
  3551                           ;incstack = 0
  3552                           ; Regs used in _rutinainterrupciones: [wreg+status,2+status,0]
  3553                           
  3554  0004                     interrupt_function:	
  3555  007E                     saved_w	set	btemp
  3556  0004  00FE               	movwf	btemp
  3557  0005  0E03               	swapf	3,w
  3558  0006  00F1               	movwf	??_rutinainterrupciones+1
  3559  0007  0804               	movf	4,w
  3560  0008  00F2               	movwf	??_rutinainterrupciones+2
  3561  0009  080A               	movf	10,w
  3562  000A  00F3               	movwf	??_rutinainterrupciones+3
  3563  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3564  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3565  000D  087F               	movf	btemp+1,w
  3566  000E  00F4               	movwf	??_rutinainterrupciones+4
  3567  000F  120A  118A  2E13   	ljmp	_rutinainterrupciones


Data Sizes:
    Strings     41
    Constant    10
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     39      72
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[20]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> linea2(BANK1[16]), linea1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD2@p2	PTR unsigned char  size(1) Largest target is 16
		 -> linea2(BANK1[16]), 

    LCD@p1	PTR unsigned char  size(1) Largest target is 16
		 -> linea1(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_Adquisicion
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD2->_invertir
    _LCD->_invertir

Critical Paths under _rutinainterrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _rutinainterrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutinainterrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutinainterrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinainterrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    3379
                                             30 BANK0      9     9      0
                        _Adquisicion
                             _InitES
                            _InitSPI
                           _InitTMR1
                                _LCD
                               _LCD2
                             ___bmul
                     _inicializacion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    2423
                                             11 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     290
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     386
                                              6 COMMON     2     2      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     395
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     213
                                              5 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD2                                                 4     4      0     255
                                              0 BANK0      4     4      0
                              _bajar
                              _envio
                           _invertir
                              _subir
 ---------------------------------------------------------------------------------
 (2) _subir                                                2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bajar                                                2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  4     4      0     255
                                              0 BANK0      4     4      0
                              _envio
                           _invertir
 ---------------------------------------------------------------------------------
 (2) _invertir                                             3     3      0      88
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _envio                                                2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSPI                                              2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitES                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adquisicion                                          3     3      0      69
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _rutinainterrupciones                                 5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adquisicion
   _InitES
   _InitSPI
   _InitTMR1
   _LCD
     _envio
     _invertir
   _LCD2
     _bajar
     _envio
     _invertir
     _subir
   ___bmul
   _inicializacion
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _rutinainterrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      61       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      61      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Dec 14 16:14:50 2019

                            pc 0002                 ___bmul@product 0020                    __CFG_CP$OFF 0000  
                  _SSPSTATbits 0094                             fsr 0004            ___wmul@multiplicand 0022  
           _BanderaAdquisicion 0047                            l122 039D                            l131 03B5  
                          l140 03CD                            l116 0382                            l125 03A5  
                          l134 03BD                            l143 03D5                            l119 0389  
                          l152 0480                            l128 03AD                            l137 03C5  
                          l156 04B2                            l157 049D                            l149 0478  
                          l176 0056                            l290 05FC                            _LCD 042E  
                 __CFG_CPD$OFF 0000                            u635 0512                            u645 0523  
                          u845 0442                            u865 03FA                            fsr0 0004  
                          indf 0000                  LCD@letraenvio 0023                   __CFG_IESO$ON 0000  
                 __CFG_FOSC$HS 0000                   __CFG_LVP$OFF 0000                           ?_LCD 0070  
              invertir@entrada 0077                           l2011 02EF                           l1311 068B  
                         l2017 0329                           l2019 036B                           l1901 0066  
                         l1591 03E6                           l1665 0491                           l1569 0432  
                         l1593 042A                           l1825 05F2                           l1913 00B3  
                         l1905 0078                           l1941 0124                           l1917 00BA  
                         l1855 04E4                           l1847 04C0                           l1871 0572  
                         l1951 013C                           l1935 0101                           l1919 00CE  
                         l1849 04CE                           l1873 0580                           l1881 0599  
                         l1953 0140                           l1929 00E0                           l1859 04EF  
                         l1939 0120                           l1971 019C                           l1981 0666  
                         l1877 058E                           l1893 0052                           l1967 0159  
                         l1959 0155                           l1977 0660                           l1969 0030  
                         l1899 005B                           l1997 02D3                           STR_1 0541  
                         STR_2 0556                           _LCD2 03DD                           u1005 048F  
                         u1025 04B0                           u1305 04C3                           u1325 04CF  
                         u1405 058F                           u1335 04DB                           u1345 04E5  
                         u1265 05FD                           u1275 0604                           u1605 0302  
                         u1375 0575                           u1615 0327                           u1465 00F7  
                         u1707 0223                           u1627 01A7                           u1395 0586  
                         u1717 022F                           u1637 01B8                           u1485 0110  
                         u1807 05AB                           u1727 0241                           u1647 01C4  
                         u1817 05BE                           u1737 0254                           u1657 01D6  
                         u1827 05D4                           u1747 0260                           u1667 01E2  
                         u1595 02ED                           u1837 05E7                           u1757 0272  
                         u1677 01F4                           u1847 0638                           u1767 0285  
                         u1687 0200                           u1857 0641                           u1777 0291  
                         u1697 0212                           u1867 0394                           u1787 02A3  
                         u1797 02B6                           i1l96 0625                           _TMR1 000E  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                           _main 02BF  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 0012  
            ___bmul@multiplier 0021                  __CFG_MCLRE$ON 0000                __end_of_InitSPI 03DD  
                        ??_LCD 0020                          LCD@p1 0022                          ?_LCD2 0070  
                        ?_main 0070                  __CFG_WDTE$OFF 0000                          _ANSEL 0188  
                        _T1CON 0010                __end_of___lwdiv 04F4                __end_of___lwmod 059E  
                        _TMR1H 000F                          _TMR1L 000E                          _PORTB 0006  
                        _PORTC 0007                          _TRISB 0086                          _bajar 05C7  
                        _bufer 0048                __end_of_dpowers 0541                          _envio 0630  
              __end_of_isdigit 068D                          _subir 059E                          main@j 0045  
                        pclath 000A                    _Adquisicion 0472                          status 0003  
                        wtemp0 007E                __end_of_sprintf 01A3         ??_rutinainterrupciones 0070  
                 __end_of_LCD2 042E                __initialization 0015                   __end_of_main 0378  
             __end_of_InitTMR1 065C                         ??_LCD2 0020                         LCD2@p2 0022  
                       ??_main 003E                         ?_bajar 0070                         ?_envio 0070  
                       ?_subir 0070                         _ANSELH 0189        __size_of_inicializacion 011C  
                       _SSPCON 0014                         _SSPBUF 0013                      ??_InitSPI 0075  
               __CFG_PWRTE$OFF 0000                         _InitES 066F                         ___bmul 065C  
                       ___wmul 05F0                      ??___lwdiv 0075                      ??___lwmod 0076  
                       _linea1 0058                         _linea2 00A0               __end_of_invertir 0531  
                    ??_isdigit 0075                         saved_w 007E                      ??_sprintf 0032  
      __end_of__initialization 0025            ___bmul@multiplicand 0075                 __pcstackCOMMON 0070  
                __end_of_bajar 05F0                  __end_of_envio 0647                  __end_of_subir 05C7  
                      ??_bajar 0075                        ??_envio 0075                   sprintf@width 003B  
                      ??_subir 0075                     __pbssBANK0 0047                     __pbssBANK1 00A0  
                    ?_InitTMR1 0070                        ?_InitES 0070                     __pmaintext 02BF  
                      ?___bmul 0075                        ?___wmul 0020                     __pintentry 0004  
                      _SSPSTAT 0094                     __stringtab 0531                     ??_InitTMR1 0075  
                 ?_Adquisicion 0070                 _inicializacion 01A3                        _InitSPI 0378  
                    ?_invertir 0070                __size_of_InitES 0010                __size_of___bmul 0013  
              __size_of___wmul 0023                        ___lwdiv 04B6                        ___lwmod 056A  
                      __ptext1 0029                        __ptext2 067F                        __ptext3 05F0  
                      __ptext4 056A                        __ptext5 04B6                        __ptext6 01A3  
                      __ptext7 065C                        __ptext8 03DD                        __ptext9 059E  
                 __size_of_LCD 0044                      _T1CONbits 0010                        _dpowers 0537  
                      _isdigit 067F                        _sprintf 0029                        clrloop0 068E  
       __end_of_inicializacion 02BF           end_of_initialization 0025                     ??_invertir 0075  
__size_of_rutinainterrupciones 001D                      _PORTBbits 0006                      _PORTCbits 0007  
                    _TRISCbits 0087                ?_inicializacion 0070                 __end_of_InitES 067F  
               __end_of___bmul 066F                 __end_of___wmul 0613            start_initialization 0015  
                  __end_of_LCD 0472              __size_of_InitTMR1 0015           __size_of_Adquisicion 0044  
                     ??_InitES 0075                   Adquisicion@i 0076                       ??___bmul 0076  
                     ??___wmul 0075                    __pbssCOMMON 0078                      ___latbits 0002  
                __pcstackBANK0 0020                    sprintf@flag 0036                    sprintf@prec 0039  
                     ?_InitSPI 0070               ___lwdiv@dividend 0022              __size_of_invertir 003D  
                     ?___lwdiv 0020                       ?___lwmod 0027                      __pstrings 0531  
                     ?_isdigit 0070                 __size_of_bajar 0029               ___lwdiv@quotient 0025  
                     ?_sprintf 002B                 __size_of_envio 0017                 __size_of_subir 0029  
            interrupt_function 0004                 ___wmul@product 0075                      clear_ram0 068D  
                     _PIE1bits 008C                       _PIR1bits 000C                    __stringbase 0536  
            ___wmul@multiplier 0020               ??_inicializacion 0075   __end_of_rutinainterrupciones 0630  
                     _Contador 0078                       _InitTMR1 0647               __size_of_InitSPI 0065  
             __size_of___lwdiv 003E               __size_of___lwmod 0034             __end_of__stringtab 0537  
                  _isdigit$645 0075                     sprintf@val 0037               __size_of_isdigit 000E  
              ___lwdiv@divisor 0020                ___lwdiv@counter 0024                       __ptext10 05C7  
                     __ptext11 042E                       __ptext12 04F4                       __ptext13 0630  
                     __ptext14 0647                       __ptext15 0378                       __ptext16 066F  
                     __ptext17 0472                       __ptext18 0613              __CFG_BOR4V$BOR40V 0000  
                __size_of_LCD2 0051               __size_of_sprintf 017A                 LCD2@letraenvio 0023  
                __size_of_main 00B9                       _invertir 04F4                     _INTCONbits 000B  
                     isdigit@c 0076                       intlevel1 0000                  ??_Adquisicion 0075  
                    sprintf@ap 0035                      sprintf@sp 003A               ___lwmod@dividend 0029  
                    stringcode 0531           _rutinainterrupciones 0613                       sprintf@c 003D  
                     sprintf@f 002B                ___lwmod@divisor 0027                ___lwmod@counter 0077  
                     stringdir 0531                       stringtab 0531            __end_of_Adquisicion 04B6  
        ?_rutinainterrupciones 0070  
