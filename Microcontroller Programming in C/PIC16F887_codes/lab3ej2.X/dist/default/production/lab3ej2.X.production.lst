

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 31 19:07:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text3_split_1,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 1.45
    55                           ; Generated 16/11/2017 GMT
    56                           ; 
    57                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166                           
   167                           	psect	strings
   168  1000                     __pstrings:	
   169  1000                     stringtab:	
   170  1000                     __stringtab:	
   171  1000                     stringcode:	
   172                           ;	String table - string pointers are 1 byte each
   173                           
   174  1000                     stringdir:	
   175  1000  3010               	movlw	high stringdir
   176  1001  008A               	movwf	10
   177  1002  0804               	movf	4,w
   178  1003  0A84               	incf	4,f
   179  1004  0782               	addwf	2,f
   180  1005                     __stringbase:	
   181  1005  3400               	retlw	0
   182  1006                     __end_of__stringtab:	
   183  1006                     _dpowers:	
   184  1006  3401               	retlw	1
   185  1007  3400               	retlw	0
   186  1008  3400               	retlw	0
   187  1009  3400               	retlw	0
   188  100A  340A               	retlw	10
   189  100B  3400               	retlw	0
   190  100C  3400               	retlw	0
   191  100D  3400               	retlw	0
   192  100E  3464               	retlw	100
   193  100F  3400               	retlw	0
   194  1010  3400               	retlw	0
   195  1011  3400               	retlw	0
   196  1012  34E8               	retlw	232
   197  1013  3403               	retlw	3
   198  1014  3400               	retlw	0
   199  1015  3400               	retlw	0
   200  1016  3410               	retlw	16
   201  1017  3427               	retlw	39
   202  1018  3400               	retlw	0
   203  1019  3400               	retlw	0
   204  101A  34A0               	retlw	160
   205  101B  3486               	retlw	134
   206  101C  3401               	retlw	1
   207  101D  3400               	retlw	0
   208  101E  3440               	retlw	64
   209  101F  3442               	retlw	66
   210  1020  340F               	retlw	15
   211  1021  3400               	retlw	0
   212  1022  3480               	retlw	128
   213  1023  3496               	retlw	150
   214  1024  3498               	retlw	152
   215  1025  3400               	retlw	0
   216  1026  3400               	retlw	0
   217  1027  34E1               	retlw	225
   218  1028  34F5               	retlw	245
   219  1029  3405               	retlw	5
   220  102A  3400               	retlw	0
   221  102B  34CA               	retlw	202
   222  102C  349A               	retlw	154
   223  102D  343B               	retlw	59
   224  102E                     __end_of_dpowers:	
   225  102E                     __powers_:	
   226  102E  3400               	retlw	0
   227  102F  3480               	retlw	128
   228  1030  343F               	retlw	63
   229  1031  3400               	retlw	0
   230  1032  3420               	retlw	32
   231  1033  3441               	retlw	65
   232  1034  3400               	retlw	0
   233  1035  34C8               	retlw	200
   234  1036  3442               	retlw	66
   235  1037  3400               	retlw	0
   236  1038  347A               	retlw	122
   237  1039  3444               	retlw	68
   238  103A  3440               	retlw	64
   239  103B  341C               	retlw	28
   240  103C  3446               	retlw	70
   241  103D  3450               	retlw	80
   242  103E  34C3               	retlw	195
   243  103F  3447               	retlw	71
   244  1040  3424               	retlw	36
   245  1041  3474               	retlw	116
   246  1042  3449               	retlw	73
   247  1043  3497               	retlw	151
   248  1044  3418               	retlw	24
   249  1045  344B               	retlw	75
   250  1046  34BC               	retlw	188
   251  1047  34BE               	retlw	190
   252  1048  344C               	retlw	76
   253  1049  346B               	retlw	107
   254  104A  346E               	retlw	110
   255  104B  344E               	retlw	78
   256  104C  3403               	retlw	3
   257  104D  3415               	retlw	21
   258  104E  3450               	retlw	80
   259  104F  3479               	retlw	121
   260  1050  34AD               	retlw	173
   261  1051  3460               	retlw	96
   262  1052  34F3               	retlw	243
   263  1053  3449               	retlw	73
   264  1054  3471               	retlw	113
   265  1055                     __end_of__powers_:	
   266  1055                     __npowers_:	
   267  1055  3400               	retlw	0
   268  1056  3480               	retlw	128
   269  1057  343F               	retlw	63
   270  1058  34CD               	retlw	205
   271  1059  34CC               	retlw	204
   272  105A  343D               	retlw	61
   273  105B  34D7               	retlw	215
   274  105C  3423               	retlw	35
   275  105D  343C               	retlw	60
   276  105E  3412               	retlw	18
   277  105F  3483               	retlw	131
   278  1060  343A               	retlw	58
   279  1061  34B7               	retlw	183
   280  1062  34D1               	retlw	209
   281  1063  3438               	retlw	56
   282  1064  34C6               	retlw	198
   283  1065  3427               	retlw	39
   284  1066  3437               	retlw	55
   285  1067  3438               	retlw	56
   286  1068  3486               	retlw	134
   287  1069  3435               	retlw	53
   288  106A  34C0               	retlw	192
   289  106B  34D6               	retlw	214
   290  106C  3433               	retlw	51
   291  106D  34CC               	retlw	204
   292  106E  342B               	retlw	43
   293  106F  3432               	retlw	50
   294  1070  3470               	retlw	112
   295  1071  3489               	retlw	137
   296  1072  3430               	retlw	48
   297  1073  34E7               	retlw	231
   298  1074  34DB               	retlw	219
   299  1075  342E               	retlw	46
   300  1076  34E5               	retlw	229
   301  1077  343C               	retlw	60
   302  1078  341E               	retlw	30
   303  1079  3442               	retlw	66
   304  107A  34A2               	retlw	162
   305  107B  340D               	retlw	13
   306  107C                     __end_of__npowers_:	
   307  000E                     _TMR1	set	14
   308  000B                     _INTCONbits	set	11
   309  000E                     _TMR1L	set	14
   310  000F                     _TMR1H	set	15
   311  0010                     _T1CONbits	set	16
   312  0010                     _T1CON	set	16
   313  0006                     _PORTBbits	set	6
   314  0006                     _PORTB	set	6
   315  0005                     _PORTA	set	5
   316  001F                     _ADCON0	set	31
   317  001E                     _ADRESH	set	30
   318  001F                     _ADCON0bits	set	31
   319  000C                     _PIR1bits	set	12
   320  008C                     _PIE1bits	set	140
   321  009F                     _ADCON1bits	set	159
   322  0086                     _TRISB	set	134
   323  0085                     _TRISA	set	133
   324  009E                     _ADRESL	set	158
   325  0189                     _ANSELH	set	393
   326  0188                     _ANSEL	set	392
   327  107C                     STR_1:	
   328  107C  3476               	retlw	118	;'v'
   329  107D  346F               	retlw	111	;'o'
   330  107E  346C               	retlw	108	;'l'
   331  107F  3474               	retlw	116	;'t'
   332  1080  3469               	retlw	105	;'i'
   333  1081  346D               	retlw	109	;'m'
   334  1082  3465               	retlw	101	;'e'
   335  1083  3474               	retlw	116	;'t'
   336  1084  3472               	retlw	114	;'r'
   337  1085  346F               	retlw	111	;'o'
   338  1086  3420               	retlw	32	;' '
   339  1087  3441               	retlw	65	;'A'
   340  1088  344E               	retlw	78	;'N'
   341  1089  3425               	retlw	37	;'%'
   342  108A  3475               	retlw	117	;'u'
   343  108B  3400               	retlw	0
   344  108C  3400               	retlw	0
   345  108D                     STR_2:	
   346  108D  3425               	retlw	37	;'%'
   347  108E  3431               	retlw	49	;'1'
   348  108F  342E               	retlw	46	;'.'
   349  1090  3433               	retlw	51	;'3'
   350  1091  3466               	retlw	102	;'f'
   351  1092  3456               	retlw	86	;'V'
   352  1093  3420               	retlw	32	;' '
   353  1094  342F               	retlw	47	;'/'
   354  1095  342F               	retlw	47	;'/'
   355  1096  3420               	retlw	32	;' '
   356  1097  3425               	retlw	37	;'%'
   357  1098  3434               	retlw	52	;'4'
   358  1099  3469               	retlw	105	;'i'
   359  109A  3400               	retlw	0
   360  109B  3400               	retlw	0
   361  108D                     
   362                           ; #config settings
   363  0000                     
   364                           	psect	cinit
   365  0015                     start_initialization:	
   366  0015                     __initialization:	
   367                           
   368                           ; Clear objects allocated to COMMON
   369  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   370                           
   371                           ; Clear objects allocated to BANK0
   372  0016  1383               	bcf	3,7	;select IRP bank0
   373  0017  3044               	movlw	low __pbssBANK0
   374  0018  0084               	movwf	4
   375  0019  305A               	movlw	low (__pbssBANK0+22)
   376  001A  160A  158A  22ED  120A  118A  	fcall	clear_ram0
   377                           
   378                           ; Clear objects allocated to BANK1
   379  001F  1683               	bsf	3,5	;RP0=1, select bank1
   380  0020  1303               	bcf	3,6	;RP1=0, select bank1
   381  0021  01EA               	clrf	__pbssBANK1& (0+127)
   382  0022  01EB               	clrf	(__pbssBANK1+1)& (0+127)
   383  0023  01EC               	clrf	(__pbssBANK1+2)& (0+127)
   384                           
   385                           ; Clear objects allocated to BANK3
   386  0024  1783               	bsf	3,7	;select IRP bank2
   387  0025  30A8               	movlw	low __pbssBANK3
   388  0026  0084               	movwf	4
   389  0027  30B8               	movlw	low (__pbssBANK3+16)
   390  0028  160A  158A  22ED   	fcall	clear_ram0
   391  002B                     end_of_initialization:	
   392                           ;End of C runtime variable initialization code
   393                           
   394  002B                     __end_of__initialization:	
   395  002B  0183               	clrf	3
   396  002C  160A  158A  2B7F   	ljmp	_main	;jump to C main() function
   397                           
   398                           	psect	bssCOMMON
   399  007C                     __pbssCOMMON:	
   400  007C                     _letraenvio:	
   401  007C                     	ds	1
   402                           
   403                           	psect	bssBANK0
   404  0044                     __pbssBANK0:	
   405  0044                     _volt:	
   406  0044                     	ds	3
   407  0047                     _adc:	
   408  0047                     	ds	2
   409  0049                     _Contador:	
   410  0049                     	ds	1
   411  004A                     _linea1:	
   412  004A                     	ds	16
   413                           
   414                           	psect	bssBANK1
   415  00EA                     __pbssBANK1:	
   416  00EA                     _u:	
   417  00EA                     	ds	1
   418  00EB                     _p2:	
   419  00EB                     	ds	1
   420  00EC                     _p1:	
   421  00EC                     	ds	1
   422                           
   423                           	psect	bssBANK3
   424  01A8                     __pbssBANK3:	
   425  01A8                     _linea2:	
   426  01A8                     	ds	16
   427                           
   428                           	psect	clrtext
   429  1AED                     clear_ram0:	
   430                           ;	Called with FSR containing the base address, and
   431                           ;	W with the last address+1
   432                           
   433  1AED  0064               	clrwdt	;clear the watchdog before getting into this loop
   434  1AEE                     clrloop0:	
   435  1AEE  0180               	clrf	0	;clear RAM location pointed to by FSR
   436  1AEF  0A84               	incf	4,f	;increment pointer
   437  1AF0  0604               	xorwf	4,w	;XOR with final address
   438  1AF1  1903               	btfsc	3,2	;have we reached the end yet?
   439  1AF2  3400               	retlw	0	;all done for this memory range, return
   440  1AF3  0604               	xorwf	4,w	;XOR again to restore value
   441  1AF4  2AEE               	goto	clrloop0	;do the next byte
   442                           
   443                           	psect	cstackBANK3
   444  0190                     __pcstackBANK3:	
   445  0190                     _sprintf$820:	
   446                           
   447                           ; 3 bytes @ 0x0
   448  0190                     	ds	3
   449  0193                     sprintf@ap:	
   450                           
   451                           ; 1 bytes @ 0x3
   452  0193                     	ds	1
   453  0194                     sprintf@flag:	
   454                           
   455                           ; 2 bytes @ 0x4
   456  0194                     	ds	2
   457  0196                     sprintf@width:	
   458                           
   459                           ; 2 bytes @ 0x6
   460  0196                     	ds	2
   461  0198                     sprintf@tmpval:	
   462                           
   463                           ; 4 bytes @ 0x8
   464  0198                     	ds	4
   465  019C                     sprintf@val:	
   466                           
   467                           ; 4 bytes @ 0xC
   468  019C                     	ds	4
   469  01A0                     sprintf@exp:	
   470                           
   471                           ; 2 bytes @ 0x10
   472  01A0                     	ds	2
   473  01A2                     sprintf@fval:	
   474                           
   475                           ; 3 bytes @ 0x12
   476  01A2                     	ds	3
   477  01A5                     sprintf@prec:	
   478                           
   479                           ; 2 bytes @ 0x15
   480  01A5                     	ds	2
   481  01A7                     sprintf@c:	
   482                           
   483                           ; 1 bytes @ 0x17
   484  01A7                     	ds	1
   485                           
   486                           	psect	cstackBANK1
   487  00A0                     __pcstackBANK1:	
   488  00A0                     ?___llmod:	
   489  00A0                     ___awdiv@counter:	
   490                           ; 4 bytes @ 0x0
   491                           
   492  00A0                     __div_to_l_@quot:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  00A0                     __tdiv_to_l_@quot:	
   496                           ; 4 bytes @ 0x0
   497                           
   498  00A0                     ___llmod@divisor:	
   499                           ; 4 bytes @ 0x0
   500                           
   501                           
   502                           ; 4 bytes @ 0x0
   503  00A0                     	ds	1
   504  00A1                     ___awdiv@sign:	
   505                           
   506                           ; 1 bytes @ 0x1
   507  00A1                     	ds	1
   508  00A2                     ___awdiv@quotient:	
   509                           
   510                           ; 2 bytes @ 0x2
   511  00A2                     	ds	2
   512  00A4                     ___bmul@product:	
   513  00A4                     __div_to_l_@cntr:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  00A4                     __tdiv_to_l_@cntr:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  00A4                     ___llmod@dividend:	
   520                           ; 1 bytes @ 0x4
   521                           
   522                           
   523                           ; 4 bytes @ 0x4
   524  00A4                     	ds	1
   525  00A5                     ___bmul@multiplier:	
   526  00A5                     __div_to_l_@exp1:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  00A5                     __tdiv_to_l_@exp1:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 1 bytes @ 0x5
   534  00A5                     	ds	1
   535  00A6                     ?___ftmul:	
   536  00A6                     ___ftmul@f1:	
   537                           ; 3 bytes @ 0x6
   538                           
   539                           
   540                           ; 3 bytes @ 0x6
   541  00A6                     	ds	2
   542  00A8                     ??___llmod:	
   543                           
   544                           ; 1 bytes @ 0x8
   545  00A8                     	ds	1
   546  00A9                     ___llmod@counter:	
   547  00A9                     ___ftmul@f2:	
   548                           ; 1 bytes @ 0x9
   549                           
   550                           
   551                           ; 3 bytes @ 0x9
   552  00A9                     	ds	3
   553  00AC                     ??___ftmul:	
   554                           
   555                           ; 1 bytes @ 0xC
   556  00AC                     	ds	4
   557  00B0                     ___ftmul@exp:	
   558                           
   559                           ; 1 bytes @ 0x10
   560  00B0                     	ds	1
   561  00B1                     ___ftmul@f3_as_product:	
   562                           
   563                           ; 3 bytes @ 0x11
   564  00B1                     	ds	3
   565  00B4                     ___ftmul@cntr:	
   566                           
   567                           ; 1 bytes @ 0x14
   568  00B4                     	ds	1
   569  00B5                     ___ftmul@sign:	
   570                           
   571                           ; 1 bytes @ 0x15
   572  00B5                     	ds	1
   573  00B6                     ?_fround:	
   574  00B6                     ?_scale:	
   575                           ; 3 bytes @ 0x16
   576                           
   577                           
   578                           ; 3 bytes @ 0x16
   579  00B6                     	ds	3
   580  00B9                     ??_fround:	
   581  00B9                     ??_scale:	
   582                           ; 1 bytes @ 0x19
   583                           
   584                           
   585                           ; 1 bytes @ 0x19
   586  00B9                     	ds	2
   587  00BB                     _scale$819:	
   588                           
   589                           ; 3 bytes @ 0x1B
   590  00BB                     	ds	3
   591  00BE                     scale@scl:	
   592                           
   593                           ; 1 bytes @ 0x1E
   594  00BE                     	ds	1
   595  00BF                     ?___fttol:	
   596  00BF                     ___fttol@f1:	
   597                           ; 4 bytes @ 0x1F
   598                           
   599  00BF                     _fround$818:	
   600                           ; 3 bytes @ 0x1F
   601                           
   602                           
   603                           ; 3 bytes @ 0x1F
   604  00BF                     	ds	3
   605  00C2                     _fround$817:	
   606                           
   607                           ; 3 bytes @ 0x22
   608  00C2                     	ds	1
   609  00C3                     ??___fttol:	
   610                           
   611                           ; 1 bytes @ 0x23
   612  00C3                     	ds	2
   613  00C5                     fround@prec:	
   614                           
   615                           ; 1 bytes @ 0x25
   616  00C5                     	ds	1
   617  00C6                     ?___ftadd:	
   618  00C6                     ___ftadd@f1:	
   619                           ; 3 bytes @ 0x26
   620                           
   621                           
   622                           ; 3 bytes @ 0x26
   623  00C6                     	ds	1
   624  00C7                     ___fttol@sign1:	
   625                           
   626                           ; 1 bytes @ 0x27
   627  00C7                     	ds	1
   628  00C8                     ___fttol@lval:	
   629                           
   630                           ; 4 bytes @ 0x28
   631  00C8                     	ds	1
   632  00C9                     ___ftadd@f2:	
   633                           
   634                           ; 3 bytes @ 0x29
   635  00C9                     	ds	3
   636  00CC                     ??___ftadd:	
   637  00CC                     ___fttol@exp1:	
   638                           ; 1 bytes @ 0x2C
   639                           
   640                           
   641                           ; 1 bytes @ 0x2C
   642  00CC                     	ds	4
   643  00D0                     ___ftadd@sign:	
   644                           
   645                           ; 1 bytes @ 0x30
   646  00D0                     	ds	1
   647  00D1                     ___ftadd@exp2:	
   648                           
   649                           ; 1 bytes @ 0x31
   650  00D1                     	ds	1
   651  00D2                     ___ftadd@exp1:	
   652                           
   653                           ; 1 bytes @ 0x32
   654  00D2                     	ds	1
   655  00D3                     ?___ftsub:	
   656  00D3                     ___ftsub@f2:	
   657                           ; 3 bytes @ 0x33
   658                           
   659                           
   660                           ; 3 bytes @ 0x33
   661  00D3                     	ds	3
   662  00D6                     ___ftsub@f1:	
   663                           
   664                           ; 3 bytes @ 0x36
   665  00D6                     	ds	3
   666  00D9                     ?_sprintf:	
   667  00D9                     sprintf@sp:	
   668                           ; 2 bytes @ 0x39
   669                           
   670                           
   671                           ; 2 bytes @ 0x39
   672  00D9                     	ds	2
   673  00DB                     sprintf@f:	
   674                           
   675                           ; 1 bytes @ 0x3B
   676  00DB                     	ds	6
   677  00E1                     ??_sprintf:	
   678                           
   679                           ; 1 bytes @ 0x41
   680  00E1                     	ds	6
   681  00E7                     ??_armovector:	
   682                           
   683                           ; 1 bytes @ 0x47
   684  00E7                     	ds	3
   685                           
   686                           	psect	cstackCOMMON
   687  0070                     __pcstackCOMMON:	
   688  0070                     ?_isdigit:	
   689  0070                     ?_InitES:	
   690                           ; 1 bit 
   691                           
   692  0070                     ?_InitTMR1:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_inicializacion:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_armovector:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_LCD:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_LCD2:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_invertir:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_envio:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_bajar:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ?_subir:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_rutinainterrupciones:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ?_main:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?i1___ftpack:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     i1___ftpack@arg:	
   729                           ; 3 bytes @ 0x0
   730                           
   731                           
   732                           ; 3 bytes @ 0x0
   733  0070                     	ds	3
   734  0073                     i1___ftpack@exp:	
   735                           
   736                           ; 1 bytes @ 0x3
   737  0073                     	ds	1
   738  0074                     i1___ftpack@sign:	
   739                           
   740                           ; 1 bytes @ 0x4
   741  0074                     	ds	1
   742  0075                     ??i1___ftpack:	
   743                           
   744                           ; 1 bytes @ 0x5
   745  0075                     	ds	3
   746  0078                     ?___lwtoft:	
   747  0078                     ___lwtoft@c:	
   748                           ; 3 bytes @ 0x8
   749                           
   750                           
   751                           ; 2 bytes @ 0x8
   752  0078                     	ds	3
   753  007B                     ??___lwtoft:	
   754                           
   755                           ; 1 bytes @ 0xB
   756  007B                     	ds	1
   757                           
   758                           	psect	cstackBANK0
   759  0020                     __pcstackBANK0:	
   760  0020                     ?i1___ftmul:	
   761  0020                     i1___ftmul@f1:	
   762                           ; 3 bytes @ 0x0
   763                           
   764                           
   765                           ; 3 bytes @ 0x0
   766  0020                     	ds	3
   767  0023                     i1___ftmul@f2:	
   768                           
   769                           ; 3 bytes @ 0x3
   770  0023                     	ds	3
   771  0026                     ??i1___ftmul:	
   772                           
   773                           ; 1 bytes @ 0x6
   774  0026                     	ds	4
   775  002A                     i1___ftmul@exp:	
   776                           
   777                           ; 1 bytes @ 0xA
   778  002A                     	ds	1
   779  002B                     i1___ftmul@f3_as_product:	
   780                           
   781                           ; 3 bytes @ 0xB
   782  002B                     	ds	3
   783  002E                     i1___ftmul@cntr:	
   784                           
   785                           ; 1 bytes @ 0xE
   786  002E                     	ds	1
   787  002F                     i1___ftmul@sign:	
   788                           
   789                           ; 1 bytes @ 0xF
   790  002F                     	ds	1
   791  0030                     ??_rutinainterrupciones:	
   792                           
   793                           ; 1 bytes @ 0x10
   794  0030                     	ds	6
   795  0036                     ?___ftge:	
   796  0036                     ??_InitES:	
   797                           ; 1 bit 
   798                           
   799  0036                     ??_InitTMR1:	
   800                           ; 1 bytes @ 0x16
   801                           
   802  0036                     ??_inicializacion:	
   803                           ; 1 bytes @ 0x16
   804                           
   805  0036                     ??_invertir:	
   806                           ; 1 bytes @ 0x16
   807                           
   808  0036                     ??_envio:	
   809                           ; 1 bytes @ 0x16
   810                           
   811  0036                     ??_bajar:	
   812                           ; 1 bytes @ 0x16
   813                           
   814  0036                     ??_subir:	
   815                           ; 1 bytes @ 0x16
   816                           
   817  0036                     ??_isdigit:	
   818                           ; 1 bytes @ 0x16
   819                           
   820  0036                     ?___wmul:	
   821                           ; 1 bytes @ 0x16
   822                           
   823  0036                     ?___awmod:	
   824                           ; 2 bytes @ 0x16
   825                           
   826  0036                     ?___ftpack:	
   827                           ; 2 bytes @ 0x16
   828                           
   829  0036                     ?___ftneg:	
   830                           ; 3 bytes @ 0x16
   831                           
   832  0036                     ?__tdiv_to_l_:	
   833                           ; 3 bytes @ 0x16
   834                           
   835  0036                     ?__div_to_l_:	
   836                           ; 4 bytes @ 0x16
   837                           
   838  0036                     ?___lldiv:	
   839                           ; 4 bytes @ 0x16
   840                           
   841  0036                     _isdigit$609:	
   842                           ; 4 bytes @ 0x16
   843                           
   844  0036                     ___wmul@multiplier:	
   845                           ; 1 bytes @ 0x16
   846                           
   847  0036                     ___awmod@divisor:	
   848                           ; 2 bytes @ 0x16
   849                           
   850  0036                     __div_to_l_@f1:	
   851                           ; 2 bytes @ 0x16
   852                           
   853  0036                     ___ftpack@arg:	
   854                           ; 3 bytes @ 0x16
   855                           
   856  0036                     __tdiv_to_l_@f1:	
   857                           ; 3 bytes @ 0x16
   858                           
   859  0036                     ___ftge@ff1:	
   860                           ; 3 bytes @ 0x16
   861                           
   862  0036                     ___ftneg@f1:	
   863                           ; 3 bytes @ 0x16
   864                           
   865  0036                     ___lldiv@divisor:	
   866                           ; 3 bytes @ 0x16
   867                           
   868                           
   869                           ; 4 bytes @ 0x16
   870  0036                     	ds	1
   871  0037                     isdigit@c:	
   872                           
   873                           ; 1 bytes @ 0x17
   874  0037                     	ds	1
   875  0038                     ??_LCD:	
   876  0038                     ??_LCD2:	
   877                           ; 1 bytes @ 0x18
   878                           
   879  0038                     ___wmul@multiplicand:	
   880                           ; 1 bytes @ 0x18
   881                           
   882  0038                     ___awmod@dividend:	
   883                           ; 2 bytes @ 0x18
   884                           
   885                           
   886                           ; 2 bytes @ 0x18
   887  0038                     	ds	1
   888  0039                     ??___ftneg:	
   889  0039                     ___ftpack@exp:	
   890                           ; 1 bytes @ 0x19
   891                           
   892  0039                     __div_to_l_@f2:	
   893                           ; 1 bytes @ 0x19
   894                           
   895  0039                     __tdiv_to_l_@f2:	
   896                           ; 3 bytes @ 0x19
   897                           
   898  0039                     ___ftge@ff2:	
   899                           ; 3 bytes @ 0x19
   900                           
   901                           
   902                           ; 3 bytes @ 0x19
   903  0039                     	ds	1
   904  003A                     ??___wmul:	
   905  003A                     ??___awmod:	
   906                           ; 1 bytes @ 0x1A
   907                           
   908  003A                     ___ftpack@sign:	
   909                           ; 1 bytes @ 0x1A
   910                           
   911  003A                     ___wmul@product:	
   912                           ; 1 bytes @ 0x1A
   913                           
   914  003A                     ___lldiv@dividend:	
   915                           ; 2 bytes @ 0x1A
   916                           
   917                           
   918                           ; 4 bytes @ 0x1A
   919  003A                     	ds	1
   920  003B                     ??___ftpack:	
   921  003B                     ___awmod@counter:	
   922                           ; 1 bytes @ 0x1B
   923                           
   924                           
   925                           ; 1 bytes @ 0x1B
   926  003B                     	ds	1
   927  003C                     ??__tdiv_to_l_:	
   928  003C                     ??__div_to_l_:	
   929                           ; 1 bytes @ 0x1C
   930                           
   931  003C                     ??___ftge:	
   932                           ; 1 bytes @ 0x1C
   933                           
   934  003C                     ___awmod@sign:	
   935                           ; 1 bytes @ 0x1C
   936                           
   937                           
   938                           ; 1 bytes @ 0x1C
   939  003C                     	ds	1
   940  003D                     ?___awdiv:	
   941  003D                     ___awdiv@divisor:	
   942                           ; 2 bytes @ 0x1D
   943                           
   944                           
   945                           ; 2 bytes @ 0x1D
   946  003D                     	ds	1
   947  003E                     ??___lldiv:	
   948  003E                     ?___lltoft:	
   949                           ; 1 bytes @ 0x1E
   950                           
   951  003E                     ___lltoft@c:	
   952                           ; 3 bytes @ 0x1E
   953                           
   954                           
   955                           ; 4 bytes @ 0x1E
   956  003E                     	ds	1
   957  003F                     ___awdiv@dividend:	
   958  003F                     ___lldiv@quotient:	
   959                           ; 2 bytes @ 0x1F
   960                           
   961                           
   962                           ; 4 bytes @ 0x1F
   963  003F                     	ds	2
   964  0041                     ??___awdiv:	
   965                           
   966                           ; 1 bytes @ 0x21
   967  0041                     	ds	1
   968  0042                     ?___bmul:	
   969  0042                     ??___lltoft:	
   970                           ; 1 bytes @ 0x22
   971                           
   972  0042                     ___bmul@multiplicand:	
   973                           ; 1 bytes @ 0x22
   974                           
   975                           
   976                           ; 1 bytes @ 0x22
   977  0042                     	ds	1
   978  0043                     ??___bmul:	
   979  0043                     ___lldiv@counter:	
   980                           ; 1 bytes @ 0x23
   981                           
   982  0043                     ___lltoft@exp:	
   983                           ; 1 bytes @ 0x23
   984                           
   985                           
   986                           ; 1 bytes @ 0x23
   987  0043                     	ds	1
   988  0044                     ??_main:	
   989  0044                     ??___ftsub:	
   990                           ; 1 bytes @ 0x24
   991                           
   992                           
   993                           	psect	maintext
   994  1B7F                     __pmaintext:	
   995                           ; 1 bytes @ 0x24
   996 ;;
   997 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   998 ;;
   999 ;; *************** function _main *****************
  1000 ;; Defined at:
  1001 ;;		line 90 in file "lab3ej2.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : B00/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0
  1018 ;;      Totals:         0       0       0       0       0
  1019 ;;Total ram usage:        0 bytes
  1020 ;; Hardware stack levels required when called:    8
  1021 ;; This function calls:
  1022 ;;		_InitES
  1023 ;;		_InitTMR1
  1024 ;;		_LCD
  1025 ;;		_LCD2
  1026 ;;		_armovector
  1027 ;;		_inicializacion
  1028 ;; This function is called by:
  1029 ;;		Startup code after reset
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _main
  1035  1B7F                     _main:	
  1036                           
  1037                           ;lab3ej2.c: 92: InitES();
  1038                           
  1039                           ;incstack = 0
  1040                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1041  1B7F  160A  158A  2319  160A  158A  	fcall	_InitES
  1042                           
  1043                           ;lab3ej2.c: 93: InitTMR1();
  1044  1B84  160A  158A  232E  160A  158A  	fcall	_InitTMR1
  1045                           
  1046                           ;lab3ej2.c: 94: inicializacion();
  1047  1B89  160A  118A  254E  160A  158A  	fcall	_inicializacion
  1048  1B8E                     l4281:	
  1049                           ;lab3ej2.c: 95: while(1)
  1050                           
  1051                           
  1052                           ;lab3ej2.c: 96: {
  1053                           ;lab3ej2.c: 97: armovector();
  1054  1B8E  120A  158A  2023  160A  158A  	fcall	_armovector
  1055                           
  1056                           ;lab3ej2.c: 98: LCD();
  1057  1B93  160A  158A  2455  160A  158A  	fcall	_LCD
  1058                           
  1059                           ;lab3ej2.c: 99: LCD2();
  1060  1B98  160A  158A  2538  160A  158A  	fcall	_LCD2
  1061  1B9D  2B8E               	goto	l4281
  1062  1B9E                     __end_of_main:	
  1063                           
  1064                           	psect	text1
  1065  154E                     __ptext1:	
  1066 ;; *************** function _inicializacion *****************
  1067 ;; Defined at:
  1068 ;;		line 248 in file "lab3ej2.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          0       2       0       0       0
  1085 ;;      Totals:         0       2       0       0       0
  1086 ;;Total ram usage:        2 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    3
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _inicializacion
  1098  154E                     _inicializacion:	
  1099                           
  1100                           ;lab3ej2.c: 250: _delay((unsigned long)((30)*(20000000/4000.0)));
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _inicializacion: [wreg]
  1104  154E  30C3               	movlw	195
  1105  154F  1283               	bcf	3,5	;RP0=0, select bank0
  1106  1550  1303               	bcf	3,6	;RP1=0, select bank0
  1107  1551  00B7               	movwf	??_inicializacion+1
  1108  1552  30CC               	movlw	204
  1109  1553  00B6               	movwf	??_inicializacion
  1110  1554                     u6687:	
  1111  1554  0BB6               	decfsz	??_inicializacion,f
  1112  1555  2D54               	goto	u6687
  1113  1556  0BB7               	decfsz	??_inicializacion+1,f
  1114  1557  2D54               	goto	u6687
  1115  1558  0000               	nop
  1116                           
  1117                           ;lab3ej2.c: 251: PORTBbits.RB6=0;
  1118  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1119  155A  1303               	bcf	3,6	;RP1=0, select bank0
  1120  155B  1306               	bcf	6,6	;volatile
  1121                           
  1122                           ;lab3ej2.c: 252: PORTBbits.RB5=0;
  1123  155C  1286               	bcf	6,5	;volatile
  1124                           
  1125                           ;lab3ej2.c: 253: PORTBbits.RB0=0;
  1126  155D  1006               	bcf	6,0	;volatile
  1127                           
  1128                           ;lab3ej2.c: 254: PORTBbits.RB1=0;
  1129  155E  1086               	bcf	6,1	;volatile
  1130                           
  1131                           ;lab3ej2.c: 255: PORTBbits.RB2=1;
  1132  155F  1506               	bsf	6,2	;volatile
  1133                           
  1134                           ;lab3ej2.c: 256: PORTBbits.RB3=1;
  1135  1560  1586               	bsf	6,3	;volatile
  1136                           
  1137                           ;lab3ej2.c: 257: PORTBbits.RB4=1;
  1138  1561  1606               	bsf	6,4	;volatile
  1139                           
  1140                           ;lab3ej2.c: 258: _delay((unsigned long)((5)*(20000000/4000.0)));
  1141  1562  3021               	movlw	33
  1142  1563  1283               	bcf	3,5	;RP0=0, select bank0
  1143  1564  1303               	bcf	3,6	;RP1=0, select bank0
  1144  1565  00B7               	movwf	??_inicializacion+1
  1145  1566  3075               	movlw	117
  1146  1567  00B6               	movwf	??_inicializacion
  1147  1568                     u6697:	
  1148  1568  0BB6               	decfsz	??_inicializacion,f
  1149  1569  2D68               	goto	u6697
  1150  156A  0BB7               	decfsz	??_inicializacion+1,f
  1151  156B  2D68               	goto	u6697
  1152  156C  2D6D               	nop2
  1153                           
  1154                           ;lab3ej2.c: 259: PORTBbits.RB4=0;
  1155  156D  1283               	bcf	3,5	;RP0=0, select bank0
  1156  156E  1303               	bcf	3,6	;RP1=0, select bank0
  1157  156F  1206               	bcf	6,4	;volatile
  1158                           
  1159                           ;lab3ej2.c: 260: _delay((unsigned long)((5)*(20000000/4000.0)));
  1160  1570  3021               	movlw	33
  1161  1571  1283               	bcf	3,5	;RP0=0, select bank0
  1162  1572  1303               	bcf	3,6	;RP1=0, select bank0
  1163  1573  00B7               	movwf	??_inicializacion+1
  1164  1574  3075               	movlw	117
  1165  1575  00B6               	movwf	??_inicializacion
  1166  1576                     u6707:	
  1167  1576  0BB6               	decfsz	??_inicializacion,f
  1168  1577  2D76               	goto	u6707
  1169  1578  0BB7               	decfsz	??_inicializacion+1,f
  1170  1579  2D76               	goto	u6707
  1171  157A  2D7B               	nop2
  1172                           
  1173                           ;lab3ej2.c: 261: PORTBbits.RB6=0;
  1174  157B  1283               	bcf	3,5	;RP0=0, select bank0
  1175  157C  1303               	bcf	3,6	;RP1=0, select bank0
  1176  157D  1306               	bcf	6,6	;volatile
  1177                           
  1178                           ;lab3ej2.c: 262: PORTBbits.RB5=0;
  1179  157E  1286               	bcf	6,5	;volatile
  1180                           
  1181                           ;lab3ej2.c: 263: PORTBbits.RB0=0;
  1182  157F  1006               	bcf	6,0	;volatile
  1183                           
  1184                           ;lab3ej2.c: 264: PORTBbits.RB1=0;
  1185  1580  1086               	bcf	6,1	;volatile
  1186                           
  1187                           ;lab3ej2.c: 265: PORTBbits.RB2=1;
  1188  1581  1506               	bsf	6,2	;volatile
  1189                           
  1190                           ;lab3ej2.c: 266: PORTBbits.RB3=1;
  1191  1582  1586               	bsf	6,3	;volatile
  1192                           
  1193                           ;lab3ej2.c: 267: PORTBbits.RB4=1;
  1194  1583  1606               	bsf	6,4	;volatile
  1195                           
  1196                           ;lab3ej2.c: 268: _delay((unsigned long)((5)*(20000000/4000.0)));
  1197  1584  3021               	movlw	33
  1198  1585  1283               	bcf	3,5	;RP0=0, select bank0
  1199  1586  1303               	bcf	3,6	;RP1=0, select bank0
  1200  1587  00B7               	movwf	??_inicializacion+1
  1201  1588  3075               	movlw	117
  1202  1589  00B6               	movwf	??_inicializacion
  1203  158A                     u6717:	
  1204  158A  0BB6               	decfsz	??_inicializacion,f
  1205  158B  2D8A               	goto	u6717
  1206  158C  0BB7               	decfsz	??_inicializacion+1,f
  1207  158D  2D8A               	goto	u6717
  1208  158E  2D8F               	nop2
  1209                           
  1210                           ;lab3ej2.c: 269: PORTBbits.RB4=0;
  1211  158F  1283               	bcf	3,5	;RP0=0, select bank0
  1212  1590  1303               	bcf	3,6	;RP1=0, select bank0
  1213  1591  1206               	bcf	6,4	;volatile
  1214                           
  1215                           ;lab3ej2.c: 270: _delay((unsigned long)((10)*(20000000/4000.0)));
  1216  1592  3041               	movlw	65
  1217  1593  1283               	bcf	3,5	;RP0=0, select bank0
  1218  1594  1303               	bcf	3,6	;RP1=0, select bank0
  1219  1595  00B7               	movwf	??_inicializacion+1
  1220  1596  30ED               	movlw	237
  1221  1597  00B6               	movwf	??_inicializacion
  1222  1598                     u6727:	
  1223  1598  0BB6               	decfsz	??_inicializacion,f
  1224  1599  2D98               	goto	u6727
  1225  159A  0BB7               	decfsz	??_inicializacion+1,f
  1226  159B  2D98               	goto	u6727
  1227  159C  2D9D               	nop2
  1228                           
  1229                           ;lab3ej2.c: 271: PORTBbits.RB6=0;
  1230  159D  1283               	bcf	3,5	;RP0=0, select bank0
  1231  159E  1303               	bcf	3,6	;RP1=0, select bank0
  1232  159F  1306               	bcf	6,6	;volatile
  1233                           
  1234                           ;lab3ej2.c: 272: PORTBbits.RB5=0;
  1235  15A0  1286               	bcf	6,5	;volatile
  1236                           
  1237                           ;lab3ej2.c: 273: PORTBbits.RB0=0;
  1238  15A1  1006               	bcf	6,0	;volatile
  1239                           
  1240                           ;lab3ej2.c: 274: PORTBbits.RB1=0;
  1241  15A2  1086               	bcf	6,1	;volatile
  1242                           
  1243                           ;lab3ej2.c: 275: PORTBbits.RB2=1;
  1244  15A3  1506               	bsf	6,2	;volatile
  1245                           
  1246                           ;lab3ej2.c: 276: PORTBbits.RB3=0;
  1247  15A4  1186               	bcf	6,3	;volatile
  1248                           
  1249                           ;lab3ej2.c: 277: PORTBbits.RB4=1;
  1250  15A5  1606               	bsf	6,4	;volatile
  1251                           
  1252                           ;lab3ej2.c: 278: _delay((unsigned long)((5)*(20000000/4000.0)));
  1253  15A6  3021               	movlw	33
  1254  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  1255  15A8  1303               	bcf	3,6	;RP1=0, select bank0
  1256  15A9  00B7               	movwf	??_inicializacion+1
  1257  15AA  3075               	movlw	117
  1258  15AB  00B6               	movwf	??_inicializacion
  1259  15AC                     u6737:	
  1260  15AC  0BB6               	decfsz	??_inicializacion,f
  1261  15AD  2DAC               	goto	u6737
  1262  15AE  0BB7               	decfsz	??_inicializacion+1,f
  1263  15AF  2DAC               	goto	u6737
  1264  15B0  2DB1               	nop2
  1265                           
  1266                           ;lab3ej2.c: 279: PORTBbits.RB4=0;
  1267  15B1  1283               	bcf	3,5	;RP0=0, select bank0
  1268  15B2  1303               	bcf	3,6	;RP1=0, select bank0
  1269  15B3  1206               	bcf	6,4	;volatile
  1270                           
  1271                           ;lab3ej2.c: 280: _delay((unsigned long)((5)*(20000000/4000.0)));
  1272  15B4  3021               	movlw	33
  1273  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  1274  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  1275  15B7  00B7               	movwf	??_inicializacion+1
  1276  15B8  3075               	movlw	117
  1277  15B9  00B6               	movwf	??_inicializacion
  1278  15BA                     u6747:	
  1279  15BA  0BB6               	decfsz	??_inicializacion,f
  1280  15BB  2DBA               	goto	u6747
  1281  15BC  0BB7               	decfsz	??_inicializacion+1,f
  1282  15BD  2DBA               	goto	u6747
  1283  15BE  2DBF               	nop2
  1284                           
  1285                           ;lab3ej2.c: 281: PORTBbits.RB6=0;
  1286  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  1287  15C0  1303               	bcf	3,6	;RP1=0, select bank0
  1288  15C1  1306               	bcf	6,6	;volatile
  1289                           
  1290                           ;lab3ej2.c: 282: PORTBbits.RB5=0;
  1291  15C2  1286               	bcf	6,5	;volatile
  1292                           
  1293                           ;lab3ej2.c: 283: PORTBbits.RB0=0;
  1294  15C3  1006               	bcf	6,0	;volatile
  1295                           
  1296                           ;lab3ej2.c: 284: PORTBbits.RB1=0;
  1297  15C4  1086               	bcf	6,1	;volatile
  1298                           
  1299                           ;lab3ej2.c: 285: PORTBbits.RB2=1;
  1300  15C5  1506               	bsf	6,2	;volatile
  1301                           
  1302                           ;lab3ej2.c: 286: PORTBbits.RB3=0;
  1303  15C6  1186               	bcf	6,3	;volatile
  1304                           
  1305                           ;lab3ej2.c: 287: PORTBbits.RB4=1;
  1306  15C7  1606               	bsf	6,4	;volatile
  1307                           
  1308                           ;lab3ej2.c: 288: _delay((unsigned long)((5)*(20000000/4000.0)));
  1309  15C8  3021               	movlw	33
  1310  15C9  1283               	bcf	3,5	;RP0=0, select bank0
  1311  15CA  1303               	bcf	3,6	;RP1=0, select bank0
  1312  15CB  00B7               	movwf	??_inicializacion+1
  1313  15CC  3075               	movlw	117
  1314  15CD  00B6               	movwf	??_inicializacion
  1315  15CE                     u6757:	
  1316  15CE  0BB6               	decfsz	??_inicializacion,f
  1317  15CF  2DCE               	goto	u6757
  1318  15D0  0BB7               	decfsz	??_inicializacion+1,f
  1319  15D1  2DCE               	goto	u6757
  1320  15D2  2DD3               	nop2
  1321                           
  1322                           ;lab3ej2.c: 289: PORTBbits.RB4=0;
  1323  15D3  1283               	bcf	3,5	;RP0=0, select bank0
  1324  15D4  1303               	bcf	3,6	;RP1=0, select bank0
  1325  15D5  1206               	bcf	6,4	;volatile
  1326                           
  1327                           ;lab3ej2.c: 290: PORTBbits.RB6=0;
  1328  15D6  1306               	bcf	6,6	;volatile
  1329                           
  1330                           ;lab3ej2.c: 291: PORTBbits.RB5=0;
  1331  15D7  1286               	bcf	6,5	;volatile
  1332                           
  1333                           ;lab3ej2.c: 292: PORTBbits.RB0=1;
  1334  15D8  1406               	bsf	6,0	;volatile
  1335                           
  1336                           ;lab3ej2.c: 293: PORTBbits.RB1=1;
  1337  15D9  1486               	bsf	6,1	;volatile
  1338                           
  1339                           ;lab3ej2.c: 294: PORTBbits.RB4=1;
  1340  15DA  1606               	bsf	6,4	;volatile
  1341                           
  1342                           ;lab3ej2.c: 295: _delay((unsigned long)((5)*(20000000/4000.0)));
  1343  15DB  3021               	movlw	33
  1344  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  1345  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  1346  15DE  00B7               	movwf	??_inicializacion+1
  1347  15DF  3075               	movlw	117
  1348  15E0  00B6               	movwf	??_inicializacion
  1349  15E1                     u6767:	
  1350  15E1  0BB6               	decfsz	??_inicializacion,f
  1351  15E2  2DE1               	goto	u6767
  1352  15E3  0BB7               	decfsz	??_inicializacion+1,f
  1353  15E4  2DE1               	goto	u6767
  1354  15E5  2DE6               	nop2
  1355                           
  1356                           ;lab3ej2.c: 296: PORTBbits.RB4=0;
  1357  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  1358  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  1359  15E8  1206               	bcf	6,4	;volatile
  1360                           
  1361                           ;lab3ej2.c: 297: _delay((unsigned long)((5)*(20000000/4000.0)));
  1362  15E9  3021               	movlw	33
  1363  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  1364  15EB  1303               	bcf	3,6	;RP1=0, select bank0
  1365  15EC  00B7               	movwf	??_inicializacion+1
  1366  15ED  3075               	movlw	117
  1367  15EE  00B6               	movwf	??_inicializacion
  1368  15EF                     u6777:	
  1369  15EF  0BB6               	decfsz	??_inicializacion,f
  1370  15F0  2DEF               	goto	u6777
  1371  15F1  0BB7               	decfsz	??_inicializacion+1,f
  1372  15F2  2DEF               	goto	u6777
  1373  15F3  2DF4               	nop2
  1374                           
  1375                           ;lab3ej2.c: 298: PORTBbits.RB6=0;
  1376  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  1377  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  1378  15F6  1306               	bcf	6,6	;volatile
  1379                           
  1380                           ;lab3ej2.c: 299: PORTBbits.RB5=0;
  1381  15F7  1286               	bcf	6,5	;volatile
  1382                           
  1383                           ;lab3ej2.c: 300: PORTBbits.RB0=0;
  1384  15F8  1006               	bcf	6,0	;volatile
  1385                           
  1386                           ;lab3ej2.c: 301: PORTBbits.RB1=0;
  1387  15F9  1086               	bcf	6,1	;volatile
  1388                           
  1389                           ;lab3ej2.c: 302: PORTBbits.RB2=0;
  1390  15FA  1106               	bcf	6,2	;volatile
  1391                           
  1392                           ;lab3ej2.c: 303: PORTBbits.RB3=0;
  1393  15FB  1186               	bcf	6,3	;volatile
  1394                           
  1395                           ;lab3ej2.c: 304: PORTBbits.RB4=1;
  1396  15FC  1606               	bsf	6,4	;volatile
  1397                           
  1398                           ;lab3ej2.c: 305: _delay((unsigned long)((5)*(20000000/4000.0)));
  1399  15FD  3021               	movlw	33
  1400  15FE  1283               	bcf	3,5	;RP0=0, select bank0
  1401  15FF  1303               	bcf	3,6	;RP1=0, select bank0
  1402  1600  00B7               	movwf	??_inicializacion+1
  1403  1601  3075               	movlw	117
  1404  1602  00B6               	movwf	??_inicializacion
  1405  1603                     u6787:	
  1406  1603  0BB6               	decfsz	??_inicializacion,f
  1407  1604  2E03               	goto	u6787
  1408  1605  0BB7               	decfsz	??_inicializacion+1,f
  1409  1606  2E03               	goto	u6787
  1410  1607  2E08               	nop2
  1411                           
  1412                           ;lab3ej2.c: 306: PORTBbits.RB4=0;
  1413  1608  1283               	bcf	3,5	;RP0=0, select bank0
  1414  1609  1303               	bcf	3,6	;RP1=0, select bank0
  1415  160A  1206               	bcf	6,4	;volatile
  1416                           
  1417                           ;lab3ej2.c: 307: PORTBbits.RB6=0;
  1418  160B  1306               	bcf	6,6	;volatile
  1419                           
  1420                           ;lab3ej2.c: 308: PORTBbits.RB5=0;
  1421  160C  1286               	bcf	6,5	;volatile
  1422                           
  1423                           ;lab3ej2.c: 309: PORTBbits.RB0=1;
  1424  160D  1406               	bsf	6,0	;volatile
  1425                           
  1426                           ;lab3ej2.c: 310: PORTBbits.RB1=0;
  1427  160E  1086               	bcf	6,1	;volatile
  1428                           
  1429                           ;lab3ej2.c: 311: PORTBbits.RB2=0;
  1430  160F  1106               	bcf	6,2	;volatile
  1431                           
  1432                           ;lab3ej2.c: 312: PORTBbits.RB3=0;
  1433  1610  1186               	bcf	6,3	;volatile
  1434                           
  1435                           ;lab3ej2.c: 313: PORTBbits.RB4=1;
  1436  1611  1606               	bsf	6,4	;volatile
  1437                           
  1438                           ;lab3ej2.c: 314: _delay((unsigned long)((5)*(20000000/4000.0)));
  1439  1612  3021               	movlw	33
  1440  1613  1283               	bcf	3,5	;RP0=0, select bank0
  1441  1614  1303               	bcf	3,6	;RP1=0, select bank0
  1442  1615  00B7               	movwf	??_inicializacion+1
  1443  1616  3075               	movlw	117
  1444  1617  00B6               	movwf	??_inicializacion
  1445  1618                     u6797:	
  1446  1618  0BB6               	decfsz	??_inicializacion,f
  1447  1619  2E18               	goto	u6797
  1448  161A  0BB7               	decfsz	??_inicializacion+1,f
  1449  161B  2E18               	goto	u6797
  1450  161C  2E1D               	nop2
  1451                           
  1452                           ;lab3ej2.c: 315: PORTBbits.RB4=0;
  1453  161D  1283               	bcf	3,5	;RP0=0, select bank0
  1454  161E  1303               	bcf	3,6	;RP1=0, select bank0
  1455  161F  1206               	bcf	6,4	;volatile
  1456                           
  1457                           ;lab3ej2.c: 316: _delay((unsigned long)((5)*(20000000/4000.0)));
  1458  1620  3021               	movlw	33
  1459  1621  1283               	bcf	3,5	;RP0=0, select bank0
  1460  1622  1303               	bcf	3,6	;RP1=0, select bank0
  1461  1623  00B7               	movwf	??_inicializacion+1
  1462  1624  3075               	movlw	117
  1463  1625  00B6               	movwf	??_inicializacion
  1464  1626                     u6807:	
  1465  1626  0BB6               	decfsz	??_inicializacion,f
  1466  1627  2E26               	goto	u6807
  1467  1628  0BB7               	decfsz	??_inicializacion+1,f
  1468  1629  2E26               	goto	u6807
  1469  162A  2E2B               	nop2
  1470                           
  1471                           ;lab3ej2.c: 317: PORTBbits.RB6=0;
  1472  162B  1283               	bcf	3,5	;RP0=0, select bank0
  1473  162C  1303               	bcf	3,6	;RP1=0, select bank0
  1474  162D  1306               	bcf	6,6	;volatile
  1475                           
  1476                           ;lab3ej2.c: 318: PORTBbits.RB5=0;
  1477  162E  1286               	bcf	6,5	;volatile
  1478                           
  1479                           ;lab3ej2.c: 319: PORTBbits.RB0=0;
  1480  162F  1006               	bcf	6,0	;volatile
  1481                           
  1482                           ;lab3ej2.c: 320: PORTBbits.RB1=0;
  1483  1630  1086               	bcf	6,1	;volatile
  1484                           
  1485                           ;lab3ej2.c: 321: PORTBbits.RB2=0;
  1486  1631  1106               	bcf	6,2	;volatile
  1487                           
  1488                           ;lab3ej2.c: 322: PORTBbits.RB3=0;
  1489  1632  1186               	bcf	6,3	;volatile
  1490                           
  1491                           ;lab3ej2.c: 323: PORTBbits.RB4=1;
  1492  1633  1606               	bsf	6,4	;volatile
  1493                           
  1494                           ;lab3ej2.c: 324: _delay((unsigned long)((5)*(20000000/4000.0)));
  1495  1634  3021               	movlw	33
  1496  1635  1283               	bcf	3,5	;RP0=0, select bank0
  1497  1636  1303               	bcf	3,6	;RP1=0, select bank0
  1498  1637  00B7               	movwf	??_inicializacion+1
  1499  1638  3075               	movlw	117
  1500  1639  00B6               	movwf	??_inicializacion
  1501  163A                     u6817:	
  1502  163A  0BB6               	decfsz	??_inicializacion,f
  1503  163B  2E3A               	goto	u6817
  1504  163C  0BB7               	decfsz	??_inicializacion+1,f
  1505  163D  2E3A               	goto	u6817
  1506  163E  2E3F               	nop2
  1507                           
  1508                           ;lab3ej2.c: 325: PORTBbits.RB4=0;
  1509  163F  1283               	bcf	3,5	;RP0=0, select bank0
  1510  1640  1303               	bcf	3,6	;RP1=0, select bank0
  1511  1641  1206               	bcf	6,4	;volatile
  1512                           
  1513                           ;lab3ej2.c: 326: PORTBbits.RB6=0;
  1514  1642  1306               	bcf	6,6	;volatile
  1515                           
  1516                           ;lab3ej2.c: 327: PORTBbits.RB5=0;
  1517  1643  1286               	bcf	6,5	;volatile
  1518                           
  1519                           ;lab3ej2.c: 328: PORTBbits.RB0=0;
  1520  1644  1006               	bcf	6,0	;volatile
  1521                           
  1522                           ;lab3ej2.c: 329: PORTBbits.RB1=0;
  1523  1645  1086               	bcf	6,1	;volatile
  1524                           
  1525                           ;lab3ej2.c: 330: PORTBbits.RB2=0;
  1526  1646  1106               	bcf	6,2	;volatile
  1527                           
  1528                           ;lab3ej2.c: 331: PORTBbits.RB3=1;
  1529  1647  1586               	bsf	6,3	;volatile
  1530                           
  1531                           ;lab3ej2.c: 332: PORTBbits.RB4=1;
  1532  1648  1606               	bsf	6,4	;volatile
  1533                           
  1534                           ;lab3ej2.c: 333: _delay((unsigned long)((5)*(20000000/4000.0)));
  1535  1649  3021               	movlw	33
  1536  164A  1283               	bcf	3,5	;RP0=0, select bank0
  1537  164B  1303               	bcf	3,6	;RP1=0, select bank0
  1538  164C  00B7               	movwf	??_inicializacion+1
  1539  164D  3075               	movlw	117
  1540  164E  00B6               	movwf	??_inicializacion
  1541  164F                     u6827:	
  1542  164F  0BB6               	decfsz	??_inicializacion,f
  1543  1650  2E4F               	goto	u6827
  1544  1651  0BB7               	decfsz	??_inicializacion+1,f
  1545  1652  2E4F               	goto	u6827
  1546  1653  2E54               	nop2
  1547                           
  1548                           ;lab3ej2.c: 334: PORTBbits.RB4=0;
  1549  1654  1283               	bcf	3,5	;RP0=0, select bank0
  1550  1655  1303               	bcf	3,6	;RP1=0, select bank0
  1551  1656  1206               	bcf	6,4	;volatile
  1552                           
  1553                           ;lab3ej2.c: 335: _delay((unsigned long)((5)*(20000000/4000.0)));
  1554  1657  3021               	movlw	33
  1555  1658  1283               	bcf	3,5	;RP0=0, select bank0
  1556  1659  1303               	bcf	3,6	;RP1=0, select bank0
  1557  165A  00B7               	movwf	??_inicializacion+1
  1558  165B  3075               	movlw	117
  1559  165C  00B6               	movwf	??_inicializacion
  1560  165D                     u6837:	
  1561  165D  0BB6               	decfsz	??_inicializacion,f
  1562  165E  2E5D               	goto	u6837
  1563  165F  0BB7               	decfsz	??_inicializacion+1,f
  1564  1660  2E5D               	goto	u6837
  1565  1661  2E62               	nop2
  1566                           
  1567                           ;lab3ej2.c: 336: PORTBbits.RB6=0;
  1568  1662  1283               	bcf	3,5	;RP0=0, select bank0
  1569  1663  1303               	bcf	3,6	;RP1=0, select bank0
  1570  1664  1306               	bcf	6,6	;volatile
  1571                           
  1572                           ;lab3ej2.c: 337: PORTBbits.RB5=0;
  1573  1665  1286               	bcf	6,5	;volatile
  1574                           
  1575                           ;lab3ej2.c: 338: PORTBbits.RB0=0;
  1576  1666  1006               	bcf	6,0	;volatile
  1577                           
  1578                           ;lab3ej2.c: 339: PORTBbits.RB1=0;
  1579  1667  1086               	bcf	6,1	;volatile
  1580                           
  1581                           ;lab3ej2.c: 340: PORTBbits.RB2=0;
  1582  1668  1106               	bcf	6,2	;volatile
  1583                           
  1584                           ;lab3ej2.c: 341: PORTBbits.RB3=0;
  1585  1669  1186               	bcf	6,3	;volatile
  1586                           
  1587                           ;lab3ej2.c: 342: PORTBbits.RB4=1;
  1588  166A  1606               	bsf	6,4	;volatile
  1589                           
  1590                           ;lab3ej2.c: 343: _delay((unsigned long)((5)*(20000000/4000.0)));
  1591  166B  3021               	movlw	33
  1592  166C  1283               	bcf	3,5	;RP0=0, select bank0
  1593  166D  1303               	bcf	3,6	;RP1=0, select bank0
  1594  166E  00B7               	movwf	??_inicializacion+1
  1595  166F  3075               	movlw	117
  1596  1670  00B6               	movwf	??_inicializacion
  1597  1671                     u6847:	
  1598  1671  0BB6               	decfsz	??_inicializacion,f
  1599  1672  2E71               	goto	u6847
  1600  1673  0BB7               	decfsz	??_inicializacion+1,f
  1601  1674  2E71               	goto	u6847
  1602  1675  2E76               	nop2
  1603                           
  1604                           ;lab3ej2.c: 344: PORTBbits.RB4=0;
  1605  1676  1283               	bcf	3,5	;RP0=0, select bank0
  1606  1677  1303               	bcf	3,6	;RP1=0, select bank0
  1607  1678  1206               	bcf	6,4	;volatile
  1608                           
  1609                           ;lab3ej2.c: 345: PORTBbits.RB6=0;
  1610  1679  1306               	bcf	6,6	;volatile
  1611                           
  1612                           ;lab3ej2.c: 346: PORTBbits.RB5=0;
  1613  167A  1286               	bcf	6,5	;volatile
  1614                           
  1615                           ;lab3ej2.c: 347: PORTBbits.RB0=1;
  1616  167B  1406               	bsf	6,0	;volatile
  1617                           
  1618                           ;lab3ej2.c: 348: PORTBbits.RB1=1;
  1619  167C  1486               	bsf	6,1	;volatile
  1620                           
  1621                           ;lab3ej2.c: 349: PORTBbits.RB2=1;
  1622  167D  1506               	bsf	6,2	;volatile
  1623                           
  1624                           ;lab3ej2.c: 350: PORTBbits.RB3=0;
  1625  167E  1186               	bcf	6,3	;volatile
  1626                           
  1627                           ;lab3ej2.c: 351: PORTBbits.RB4=1;
  1628  167F  1606               	bsf	6,4	;volatile
  1629                           
  1630                           ;lab3ej2.c: 352: _delay((unsigned long)((5)*(20000000/4000.0)));
  1631  1680  3021               	movlw	33
  1632  1681  1283               	bcf	3,5	;RP0=0, select bank0
  1633  1682  1303               	bcf	3,6	;RP1=0, select bank0
  1634  1683  00B7               	movwf	??_inicializacion+1
  1635  1684  3075               	movlw	117
  1636  1685  00B6               	movwf	??_inicializacion
  1637  1686                     u6857:	
  1638  1686  0BB6               	decfsz	??_inicializacion,f
  1639  1687  2E86               	goto	u6857
  1640  1688  0BB7               	decfsz	??_inicializacion+1,f
  1641  1689  2E86               	goto	u6857
  1642  168A  2E8B               	nop2
  1643                           
  1644                           ;lab3ej2.c: 353: PORTBbits.RB4=0;
  1645  168B  1283               	bcf	3,5	;RP0=0, select bank0
  1646  168C  1303               	bcf	3,6	;RP1=0, select bank0
  1647  168D  1206               	bcf	6,4	;volatile
  1648  168E  0008               	return
  1649  168F                     __end_of_inicializacion:	
  1650                           
  1651                           	psect	text2
  1652  0823                     __ptext2:	
  1653 ;; *************** function _armovector *****************
  1654 ;; Defined at:
  1655 ;;		line 117 in file "lab3ej2.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0
  1671 ;;      Temps:          0       0       3       0       0
  1672 ;;      Totals:         0       0       3       0       0
  1673 ;;Total ram usage:        3 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    7
  1676 ;; This function calls:
  1677 ;;		_sprintf
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           
  1684                           ;psect for function _armovector
  1685  0823                     _armovector:	
  1686                           
  1687                           ;lab3ej2.c: 119: if (PORTBbits.RB7==1)
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _armovector: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1691  0823  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0824  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0825  1F86               	btfss	6,7	;volatile
  1694  0826  2876               	goto	l4269
  1695                           
  1696                           ;lab3ej2.c: 120: {
  1697                           ;lab3ej2.c: 121: ADCON0=0b10000001;
  1698  0827  3081               	movlw	129
  1699  0828  009F               	movwf	31	;volatile
  1700                           
  1701                           ;lab3ej2.c: 122: u=0;
  1702  0829  1683               	bsf	3,5	;RP0=1, select bank1
  1703  082A  1303               	bcf	3,6	;RP1=0, select bank1
  1704  082B  01EA               	clrf	_u^(0+128)
  1705                           
  1706                           ;lab3ej2.c: 123: sprintf(linea1,"voltimetro AN%u\0",u);
  1707  082C  304A               	movlw	(low (_linea1| 0))& (0+255)
  1708  082D  00D9               	movwf	sprintf@sp^(0+128)
  1709  082E  3000               	movlw	0
  1710  082F  00DA               	movwf	(sprintf@sp+1)^(0+128)
  1711  0830  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1712  0831  00E7               	movwf	??_armovector^(0+128)
  1713  0832  0867               	movf	??_armovector^(0+128),w
  1714  0833  00DB               	movwf	sprintf@f^(0+128)
  1715  0834  086A               	movf	_u^(0+128),w
  1716  0835  00E8               	movwf	(??_armovector+1)^(0+128)
  1717  0836  01E9               	clrf	((??_armovector+1)^(0+128)+1)
  1718  0837  0868               	movf	(??_armovector+1)^(0+128),w
  1719  0838  00DC               	movwf	(?_sprintf^(0+128)+3)
  1720  0839  0869               	movf	(??_armovector+2)^(0+128),w
  1721  083A  00DD               	movwf	((?_sprintf+1)^(0+128)+3)
  1722  083B  120A  118A  202F  120A  158A  	fcall	_sprintf
  1723                           
  1724                           ;lab3ej2.c: 124: p1=&linea1;
  1725  0840  304A               	movlw	(low (_linea1| 0))& (0+255)
  1726  0841  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0842  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0843  00E7               	movwf	??_armovector^(0+128)
  1729  0844  0867               	movf	??_armovector^(0+128),w
  1730  0845  00EC               	movwf	_p1^(0+128)
  1731                           
  1732                           ;lab3ej2.c: 125: sprintf(linea2,"%1.3fV // %4i\0",volt,adc);
  1733  0846  30A8               	movlw	(low (_linea2| (0+256)))& (0+255)
  1734  0847  00D9               	movwf	sprintf@sp^(0+128)
  1735  0848  3001               	movlw	1
  1736  0849  00DA               	movwf	(sprintf@sp+1)^(0+128)
  1737  084A  3088               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1738  084B  00E7               	movwf	??_armovector^(0+128)
  1739  084C  0867               	movf	??_armovector^(0+128),w
  1740  084D  00DB               	movwf	sprintf@f^(0+128)
  1741  084E  1283               	bcf	3,5	;RP0=0, select bank0
  1742  084F  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0850  0844               	movf	_volt,w
  1744  0851  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0852  1303               	bcf	3,6	;RP1=0, select bank1
  1746  0853  00DC               	movwf	(?_sprintf^(0+128)+3)
  1747  0854  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0855  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0856  0845               	movf	_volt+1,w
  1750  0857  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0858  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0859  00DD               	movwf	((?_sprintf+1)^(0+128)+3)
  1753  085A  1283               	bcf	3,5	;RP0=0, select bank0
  1754  085B  1303               	bcf	3,6	;RP1=0, select bank0
  1755  085C  0846               	movf	_volt+2,w
  1756  085D  1683               	bsf	3,5	;RP0=1, select bank1
  1757  085E  1303               	bcf	3,6	;RP1=0, select bank1
  1758  085F  00DE               	movwf	((?_sprintf+2)^(0+128)+3)
  1759  0860  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0861  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0862  0848               	movf	_adc+1,w
  1762  0863  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0864  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0865  00E0               	movwf	((?_sprintf+1)^(0+128)+6)
  1765  0866  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0867  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0868  0847               	movf	_adc,w
  1768  0869  1683               	bsf	3,5	;RP0=1, select bank1
  1769  086A  1303               	bcf	3,6	;RP1=0, select bank1
  1770  086B  00DF               	movwf	(?_sprintf^(0+128)+6)
  1771  086C  120A  118A  202F   	fcall	_sprintf
  1772                           
  1773                           ;lab3ej2.c: 126: p2=&linea2;
  1774  086F  30A8               	movlw	(low (_linea2| (0+256)))& (0+255)
  1775  0870  1683               	bsf	3,5	;RP0=1, select bank1
  1776  0871  1303               	bcf	3,6	;RP1=0, select bank1
  1777  0872  00E7               	movwf	??_armovector^(0+128)
  1778  0873  0867               	movf	??_armovector^(0+128),w
  1779  0874  00EB               	movwf	_p2^(0+128)
  1780                           
  1781                           ;lab3ej2.c: 127: }
  1782  0875  0008               	return
  1783  0876                     l4269:	
  1784                           
  1785                           ;lab3ej2.c: 128: else
  1786                           ;lab3ej2.c: 129: {
  1787                           ;lab3ej2.c: 130: ADCON0=0b10000101;
  1788  0876  3085               	movlw	133
  1789  0877  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0878  009F               	movwf	31	;volatile
  1791                           
  1792                           ;lab3ej2.c: 131: u=1;
  1793  0879  1683               	bsf	3,5	;RP0=1, select bank1
  1794  087A  1303               	bcf	3,6	;RP1=0, select bank1
  1795  087B  01EA               	clrf	_u^(0+128)
  1796  087C  0AEA               	incf	_u^(0+128),f
  1797                           
  1798                           ;lab3ej2.c: 132: sprintf(linea1,"voltimetro AN%u\0",u);
  1799  087D  304A               	movlw	(low (_linea1| 0))& (0+255)
  1800  087E  00D9               	movwf	sprintf@sp^(0+128)
  1801  087F  3000               	movlw	0
  1802  0880  00DA               	movwf	(sprintf@sp+1)^(0+128)
  1803  0881  3077               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1804  0882  00E7               	movwf	??_armovector^(0+128)
  1805  0883  0867               	movf	??_armovector^(0+128),w
  1806  0884  00DB               	movwf	sprintf@f^(0+128)
  1807  0885  086A               	movf	_u^(0+128),w
  1808  0886  00E8               	movwf	(??_armovector+1)^(0+128)
  1809  0887  01E9               	clrf	((??_armovector+1)^(0+128)+1)
  1810  0888  0868               	movf	(??_armovector+1)^(0+128),w
  1811  0889  00DC               	movwf	(?_sprintf^(0+128)+3)
  1812  088A  0869               	movf	(??_armovector+2)^(0+128),w
  1813  088B  00DD               	movwf	((?_sprintf+1)^(0+128)+3)
  1814  088C  120A  118A  202F  120A  158A  	fcall	_sprintf
  1815                           
  1816                           ;lab3ej2.c: 133: p1=&linea1;
  1817  0891  304A               	movlw	(low (_linea1| 0))& (0+255)
  1818  0892  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0893  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0894  00E7               	movwf	??_armovector^(0+128)
  1821  0895  0867               	movf	??_armovector^(0+128),w
  1822  0896  00EC               	movwf	_p1^(0+128)
  1823                           
  1824                           ;lab3ej2.c: 134: sprintf(linea2,"%1.3fV // %4i\0",volt,adc);
  1825  0897  30A8               	movlw	(low (_linea2| (0+256)))& (0+255)
  1826  0898  00D9               	movwf	sprintf@sp^(0+128)
  1827  0899  3001               	movlw	1
  1828  089A  00DA               	movwf	(sprintf@sp+1)^(0+128)
  1829  089B  3088               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1830  089C  00E7               	movwf	??_armovector^(0+128)
  1831  089D  0867               	movf	??_armovector^(0+128),w
  1832  089E  00DB               	movwf	sprintf@f^(0+128)
  1833  089F  1283               	bcf	3,5	;RP0=0, select bank0
  1834  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  1835  08A1  0844               	movf	_volt,w
  1836  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  1837  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  1838  08A4  00DC               	movwf	(?_sprintf^(0+128)+3)
  1839  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  1840  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  1841  08A7  0845               	movf	_volt+1,w
  1842  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1843  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1844  08AA  00DD               	movwf	((?_sprintf+1)^(0+128)+3)
  1845  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1846  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1847  08AD  0846               	movf	_volt+2,w
  1848  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1849  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1850  08B0  00DE               	movwf	((?_sprintf+2)^(0+128)+3)
  1851  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1852  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1853  08B3  0848               	movf	_adc+1,w
  1854  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  1855  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  1856  08B6  00E0               	movwf	((?_sprintf+1)^(0+128)+6)
  1857  08B7  1283               	bcf	3,5	;RP0=0, select bank0
  1858  08B8  1303               	bcf	3,6	;RP1=0, select bank0
  1859  08B9  0847               	movf	_adc,w
  1860  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  1861  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  1862  08BC  00DF               	movwf	(?_sprintf^(0+128)+6)
  1863  08BD  120A  118A  202F   	fcall	_sprintf
  1864                           
  1865                           ;lab3ej2.c: 135: p2=&linea2;
  1866  08C0  30A8               	movlw	(low (_linea2| (0+256)))& (0+255)
  1867  08C1  1683               	bsf	3,5	;RP0=1, select bank1
  1868  08C2  1303               	bcf	3,6	;RP1=0, select bank1
  1869  08C3  00E7               	movwf	??_armovector^(0+128)
  1870  08C4  0867               	movf	??_armovector^(0+128),w
  1871  08C5  00EB               	movwf	_p2^(0+128)
  1872  08C6  0008               	return
  1873  08C7                     __end_of_armovector:	
  1874                           
  1875                           	psect	text3
  1876  002F                     __ptext3:	
  1877 ;; *************** function _sprintf *****************
  1878 ;; Defined at:
  1879 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  sp              2   57[BANK1 ] PTR unsigned char 
  1882 ;;		 -> linea2(16), linea1(16), 
  1883 ;;  f               1   59[BANK1 ] PTR const unsigned char 
  1884 ;;		 -> STR_4(15), STR_3(17), STR_2(15), STR_1(17), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  val             4   12[BANK3 ] unsigned long 
  1887 ;;  tmpval          4    8[BANK3 ] struct .
  1888 ;;  fval            3   18[BANK3 ] struct .
  1889 ;;  prec            2   21[BANK3 ] int 
  1890 ;;  exp             2   16[BANK3 ] int 
  1891 ;;  width           2    6[BANK3 ] int 
  1892 ;;  flag            2    4[BANK3 ] unsigned short 
  1893 ;;  cp              2    0        PTR const unsigned char 
  1894 ;;  len             2    0        unsigned int 
  1895 ;;  c               1   23[BANK3 ] char 
  1896 ;;  ap              1    3[BANK3 ] PTR void [1]
  1897 ;;		 -> ?_sprintf(2), 
  1898 ;;  d               1    0        unsigned char 
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2   57[BANK1 ] int 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       0       8       0       0
  1909 ;;      Locals:         0       0       0      24       0
  1910 ;;      Temps:          0       0       6       0       0
  1911 ;;      Totals:         0       0      14      24       0
  1912 ;;Total ram usage:       38 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    6
  1915 ;; This function calls:
  1916 ;;		___awdiv
  1917 ;;		___ftadd
  1918 ;;		___ftge
  1919 ;;		___ftmul
  1920 ;;		___ftneg
  1921 ;;		___ftsub
  1922 ;;		___fttol
  1923 ;;		___lldiv
  1924 ;;		___llmod
  1925 ;;		___lltoft
  1926 ;;		___wmul
  1927 ;;		__div_to_l_
  1928 ;;		__tdiv_to_l_
  1929 ;;		_fround
  1930 ;;		_isdigit
  1931 ;;		_scale
  1932 ;; This function is called by:
  1933 ;;		_armovector
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _sprintf
  1939  002F                     _sprintf:	
  1940                           
  1941                           ;doprnt.c: 494: va_list ap;
  1942                           ;doprnt.c: 499: signed char c;
  1943                           ;doprnt.c: 501: int width;
  1944                           ;doprnt.c: 504: int prec;
  1945                           ;doprnt.c: 508: unsigned short flag;
  1946                           ;doprnt.c: 515: char d;
  1947                           ;doprnt.c: 516: double fval;
  1948                           ;doprnt.c: 517: int exp;
  1949                           ;doprnt.c: 523: union {
  1950                           ;doprnt.c: 524: unsigned long vd;
  1951                           ;doprnt.c: 525: double integ;
  1952                           ;doprnt.c: 526: } tmpval;
  1953                           ;doprnt.c: 528: unsigned long val;
  1954                           ;doprnt.c: 529: unsigned len;
  1955                           ;doprnt.c: 530: const char * cp;
  1956                           ;doprnt.c: 533: *ap = __va_start();
  1957                           
  1958                           ;incstack = 0
  1959 ;; using string table level
  1960                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1961  002F  30DC               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  1962  0030  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0031  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0032  00E1               	movwf	??_sprintf^(0+128)
  1965  0033  0861               	movf	??_sprintf^(0+128),w
  1966  0034  1683               	bsf	3,5	;RP0=1, select bank3
  1967  0035  1703               	bsf	3,6	;RP1=1, select bank3
  1968  0036  0093               	movwf	sprintf@ap^(0+384)
  1969  0037                     l4249:	
  1970                           ;doprnt.c: 536: while(c = *f++) {
  1971                           
  1972  0037  3001               	movlw	1
  1973  0038  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0039  07DB               	addwf	sprintf@f^(0+128),f
  1975  003A  30FF               	movlw	-1
  1976  003B  075B               	addwf	sprintf@f^(0+128),w
  1977  003C  0084               	movwf	4
  1978  003D  160A  118A  2000  120A  118A  	fcall	stringdir
  1979  0042  00E1               	movwf	??_sprintf^(0+128)
  1980  0043  0861               	movf	??_sprintf^(0+128),w
  1981  0044  1683               	bsf	3,5	;RP0=1, select bank3
  1982  0045  1703               	bsf	3,6	;RP1=1, select bank3
  1983  0046  00A7               	movwf	sprintf@c^(0+384)
  1984  0047  0827               	movf	sprintf@c^(0+384),w
  1985  0048  1903               	btfsc	3,2
  1986  0049  2FF0               	goto	L9
  1987                           
  1988                           ;doprnt.c: 538: if(c != '%')
  1989  004A  3025               	movlw	37
  1990  004B  0627               	xorwf	sprintf@c^(0+384),w
  1991  004C  1903               	btfsc	3,2
  1992  004D  285E               	goto	l3973
  1993                           
  1994                           ;doprnt.c: 540: {
  1995                           ;doprnt.c: 541: ((*sp++ = (c)));
  1996  004E  0827               	movf	sprintf@c^(0+384),w
  1997  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0051  00E1               	movwf	??_sprintf^(0+128)
  2000  0052  0859               	movf	sprintf@sp^(0+128),w
  2001  0053  0084               	movwf	4
  2002  0054  1783               	bsf	3,7
  2003  0055  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  2004  0056  1383               	bcf	3,7
  2005  0057  0861               	movf	??_sprintf^(0+128),w
  2006  0058  0080               	movwf	0
  2007  0059  3001               	movlw	1
  2008  005A  07D9               	addwf	sprintf@sp^(0+128),f
  2009  005B  1803               	skipnc
  2010  005C  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  2011                           
  2012                           ;doprnt.c: 542: continue;
  2013  005D  2837               	goto	l4249
  2014  005E                     l3973:	
  2015                           
  2016                           ;doprnt.c: 543: }
  2017                           ;doprnt.c: 546: width = 0;
  2018  005E  1683               	bsf	3,5	;RP0=1, select bank3
  2019  005F  1703               	bsf	3,6	;RP1=1, select bank3
  2020  0060  0196               	clrf	sprintf@width^(0+384)
  2021  0061  0197               	clrf	(sprintf@width+1)^(0+384)
  2022                           
  2023                           ;doprnt.c: 548: flag = 0;
  2024  0062  0194               	clrf	sprintf@flag^(0+384)
  2025  0063  0195               	clrf	(sprintf@flag+1)^(0+384)
  2026                           
  2027                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2028  0064  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0065  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0066  085B               	movf	sprintf@f^(0+128),w
  2031  0067  0084               	movwf	4
  2032  0068  160A  118A  2000  120A  118A  	fcall	stringdir
  2033  006D  160A  158A  22F5  120A  118A  	fcall	_isdigit
  2034  0072  1C03               	btfss	3,0
  2035  0073  28CA               	goto	l3987
  2036                           
  2037                           ;doprnt.c: 598: width = 0;
  2038  0074  1683               	bsf	3,5	;RP0=1, select bank3
  2039  0075  1703               	bsf	3,6	;RP1=1, select bank3
  2040  0076  0196               	clrf	sprintf@width^(0+384)
  2041  0077  0197               	clrf	(sprintf@width+1)^(0+384)
  2042  0078                     l3979:	
  2043                           ;doprnt.c: 599: do {
  2044                           
  2045                           
  2046                           ;doprnt.c: 600: width *= 10;
  2047  0078  300A               	movlw	10
  2048  0079  1283               	bcf	3,5	;RP0=0, select bank0
  2049  007A  1303               	bcf	3,6	;RP1=0, select bank0
  2050  007B  00B6               	movwf	___wmul@multiplier
  2051  007C  3000               	movlw	0
  2052  007D  00B7               	movwf	___wmul@multiplier+1
  2053  007E  1683               	bsf	3,5	;RP0=1, select bank3
  2054  007F  1703               	bsf	3,6	;RP1=1, select bank3
  2055  0080  0817               	movf	(sprintf@width+1)^(0+384),w
  2056  0081  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0082  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0083  00B9               	movwf	___wmul@multiplicand+1
  2059  0084  1683               	bsf	3,5	;RP0=1, select bank3
  2060  0085  1703               	bsf	3,6	;RP1=1, select bank3
  2061  0086  0816               	movf	sprintf@width^(0+384),w
  2062  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2064  0089  00B8               	movwf	___wmul@multiplicand
  2065  008A  120A  158A  2000  120A  118A  	fcall	___wmul
  2066  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0091  0837               	movf	?___wmul+1,w
  2069  0092  1683               	bsf	3,5	;RP0=1, select bank3
  2070  0093  1703               	bsf	3,6	;RP1=1, select bank3
  2071  0094  0097               	movwf	(sprintf@width+1)^(0+384)
  2072  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0097  0836               	movf	?___wmul,w
  2075  0098  1683               	bsf	3,5	;RP0=1, select bank3
  2076  0099  1703               	bsf	3,6	;RP1=1, select bank3
  2077  009A  0096               	movwf	sprintf@width^(0+384)
  2078                           
  2079                           ;doprnt.c: 601: width += *f++ - '0';
  2080  009B  1683               	bsf	3,5	;RP0=1, select bank1
  2081  009C  1303               	bcf	3,6	;RP1=0, select bank1
  2082  009D  085B               	movf	sprintf@f^(0+128),w
  2083  009E  0084               	movwf	4
  2084  009F  160A  118A  2000  120A  118A  	fcall	stringdir
  2085  00A4  3ED0               	addlw	208
  2086  00A5  00E1               	movwf	??_sprintf^(0+128)
  2087  00A6  30FF               	movlw	255
  2088  00A7  1803               	skipnc
  2089  00A8  3000               	movlw	0
  2090  00A9  00E2               	movwf	(??_sprintf^(0+128)+1)
  2091  00AA  0861               	movf	??_sprintf^(0+128),w
  2092  00AB  1683               	bsf	3,5	;RP0=1, select bank3
  2093  00AC  1703               	bsf	3,6	;RP1=1, select bank3
  2094  00AD  0796               	addwf	sprintf@width^(0+384),f
  2095  00AE  1803               	skipnc
  2096  00AF  0A97               	incf	(sprintf@width+1)^(0+384),f
  2097  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  2098  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  2099  00B2  0862               	movf	(??_sprintf+1)^(0+128),w
  2100  00B3  1683               	bsf	3,5	;RP0=1, select bank3
  2101  00B4  1703               	bsf	3,6	;RP1=1, select bank3
  2102  00B5  0797               	addwf	(sprintf@width+1)^(0+384),f
  2103  00B6  3001               	movlw	1
  2104  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2105  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2106  00B9  00E1               	movwf	??_sprintf^(0+128)
  2107  00BA  0861               	movf	??_sprintf^(0+128),w
  2108  00BB  07DB               	addwf	sprintf@f^(0+128),f
  2109                           
  2110                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2111  00BC  085B               	movf	sprintf@f^(0+128),w
  2112  00BD  0084               	movwf	4
  2113  00BE  160A  118A  2000  120A  118A  	fcall	stringdir
  2114  00C3  160A  158A  22F5  120A  118A  	fcall	_isdigit
  2115  00C8  1803               	btfsc	3,0
  2116  00C9  2878               	goto	l3979
  2117  00CA                     l3987:	
  2118                           
  2119                           ;doprnt.c: 608: }
  2120                           ;doprnt.c: 611: if(*f == '.') {
  2121  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  2122  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  2123  00CC  085B               	movf	sprintf@f^(0+128),w
  2124  00CD  0084               	movwf	4
  2125  00CE  160A  118A  2000  120A  118A  	fcall	stringdir
  2126  00D3  3A2E               	xorlw	46
  2127  00D4  1D03               	skipz
  2128  00D5  2934               	goto	l4001
  2129                           
  2130                           ;doprnt.c: 612: flag |= 0x4000;
  2131  00D6  1683               	bsf	3,5	;RP0=1, select bank3
  2132  00D7  1703               	bsf	3,6	;RP1=1, select bank3
  2133  00D8  1715               	bsf	(sprintf@flag^(0+384)+1),6
  2134                           
  2135                           ;doprnt.c: 613: f++;
  2136  00D9  3001               	movlw	1
  2137  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  2138  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  2139  00DC  00E1               	movwf	??_sprintf^(0+128)
  2140  00DD  0861               	movf	??_sprintf^(0+128),w
  2141  00DE  07DB               	addwf	sprintf@f^(0+128),f
  2142                           
  2143                           ;doprnt.c: 620: {
  2144                           ;doprnt.c: 621: prec = 0;
  2145  00DF  1683               	bsf	3,5	;RP0=1, select bank3
  2146  00E0  1703               	bsf	3,6	;RP1=1, select bank3
  2147  00E1  01A5               	clrf	sprintf@prec^(0+384)
  2148  00E2  01A6               	clrf	(sprintf@prec+1)^(0+384)
  2149  00E3                     l3999:	
  2150                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  2151                           
  2152  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  2153  00E4  085B               	movf	sprintf@f^(0+128),w
  2154  00E5  0084               	movwf	4
  2155  00E6  160A  118A  2000  120A  118A  	fcall	stringdir
  2156  00EB  160A  158A  22F5  120A  118A  	fcall	_isdigit
  2157  00F0  1C03               	btfss	3,0
  2158  00F1  293E               	goto	l4007
  2159                           
  2160                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  2161  00F2  1683               	bsf	3,5	;RP0=1, select bank3
  2162  00F3  1703               	bsf	3,6	;RP1=1, select bank3
  2163  00F4  0826               	movf	(sprintf@prec+1)^(0+384),w
  2164  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  2165  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  2166  00F7  00B7               	movwf	___wmul@multiplier+1
  2167  00F8  1683               	bsf	3,5	;RP0=1, select bank3
  2168  00F9  1703               	bsf	3,6	;RP1=1, select bank3
  2169  00FA  0825               	movf	sprintf@prec^(0+384),w
  2170  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2171  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2172  00FD  00B6               	movwf	___wmul@multiplier
  2173  00FE  300A               	movlw	10
  2174  00FF  00B8               	movwf	___wmul@multiplicand
  2175  0100  3000               	movlw	0
  2176  0101  00B9               	movwf	___wmul@multiplicand+1
  2177  0102  120A  158A  2000  120A  118A  	fcall	___wmul
  2178  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0108  1303               	bcf	3,6	;RP1=0, select bank1
  2180  0109  085B               	movf	sprintf@f^(0+128),w
  2181  010A  0084               	movwf	4
  2182  010B  160A  118A  2000  120A  118A  	fcall	stringdir
  2183  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2184  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2185  0112  0736               	addwf	?___wmul,w
  2186  0113  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0114  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0115  00E1               	movwf	??_sprintf^(0+128)
  2189  0116  3000               	movlw	0
  2190  0117  1803               	skipnc
  2191  0118  3001               	movlw	1
  2192  0119  1283               	bcf	3,5	;RP0=0, select bank0
  2193  011A  1303               	bcf	3,6	;RP1=0, select bank0
  2194  011B  0737               	addwf	?___wmul+1,w
  2195  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2196  011D  1303               	bcf	3,6	;RP1=0, select bank1
  2197  011E  00E2               	movwf	(??_sprintf+1)^(0+128)
  2198  011F  0861               	movf	??_sprintf^(0+128),w
  2199  0120  3ED0               	addlw	208
  2200  0121  1683               	bsf	3,5	;RP0=1, select bank3
  2201  0122  1703               	bsf	3,6	;RP1=1, select bank3
  2202  0123  00A5               	movwf	sprintf@prec^(0+384)
  2203  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0125  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0126  0862               	movf	(??_sprintf+1)^(0+128),w
  2206  0127  1803               	skipnc
  2207  0128  3E01               	addlw	1
  2208  0129  3EFF               	addlw	255
  2209  012A  1683               	bsf	3,5	;RP0=1, select bank3
  2210  012B  1703               	bsf	3,6	;RP1=1, select bank3
  2211  012C  00A6               	movwf	(sprintf@prec+1)^(0+384)
  2212  012D  3001               	movlw	1
  2213  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2214  012F  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0130  00E1               	movwf	??_sprintf^(0+128)
  2216  0131  0861               	movf	??_sprintf^(0+128),w
  2217  0132  07DB               	addwf	sprintf@f^(0+128),f
  2218  0133  28E3               	goto	l3999
  2219  0134                     l4001:	
  2220                           ;doprnt.c: 624: }
  2221                           ;doprnt.c: 625: } else {
  2222                           
  2223                           
  2224                           ;doprnt.c: 626: prec = 0;
  2225  0134  1683               	bsf	3,5	;RP0=1, select bank3
  2226  0135  1703               	bsf	3,6	;RP1=1, select bank3
  2227  0136  01A5               	clrf	sprintf@prec^(0+384)
  2228  0137  01A6               	clrf	(sprintf@prec+1)^(0+384)
  2229                           
  2230                           ;doprnt.c: 628: flag |= 0x1000;
  2231  0138  1615               	bsf	(sprintf@flag^(0+384)+1),4
  2232                           
  2233                           ;doprnt.c: 630: }
  2234                           ;doprnt.c: 635: switch(c = *f++) {
  2235  0139  293E               	goto	l4007
  2236  013A                     l185:	
  2237                           ;doprnt.c: 662: case 'f':
  2238                           
  2239                           ;doprnt.c: 638: goto alldone;
  2240                           
  2241                           ;doprnt.c: 637: case 0:
  2242                           
  2243                           
  2244                           ;doprnt.c: 663: flag |= 0x400;
  2245  013A  1515               	bsf	(sprintf@flag^(0+384)+1),2
  2246                           
  2247                           ;doprnt.c: 698: case 'i':
  2248                           ;doprnt.c: 699: break;
  2249                           
  2250                           ;doprnt.c: 697: case 'd':
  2251                           
  2252                           ;doprnt.c: 664: break;
  2253  013B  295D               	goto	l4009
  2254  013C                     l190:	
  2255                           ;doprnt.c: 817: case 'u':
  2256                           
  2257                           ;doprnt.c: 813: continue;
  2258                           
  2259                           ;doprnt.c: 802: default:
  2260                           
  2261                           
  2262                           ;doprnt.c: 818: flag |= 0x40;
  2263  013C  1714               	bsf	sprintf@flag^(0+384),6
  2264                           
  2265                           ;doprnt.c: 822: }
  2266                           
  2267                           ;doprnt.c: 819: break;
  2268  013D  295D               	goto	l4009
  2269  013E                     l4007:	
  2270  013E  3001               	movlw	1
  2271  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2273  0141  07DB               	addwf	sprintf@f^(0+128),f
  2274  0142  30FF               	movlw	-1
  2275  0143  075B               	addwf	sprintf@f^(0+128),w
  2276  0144  0084               	movwf	4
  2277  0145  160A  118A  2000  120A  118A  	fcall	stringdir
  2278  014A  1683               	bsf	3,5	;RP0=1, select bank3
  2279  014B  1703               	bsf	3,6	;RP1=1, select bank3
  2280  014C  00A7               	movwf	sprintf@c^(0+384)
  2281                           
  2282                           ; Switch size 1, requested type "space"
  2283                           ; Number of cases is 5, Range of values is 0 to 117
  2284                           ; switch strategies available:
  2285                           ; Name         Instructions Cycles
  2286                           ; simple_byte           16     9 (average)
  2287                           ; jumptable            260     6 (fixed)
  2288                           ;	Chosen strategy is simple_byte
  2289  014D  3A00               	xorlw	0	; case 0
  2290  014E  1903               	skipnz
  2291  014F  2FF0               	goto	L9
  2292  0150  3A64               	xorlw	100	; case 100
  2293  0151  1903               	skipnz
  2294  0152  295D               	goto	l4009
  2295  0153  3A02               	xorlw	2	; case 102
  2296  0154  1903               	skipnz
  2297  0155  293A               	goto	l185
  2298  0156  3A0F               	xorlw	15	; case 105
  2299  0157  1903               	skipnz
  2300  0158  295D               	goto	l4009
  2301  0159  3A1C               	xorlw	28	; case 117
  2302  015A  1903               	skipnz
  2303  015B  293C               	goto	l190
  2304  015C  2837               	goto	l4249
  2305  015D                     l4009:	
  2306                           
  2307                           ;doprnt.c: 825: if(flag & (0x700)) {
  2308  015D  3000               	movlw	0
  2309  015E  0514               	andwf	sprintf@flag^(0+384),w
  2310  015F  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0160  1303               	bcf	3,6	;RP1=0, select bank1
  2312  0161  00E1               	movwf	??_sprintf^(0+128)
  2313  0162  3007               	movlw	7
  2314  0163  1683               	bsf	3,5	;RP0=1, select bank3
  2315  0164  1703               	bsf	3,6	;RP1=1, select bank3
  2316  0165  0515               	andwf	(sprintf@flag+1)^(0+384),w
  2317  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2318  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2319  0168  00E2               	movwf	(??_sprintf+1)^(0+128)
  2320  0169  0861               	movf	??_sprintf^(0+128),w
  2321  016A  0462               	iorwf	(??_sprintf^(0+128)+1),w
  2322  016B  1903               	btfsc	3,2
  2323  016C  2FF3               	goto	L11
  2324                           
  2325                           ;doprnt.c: 827: if(flag & 0x1000)
  2326  016D  1683               	bsf	3,5	;RP0=1, select bank3
  2327  016E  1703               	bsf	3,6	;RP1=1, select bank3
  2328  016F  1E15               	btfss	(sprintf@flag+1)^(0+384),4
  2329  0170  2975               	goto	l4015
  2330                           
  2331                           ;doprnt.c: 829: prec = 6;
  2332  0171  3006               	movlw	6
  2333  0172  00A5               	movwf	sprintf@prec^(0+384)
  2334  0173  3000               	movlw	0
  2335  0174  00A6               	movwf	(sprintf@prec^(0+384)+1)
  2336  0175                     l4015:	
  2337                           
  2338                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2339  0175  0813               	movf	sprintf@ap^(0+384),w
  2340  0176  0084               	movwf	4
  2341  0177  1383               	bcf	3,7	;select IRP bank0
  2342  0178  0800               	movf	0,w
  2343  0179  00A2               	movwf	sprintf@fval^(0+384)
  2344  017A  0A84               	incf	4,f
  2345  017B  0800               	movf	0,w
  2346  017C  00A3               	movwf	(sprintf@fval+1)^(0+384)
  2347  017D  0A84               	incf	4,f
  2348  017E  0800               	movf	0,w
  2349  017F  00A4               	movwf	(sprintf@fval+2)^(0+384)
  2350  0180  3003               	movlw	3
  2351  0181  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0182  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0183  00E1               	movwf	??_sprintf^(0+128)
  2354  0184  0861               	movf	??_sprintf^(0+128),w
  2355  0185  1683               	bsf	3,5	;RP0=1, select bank3
  2356  0186  1703               	bsf	3,6	;RP1=1, select bank3
  2357  0187  0793               	addwf	sprintf@ap^(0+384),f
  2358                           
  2359                           ;doprnt.c: 831: if(fval < 0.0) {
  2360  0188  0822               	movf	sprintf@fval^(0+384),w
  2361  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2362  018A  1303               	bcf	3,6	;RP1=0, select bank0
  2363  018B  00B6               	movwf	___ftge@ff1
  2364  018C  1683               	bsf	3,5	;RP0=1, select bank3
  2365  018D  1703               	bsf	3,6	;RP1=1, select bank3
  2366  018E  0823               	movf	(sprintf@fval+1)^(0+384),w
  2367  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0191  00B7               	movwf	___ftge@ff1+1
  2370  0192  1683               	bsf	3,5	;RP0=1, select bank3
  2371  0193  1703               	bsf	3,6	;RP1=1, select bank3
  2372  0194  0824               	movf	(sprintf@fval+2)^(0+384),w
  2373  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0197  00B8               	movwf	___ftge@ff1+2
  2376  0198  3000               	movlw	0
  2377  0199  00B9               	movwf	___ftge@ff2
  2378  019A  3000               	movlw	0
  2379  019B  00BA               	movwf	___ftge@ff2+1
  2380  019C  3000               	movlw	0
  2381  019D  00BB               	movwf	___ftge@ff2+2
  2382  019E  160A  158A  2589  120A  118A  	fcall	___ftge
  2383  01A3  1803               	btfsc	3,0
  2384  01A4  29D2               	goto	l4025
  2385                           
  2386                           ;doprnt.c: 832: fval = -fval;
  2387  01A5  1683               	bsf	3,5	;RP0=1, select bank3
  2388  01A6  1703               	bsf	3,6	;RP1=1, select bank3
  2389  01A7  0822               	movf	sprintf@fval^(0+384),w
  2390  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2391  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2392  01AA  00B6               	movwf	___ftneg@f1
  2393  01AB  1683               	bsf	3,5	;RP0=1, select bank3
  2394  01AC  1703               	bsf	3,6	;RP1=1, select bank3
  2395  01AD  0823               	movf	(sprintf@fval+1)^(0+384),w
  2396  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2397  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2398  01B0  00B7               	movwf	___ftneg@f1+1
  2399  01B1  1683               	bsf	3,5	;RP0=1, select bank3
  2400  01B2  1703               	bsf	3,6	;RP1=1, select bank3
  2401  01B3  0824               	movf	(sprintf@fval+2)^(0+384),w
  2402  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  2403  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  2404  01B6  00B8               	movwf	___ftneg@f1+2
  2405  01B7  160A  118A  209C  120A  118A  	fcall	___ftneg
  2406  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2407  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2408  01BE  0836               	movf	?___ftneg,w
  2409  01BF  1683               	bsf	3,5	;RP0=1, select bank3
  2410  01C0  1703               	bsf	3,6	;RP1=1, select bank3
  2411  01C1  00A2               	movwf	sprintf@fval^(0+384)
  2412  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2413  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2414  01C4  0837               	movf	?___ftneg+1,w
  2415  01C5  1683               	bsf	3,5	;RP0=1, select bank3
  2416  01C6  1703               	bsf	3,6	;RP1=1, select bank3
  2417  01C7  00A3               	movwf	(sprintf@fval+1)^(0+384)
  2418  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2419  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2420  01CA  0838               	movf	?___ftneg+2,w
  2421  01CB  1683               	bsf	3,5	;RP0=1, select bank3
  2422  01CC  1703               	bsf	3,6	;RP1=1, select bank3
  2423  01CD  00A4               	movwf	(sprintf@fval+2)^(0+384)
  2424                           
  2425                           ;doprnt.c: 833: flag |= 0x03;
  2426  01CE  3003               	movlw	3
  2427  01CF  0494               	iorwf	sprintf@flag^(0+384),f
  2428  01D0  3000               	movlw	0
  2429  01D1  0495               	iorwf	(sprintf@flag+1)^(0+384),f
  2430  01D2                     l4025:	
  2431                           
  2432                           ;doprnt.c: 834: }
  2433                           ;doprnt.c: 835: exp = 0;
  2434  01D2  1683               	bsf	3,5	;RP0=1, select bank3
  2435  01D3  1703               	bsf	3,6	;RP1=1, select bank3
  2436  01D4  01A0               	clrf	sprintf@exp^(0+384)
  2437  01D5  01A1               	clrf	(sprintf@exp+1)^(0+384)
  2438                           
  2439                           ;doprnt.c: 836: if( fval!=0) {
  2440  01D6  0824               	movf	(sprintf@fval+2)^(0+384),w
  2441  01D7  0423               	iorwf	(sprintf@fval+1)^(0+384),w
  2442  01D8  0422               	iorwf	sprintf@fval^(0+384),w
  2443  01D9  1903               	skipnz
  2444  01DA  2AFA               	goto	l4053
  2445                           
  2446                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2447  01DB  30A2               	movlw	low (sprintf@fval| (0+256))
  2448  01DC  0084               	movwf	4
  2449  01DD  1783               	bsf	3,7	;select IRP bank3
  2450  01DE  0800               	movf	0,w
  2451  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2452  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2453  01E1  00E1               	movwf	??_sprintf^(0+128)
  2454  01E2  0A84               	incf	4,f
  2455  01E3  0800               	movf	0,w
  2456  01E4  00E2               	movwf	(??_sprintf^(0+128)+1)
  2457  01E5  0A84               	incf	4,f
  2458  01E6  0800               	movf	0,w
  2459  01E7  00E3               	movwf	(??_sprintf^(0+128)+2)
  2460  01E8  0A84               	incf	4,f
  2461  01E9  0800               	movf	0,w
  2462  01EA  00E4               	movwf	(??_sprintf^(0+128)+3)
  2463  01EB  300F               	movlw	15
  2464  01EC                     u6195:	
  2465  01EC  1003               	clrc
  2466  01ED  0CE4               	rrf	(??_sprintf^(0+128)+3),f
  2467  01EE  0CE3               	rrf	(??_sprintf^(0+128)+2),f
  2468  01EF  0CE2               	rrf	(??_sprintf^(0+128)+1),f
  2469  01F0  0CE1               	rrf	??_sprintf^(0+128),f
  2470  01F1  3EFF               	addlw	-1
  2471  01F2  1D03               	skipz
  2472  01F3  29EC               	goto	u6195
  2473  01F4  30FF               	movlw	255
  2474  01F5  0561               	andwf	??_sprintf^(0+128),w
  2475  01F6  00E5               	movwf	(??_sprintf+4)^(0+128)
  2476  01F7  3000               	movlw	0
  2477  01F8  0562               	andwf	(??_sprintf+1)^(0+128),w
  2478  01F9  00E6               	movwf	(??_sprintf+5)^(0+128)
  2479  01FA  0865               	movf	(??_sprintf+4)^(0+128),w
  2480  01FB  3E82               	addlw	130
  2481  01FC  1683               	bsf	3,5	;RP0=1, select bank3
  2482  01FD  1703               	bsf	3,6	;RP1=1, select bank3
  2483  01FE  00A0               	movwf	sprintf@exp^(0+384)
  2484  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0201  0866               	movf	(??_sprintf+5)^(0+128),w
  2487  0202  1803               	skipnc
  2488  0203  3E01               	addlw	1
  2489  0204  3EFF               	addlw	255
  2490  0205  1683               	bsf	3,5	;RP0=1, select bank3
  2491  0206  1703               	bsf	3,6	;RP1=1, select bank3
  2492  0207  00A1               	movwf	(sprintf@exp+1)^(0+384)
  2493                           
  2494                           ;doprnt.c: 838: exp--;
  2495  0208  30FF               	movlw	255
  2496  0209  07A0               	addwf	sprintf@exp^(0+384),f
  2497  020A  1803               	skipnc
  2498  020B  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  2499  020C  30FF               	movlw	255
  2500  020D  07A1               	addwf	(sprintf@exp+1)^(0+384),f
  2501                           
  2502                           ;doprnt.c: 839: exp *= 3;
  2503  020E  3003               	movlw	3
  2504  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0211  00B6               	movwf	___wmul@multiplier
  2507  0212  3000               	movlw	0
  2508  0213  00B7               	movwf	___wmul@multiplier+1
  2509  0214  1683               	bsf	3,5	;RP0=1, select bank3
  2510  0215  1703               	bsf	3,6	;RP1=1, select bank3
  2511  0216  0821               	movf	(sprintf@exp+1)^(0+384),w
  2512  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0219  00B9               	movwf	___wmul@multiplicand+1
  2515  021A  1683               	bsf	3,5	;RP0=1, select bank3
  2516  021B  1703               	bsf	3,6	;RP1=1, select bank3
  2517  021C  0820               	movf	sprintf@exp^(0+384),w
  2518  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2519  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2520  021F  00B8               	movwf	___wmul@multiplicand
  2521  0220  120A  158A  2000  120A  118A  	fcall	___wmul
  2522  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2523  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2524  0227  0837               	movf	?___wmul+1,w
  2525  0228  1683               	bsf	3,5	;RP0=1, select bank3
  2526  0229  1703               	bsf	3,6	;RP1=1, select bank3
  2527  022A  00A1               	movwf	(sprintf@exp+1)^(0+384)
  2528  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2529  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2530  022D  0836               	movf	?___wmul,w
  2531  022E  1683               	bsf	3,5	;RP0=1, select bank3
  2532  022F  1703               	bsf	3,6	;RP1=1, select bank3
  2533  0230  00A0               	movwf	sprintf@exp^(0+384)
  2534                           
  2535                           ;doprnt.c: 840: exp /= 10;
  2536  0231  300A               	movlw	10
  2537  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0234  00BD               	movwf	___awdiv@divisor
  2540  0235  3000               	movlw	0
  2541  0236  00BE               	movwf	___awdiv@divisor+1
  2542  0237  1683               	bsf	3,5	;RP0=1, select bank3
  2543  0238  1703               	bsf	3,6	;RP1=1, select bank3
  2544  0239  0821               	movf	(sprintf@exp+1)^(0+384),w
  2545  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2546  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2547  023C  00C0               	movwf	___awdiv@dividend+1
  2548  023D  1683               	bsf	3,5	;RP0=1, select bank3
  2549  023E  1703               	bsf	3,6	;RP1=1, select bank3
  2550  023F  0820               	movf	sprintf@exp^(0+384),w
  2551  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2552  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0242  00BF               	movwf	___awdiv@dividend
  2554  0243  160A  158A  2782  120A  118A  	fcall	___awdiv
  2555  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2557  024A  083E               	movf	?___awdiv+1,w
  2558  024B  1683               	bsf	3,5	;RP0=1, select bank3
  2559  024C  1703               	bsf	3,6	;RP1=1, select bank3
  2560  024D  00A1               	movwf	(sprintf@exp+1)^(0+384)
  2561  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2562  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0250  083D               	movf	?___awdiv,w
  2564  0251  1683               	bsf	3,5	;RP0=1, select bank3
  2565  0252  1703               	bsf	3,6	;RP1=1, select bank3
  2566  0253  00A0               	movwf	sprintf@exp^(0+384)
  2567                           
  2568                           ;doprnt.c: 841: if(exp < 0)
  2569  0254  1FA1               	btfss	(sprintf@exp+1)^(0+384),7
  2570  0255  2A5C               	goto	l4041
  2571                           
  2572                           ;doprnt.c: 842: exp--;
  2573  0256  30FF               	movlw	255
  2574  0257  07A0               	addwf	sprintf@exp^(0+384),f
  2575  0258  1803               	skipnc
  2576  0259  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  2577  025A  30FF               	movlw	255
  2578  025B  07A1               	addwf	(sprintf@exp+1)^(0+384),f
  2579  025C                     l4041:	
  2580                           
  2581                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2582  025C  0320               	decf	sprintf@exp^(0+384),w
  2583  025D  3AFF               	xorlw	255
  2584  025E  120A  158A  2509  120A  118A  	fcall	_scale
  2585  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2586  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2587  0265  0836               	movf	?_scale^(0+128),w
  2588  0266  1683               	bsf	3,5	;RP0=1, select bank3
  2589  0267  1703               	bsf	3,6	;RP1=1, select bank3
  2590  0268  0098               	movwf	sprintf@tmpval^(0+384)
  2591  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2592  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2593  026B  0837               	movf	(?_scale+1)^(0+128),w
  2594  026C  1683               	bsf	3,5	;RP0=1, select bank3
  2595  026D  1703               	bsf	3,6	;RP1=1, select bank3
  2596  026E  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  2597  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2599  0271  0838               	movf	(?_scale+2)^(0+128),w
  2600  0272  1683               	bsf	3,5	;RP0=1, select bank3
  2601  0273  1703               	bsf	3,6	;RP1=1, select bank3
  2602  0274  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  2603                           
  2604                           ;doprnt.c: 847: tmpval.integ *= fval;
  2605  0275  0822               	movf	sprintf@fval^(0+384),w
  2606  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2608  0278  00A6               	movwf	___ftmul@f1^(0+128)
  2609  0279  1683               	bsf	3,5	;RP0=1, select bank3
  2610  027A  1703               	bsf	3,6	;RP1=1, select bank3
  2611  027B  0823               	movf	(sprintf@fval+1)^(0+384),w
  2612  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2613  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2614  027E  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  2615  027F  1683               	bsf	3,5	;RP0=1, select bank3
  2616  0280  1703               	bsf	3,6	;RP1=1, select bank3
  2617  0281  0824               	movf	(sprintf@fval+2)^(0+384),w
  2618  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0284  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  2621  0285  1683               	bsf	3,5	;RP0=1, select bank3
  2622  0286  1703               	bsf	3,6	;RP1=1, select bank3
  2623  0287  0818               	movf	sprintf@tmpval^(0+384),w
  2624  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2625  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2626  028A  00A9               	movwf	___ftmul@f2^(0+128)
  2627  028B  1683               	bsf	3,5	;RP0=1, select bank3
  2628  028C  1703               	bsf	3,6	;RP1=1, select bank3
  2629  028D  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  2630  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2631  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0290  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  2633  0291  1683               	bsf	3,5	;RP0=1, select bank3
  2634  0292  1703               	bsf	3,6	;RP1=1, select bank3
  2635  0293  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  2636  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2638  0296  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  2639  0297  160A  118A  2236  120A  118A  	fcall	___ftmul
  2640  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2641  029D  1303               	bcf	3,6	;RP1=0, select bank1
  2642  029E  0826               	movf	?___ftmul^(0+128),w
  2643  029F  1683               	bsf	3,5	;RP0=1, select bank3
  2644  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  2645  02A1  0098               	movwf	sprintf@tmpval^(0+384)
  2646  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2647  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  2648  02A4  0827               	movf	(?___ftmul+1)^(0+128),w
  2649  02A5  1683               	bsf	3,5	;RP0=1, select bank3
  2650  02A6  1703               	bsf	3,6	;RP1=1, select bank3
  2651  02A7  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  2652  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2653  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  2654  02AA  0828               	movf	(?___ftmul+2)^(0+128),w
  2655  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  2656  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  2657  02AD  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  2658                           
  2659                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2660  02AE  0818               	movf	sprintf@tmpval^(0+384),w
  2661  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2662  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  2663  02B1  00B6               	movwf	___ftge@ff1
  2664  02B2  1683               	bsf	3,5	;RP0=1, select bank3
  2665  02B3  1703               	bsf	3,6	;RP1=1, select bank3
  2666  02B4  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  2667  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  2668  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  2669  02B7  00B7               	movwf	___ftge@ff1+1
  2670  02B8  1683               	bsf	3,5	;RP0=1, select bank3
  2671  02B9  1703               	bsf	3,6	;RP1=1, select bank3
  2672  02BA  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  2673  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  2674  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  2675  02BD  00B8               	movwf	___ftge@ff1+2
  2676  02BE  3000               	movlw	0
  2677  02BF  00B9               	movwf	___ftge@ff2
  2678  02C0  3080               	movlw	128
  2679  02C1  00BA               	movwf	___ftge@ff2+1
  2680  02C2  303F               	movlw	63
  2681  02C3  00BB               	movwf	___ftge@ff2+2
  2682  02C4  160A  158A  2589  120A  118A  	fcall	___ftge
  2683  02C9  1803               	btfsc	3,0
  2684  02CA  2AD3               	goto	l4049
  2685                           
  2686                           ;doprnt.c: 849: exp--;
  2687  02CB  30FF               	movlw	255
  2688  02CC  1683               	bsf	3,5	;RP0=1, select bank3
  2689  02CD  1703               	bsf	3,6	;RP1=1, select bank3
  2690  02CE  07A0               	addwf	sprintf@exp^(0+384),f
  2691  02CF  1803               	skipnc
  2692  02D0  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  2693  02D1  30FF               	movlw	255
  2694  02D2  2AF9               	goto	L1
  2695  02D3                     l4049:	
  2696                           
  2697                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  2698  02D3  1683               	bsf	3,5	;RP0=1, select bank3
  2699  02D4  1703               	bsf	3,6	;RP1=1, select bank3
  2700  02D5  0818               	movf	sprintf@tmpval^(0+384),w
  2701  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2702  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2703  02D8  00B6               	movwf	___ftge@ff1
  2704  02D9  1683               	bsf	3,5	;RP0=1, select bank3
  2705  02DA  1703               	bsf	3,6	;RP1=1, select bank3
  2706  02DB  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  2707  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2708  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2709  02DE  00B7               	movwf	___ftge@ff1+1
  2710  02DF  1683               	bsf	3,5	;RP0=1, select bank3
  2711  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  2712  02E1  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  2713  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2714  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2715  02E4  00B8               	movwf	___ftge@ff1+2
  2716  02E5  3000               	movlw	0
  2717  02E6  00B9               	movwf	___ftge@ff2
  2718  02E7  3020               	movlw	32
  2719  02E8  00BA               	movwf	___ftge@ff2+1
  2720  02E9  3041               	movlw	65
  2721  02EA  00BB               	movwf	___ftge@ff2+2
  2722  02EB  160A  158A  2589  120A  118A  	fcall	___ftge
  2723  02F0  1C03               	btfss	3,0
  2724  02F1  2AFA               	goto	l4053
  2725                           
  2726                           ;doprnt.c: 851: exp++;
  2727  02F2  3001               	movlw	1
  2728  02F3  1683               	bsf	3,5	;RP0=1, select bank3
  2729  02F4  1703               	bsf	3,6	;RP1=1, select bank3
  2730  02F5  07A0               	addwf	sprintf@exp^(0+384),f
  2731  02F6  1803               	skipnc
  2732  02F7  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  2733  02F8  3000               	movlw	0
  2734  02F9                     L1:	
  2735  02F9  07A1               	addwf	(sprintf@exp+1)^(0+384),f
  2736  02FA                     l4053:	
  2737                           
  2738                           ;doprnt.c: 852: }
  2739                           ;doprnt.c: 1112: if(prec <= 12)
  2740  02FA  1683               	bsf	3,5	;RP0=1, select bank3
  2741  02FB  1703               	bsf	3,6	;RP1=1, select bank3
  2742  02FC  0826               	movf	(sprintf@prec+1)^(0+384),w
  2743  02FD  3A80               	xorlw	128
  2744  02FE  00FF               	movwf	127
  2745  02FF  3080               	movlw	128
  2746  0300  027F               	subwf	127,w
  2747  0301  1D03               	skipz
  2748  0302  2B05               	goto	u6235
  2749  0303  300D               	movlw	13
  2750  0304  0225               	subwf	sprintf@prec^(0+384),w
  2751  0305                     u6235:	
  2752  0305  1803               	skipnc
  2753  0306  2B40               	goto	l4057
  2754                           
  2755                           ;doprnt.c: 1113: fval += fround(prec);
  2756  0307  1683               	bsf	3,5	;RP0=1, select bank3
  2757  0308  1703               	bsf	3,6	;RP1=1, select bank3
  2758  0309  0825               	movf	sprintf@prec^(0+384),w
  2759  030A  120A  158A  20C7  120A  118A  	fcall	_fround
  2760  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2761  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2762  0311  0836               	movf	?_fround^(0+128),w
  2763  0312  00C6               	movwf	___ftadd@f1^(0+128)
  2764  0313  0837               	movf	(?_fround+1)^(0+128),w
  2765  0314  00C7               	movwf	(___ftadd@f1+1)^(0+128)
  2766  0315  0838               	movf	(?_fround+2)^(0+128),w
  2767  0316  00C8               	movwf	(___ftadd@f1+2)^(0+128)
  2768  0317  1683               	bsf	3,5	;RP0=1, select bank3
  2769  0318  1703               	bsf	3,6	;RP1=1, select bank3
  2770  0319  0822               	movf	sprintf@fval^(0+384),w
  2771  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2772  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2773  031C  00C9               	movwf	___ftadd@f2^(0+128)
  2774  031D  1683               	bsf	3,5	;RP0=1, select bank3
  2775  031E  1703               	bsf	3,6	;RP1=1, select bank3
  2776  031F  0823               	movf	(sprintf@fval+1)^(0+384),w
  2777  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0322  00CA               	movwf	(___ftadd@f2+1)^(0+128)
  2780  0323  1683               	bsf	3,5	;RP0=1, select bank3
  2781  0324  1703               	bsf	3,6	;RP1=1, select bank3
  2782  0325  0824               	movf	(sprintf@fval+2)^(0+384),w
  2783  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0328  00CB               	movwf	(___ftadd@f2+2)^(0+128)
  2786  0329  160A  118A  2429  120A  118A  	fcall	___ftadd
  2787  032E  1683               	bsf	3,5	;RP0=1, select bank1
  2788  032F  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0330  0846               	movf	?___ftadd^(0+128),w
  2790  0331  1683               	bsf	3,5	;RP0=1, select bank3
  2791  0332  1703               	bsf	3,6	;RP1=1, select bank3
  2792  0333  00A2               	movwf	sprintf@fval^(0+384)
  2793  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0336  0847               	movf	(?___ftadd+1)^(0+128),w
  2796  0337  1683               	bsf	3,5	;RP0=1, select bank3
  2797  0338  1703               	bsf	3,6	;RP1=1, select bank3
  2798  0339  00A3               	movwf	(sprintf@fval+1)^(0+384)
  2799  033A  1683               	bsf	3,5	;RP0=1, select bank1
  2800  033B  1303               	bcf	3,6	;RP1=0, select bank1
  2801  033C  0848               	movf	(?___ftadd+2)^(0+128),w
  2802  033D  1683               	bsf	3,5	;RP0=1, select bank3
  2803  033E  1703               	bsf	3,6	;RP1=1, select bank3
  2804  033F  00A4               	movwf	(sprintf@fval+2)^(0+384)
  2805  0340                     l4057:	
  2806                           
  2807                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2808  0340  1683               	bsf	3,5	;RP0=1, select bank3
  2809  0341  1703               	bsf	3,6	;RP1=1, select bank3
  2810  0342  0821               	movf	(sprintf@exp+1)^(0+384),w
  2811  0343  3A80               	xorlw	128
  2812  0344  00FF               	movwf	127
  2813  0345  3080               	movlw	128
  2814  0346  027F               	subwf	127,w
  2815  0347  1D03               	skipz
  2816  0348  2B4B               	goto	u6245
  2817  0349  300A               	movlw	10
  2818  034A  0220               	subwf	sprintf@exp^(0+384),w
  2819  034B                     u6245:	
  2820  034B  1803               	skipnc
  2821  034C  2B7E               	goto	l4065
  2822  034D  1683               	bsf	3,5	;RP0=1, select bank3
  2823  034E  1703               	bsf	3,6	;RP1=1, select bank3
  2824  034F  0824               	movf	(sprintf@fval+2)^(0+384),w
  2825  0350  0423               	iorwf	(sprintf@fval+1)^(0+384),w
  2826  0351  0422               	iorwf	sprintf@fval^(0+384),w
  2827  0352  1903               	skipnz
  2828  0353  2C05               	goto	l4079
  2829  0354  0822               	movf	sprintf@fval^(0+384),w
  2830  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0356  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0357  00BF               	movwf	___fttol@f1^(0+128)
  2833  0358  1683               	bsf	3,5	;RP0=1, select bank3
  2834  0359  1703               	bsf	3,6	;RP1=1, select bank3
  2835  035A  0823               	movf	(sprintf@fval+1)^(0+384),w
  2836  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2837  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2838  035D  00C0               	movwf	(___fttol@f1+1)^(0+128)
  2839  035E  1683               	bsf	3,5	;RP0=1, select bank3
  2840  035F  1703               	bsf	3,6	;RP1=1, select bank3
  2841  0360  0824               	movf	(sprintf@fval+2)^(0+384),w
  2842  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0363  00C1               	movwf	(___fttol@f1+2)^(0+128)
  2845  0364  160A  118A  20D5  120A  118A  	fcall	___fttol
  2846  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2847  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2848  036B  0842               	movf	(?___fttol+3)^(0+128),w
  2849  036C  0441               	iorwf	(?___fttol+2)^(0+128),w
  2850  036D  0440               	iorwf	(?___fttol+1)^(0+128),w
  2851  036E  043F               	iorwf	?___fttol^(0+128),w
  2852  036F  1D03               	skipz
  2853  0370  2C05               	goto	l4079
  2854  0371  1683               	bsf	3,5	;RP0=1, select bank3
  2855  0372  1703               	bsf	3,6	;RP1=1, select bank3
  2856  0373  0821               	movf	(sprintf@exp+1)^(0+384),w
  2857  0374  3A80               	xorlw	128
  2858  0375  00FF               	movwf	127
  2859  0376  3080               	movlw	128
  2860  0377  027F               	subwf	127,w
  2861  0378  1D03               	skipz
  2862  0379  2B7C               	goto	u6275
  2863  037A  3002               	movlw	2
  2864  037B  0220               	subwf	sprintf@exp^(0+384),w
  2865  037C                     u6275:	
  2866  037C  1C03               	skipc
  2867  037D  2C05               	goto	l4079
  2868  037E                     l4065:	
  2869                           
  2870                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  2871  037E  1683               	bsf	3,5	;RP0=1, select bank3
  2872  037F  1703               	bsf	3,6	;RP1=1, select bank3
  2873  0380  0818               	movf	sprintf@tmpval^(0+384),w
  2874  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0383  00B6               	movwf	___ftge@ff1
  2877  0384  1683               	bsf	3,5	;RP0=1, select bank3
  2878  0385  1703               	bsf	3,6	;RP1=1, select bank3
  2879  0386  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  2880  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0389  00B7               	movwf	___ftge@ff1+1
  2883  038A  1683               	bsf	3,5	;RP0=1, select bank3
  2884  038B  1703               	bsf	3,6	;RP1=1, select bank3
  2885  038C  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  2886  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2887  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2888  038F  00B8               	movwf	___ftge@ff1+2
  2889  0390  3070               	movlw	112
  2890  0391  00B9               	movwf	___ftge@ff2
  2891  0392  3089               	movlw	137
  2892  0393  00BA               	movwf	___ftge@ff2+1
  2893  0394  3040               	movlw	64
  2894  0395  00BB               	movwf	___ftge@ff2+2
  2895  0396  160A  158A  2589  120A  118A  	fcall	___ftge
  2896  039B  1803               	btfsc	3,0
  2897  039C  2B9F               	goto	l4069
  2898                           
  2899                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2900  039D  30F7               	movlw	247
  2901  039E  2BA0               	goto	L2
  2902  039F                     l4069:	
  2903                           ;doprnt.c: 1122: }else{
  2904                           
  2905                           
  2906                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2907  039F  30F8               	movlw	248
  2908  03A0                     L2:	
  2909  03A0  1683               	bsf	3,5	;RP0=1, select bank3
  2910  03A1  1703               	bsf	3,6	;RP1=1, select bank3
  2911  03A2  07A0               	addwf	sprintf@exp^(0+384),f
  2912  03A3  1803               	skipnc
  2913  03A4  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  2914  03A5  30FF               	movlw	255
  2915  03A6  07A1               	addwf	(sprintf@exp+1)^(0+384),f
  2916                           
  2917                           ;doprnt.c: 1124: }
  2918                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  2919  03A7  0820               	movf	sprintf@exp^(0+384),w
  2920  03A8  120A  158A  2509  120A  118A  	fcall	_scale
  2921  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2922  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2923  03AF  0836               	movf	?_scale^(0+128),w
  2924  03B0  1683               	bsf	3,5	;RP0=1, select bank3
  2925  03B1  1703               	bsf	3,6	;RP1=1, select bank3
  2926  03B2  0098               	movwf	sprintf@tmpval^(0+384)
  2927  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2928  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2929  03B5  0837               	movf	(?_scale+1)^(0+128),w
  2930  03B6  1683               	bsf	3,5	;RP0=1, select bank3
  2931  03B7  1703               	bsf	3,6	;RP1=1, select bank3
  2932  03B8  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  2933  03B9  1683               	bsf	3,5	;RP0=1, select bank1
  2934  03BA  1303               	bcf	3,6	;RP1=0, select bank1
  2935  03BB  0838               	movf	(?_scale+2)^(0+128),w
  2936  03BC  1683               	bsf	3,5	;RP0=1, select bank3
  2937  03BD  1703               	bsf	3,6	;RP1=1, select bank3
  2938  03BE  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  2939                           
  2940                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  2941  03BF  0822               	movf	sprintf@fval^(0+384),w
  2942  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2943  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2944  03C2  00B6               	movwf	__tdiv_to_l_@f1
  2945  03C3  1683               	bsf	3,5	;RP0=1, select bank3
  2946  03C4  1703               	bsf	3,6	;RP1=1, select bank3
  2947  03C5  0823               	movf	(sprintf@fval+1)^(0+384),w
  2948  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2949  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2950  03C8  00B7               	movwf	__tdiv_to_l_@f1+1
  2951  03C9  1683               	bsf	3,5	;RP0=1, select bank3
  2952  03CA  1703               	bsf	3,6	;RP1=1, select bank3
  2953  03CB  0824               	movf	(sprintf@fval+2)^(0+384),w
  2954  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2955  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2956  03CE  00B8               	movwf	__tdiv_to_l_@f1+2
  2957  03CF  1683               	bsf	3,5	;RP0=1, select bank3
  2958  03D0  1703               	bsf	3,6	;RP1=1, select bank3
  2959  03D1  0818               	movf	sprintf@tmpval^(0+384),w
  2960  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2961  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2962  03D4  00B9               	movwf	__tdiv_to_l_@f2
  2963  03D5  1683               	bsf	3,5	;RP0=1, select bank3
  2964  03D6  1703               	bsf	3,6	;RP1=1, select bank3
  2965  03D7  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  2966  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2967  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2968  03DA  00BA               	movwf	__tdiv_to_l_@f2+1
  2969  03DB  1683               	bsf	3,5	;RP0=1, select bank3
  2970  03DC  1703               	bsf	3,6	;RP1=1, select bank3
  2971  03DD  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  2972  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2973  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2974  03E0  00BB               	movwf	__tdiv_to_l_@f2+2
  2975  03E1  160A  118A  2325  120A  118A  	fcall	__tdiv_to_l_
  2976  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2977  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2978  03E8  0839               	movf	?__tdiv_to_l_+3,w
  2979  03E9  1683               	bsf	3,5	;RP0=1, select bank3
  2980  03EA  1703               	bsf	3,6	;RP1=1, select bank3
  2981  03EB  009F               	movwf	(sprintf@val+3)^(0+384)
  2982  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2983  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2984  03EE  0838               	movf	?__tdiv_to_l_+2,w
  2985  03EF  1683               	bsf	3,5	;RP0=1, select bank3
  2986  03F0  1703               	bsf	3,6	;RP1=1, select bank3
  2987  03F1  009E               	movwf	(sprintf@val+2)^(0+384)
  2988  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2989  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2990  03F4  0837               	movf	?__tdiv_to_l_+1,w
  2991  03F5  1683               	bsf	3,5	;RP0=1, select bank3
  2992  03F6  1703               	bsf	3,6	;RP1=1, select bank3
  2993  03F7  009D               	movwf	(sprintf@val+1)^(0+384)
  2994  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  2995  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  2996  03FA  0836               	movf	?__tdiv_to_l_,w
  2997  03FB  1683               	bsf	3,5	;RP0=1, select bank3
  2998  03FC  1703               	bsf	3,6	;RP1=1, select bank3
  2999  03FD  009C               	movwf	sprintf@val^(0+384)
  3000                           
  3001                           ;doprnt.c: 1129: fval = 0.0;
  3002  03FE  3000               	movlw	0
  3003  03FF  00A2               	movwf	sprintf@fval^(0+384)
  3004  0400  3000               	movlw	0
  3005  0401  00A3               	movwf	(sprintf@fval+1)^(0+384)
  3006  0402  3000               	movlw	0
  3007  0403  00A4               	movwf	(sprintf@fval+2)^(0+384)
  3008                           
  3009                           ;doprnt.c: 1130: } else {
  3010  0404  2C8C               	goto	l4083
  3011  0405                     l4079:	
  3012                           
  3013                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3014  0405  1683               	bsf	3,5	;RP0=1, select bank3
  3015  0406  1703               	bsf	3,6	;RP1=1, select bank3
  3016  0407  0822               	movf	sprintf@fval^(0+384),w
  3017  0408  1683               	bsf	3,5	;RP0=1, select bank1
  3018  0409  1303               	bcf	3,6	;RP1=0, select bank1
  3019  040A  00BF               	movwf	___fttol@f1^(0+128)
  3020  040B  1683               	bsf	3,5	;RP0=1, select bank3
  3021  040C  1703               	bsf	3,6	;RP1=1, select bank3
  3022  040D  0823               	movf	(sprintf@fval+1)^(0+384),w
  3023  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3024  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0410  00C0               	movwf	(___fttol@f1+1)^(0+128)
  3026  0411  1683               	bsf	3,5	;RP0=1, select bank3
  3027  0412  1703               	bsf	3,6	;RP1=1, select bank3
  3028  0413  0824               	movf	(sprintf@fval+2)^(0+384),w
  3029  0414  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0415  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0416  00C1               	movwf	(___fttol@f1+2)^(0+128)
  3032  0417  160A  118A  20D5  120A  118A  	fcall	___fttol
  3033  041C  1683               	bsf	3,5	;RP0=1, select bank1
  3034  041D  1303               	bcf	3,6	;RP1=0, select bank1
  3035  041E  0842               	movf	(?___fttol+3)^(0+128),w
  3036  041F  1683               	bsf	3,5	;RP0=1, select bank3
  3037  0420  1703               	bsf	3,6	;RP1=1, select bank3
  3038  0421  009F               	movwf	(sprintf@val+3)^(0+384)
  3039  0422  1683               	bsf	3,5	;RP0=1, select bank1
  3040  0423  1303               	bcf	3,6	;RP1=0, select bank1
  3041  0424  0841               	movf	(?___fttol+2)^(0+128),w
  3042  0425  1683               	bsf	3,5	;RP0=1, select bank3
  3043  0426  1703               	bsf	3,6	;RP1=1, select bank3
  3044  0427  009E               	movwf	(sprintf@val+2)^(0+384)
  3045  0428  1683               	bsf	3,5	;RP0=1, select bank1
  3046  0429  1303               	bcf	3,6	;RP1=0, select bank1
  3047  042A  0840               	movf	(?___fttol+1)^(0+128),w
  3048  042B  1683               	bsf	3,5	;RP0=1, select bank3
  3049  042C  1703               	bsf	3,6	;RP1=1, select bank3
  3050  042D  009D               	movwf	(sprintf@val+1)^(0+384)
  3051  042E  1683               	bsf	3,5	;RP0=1, select bank1
  3052  042F  1303               	bcf	3,6	;RP1=0, select bank1
  3053  0430  083F               	movf	?___fttol^(0+128),w
  3054  0431  1683               	bsf	3,5	;RP0=1, select bank3
  3055  0432  1703               	bsf	3,6	;RP1=1, select bank3
  3056  0433  009C               	movwf	sprintf@val^(0+384)
  3057                           
  3058                           ;doprnt.c: 1132: fval -= (double)val;
  3059  0434  081F               	movf	(sprintf@val+3)^(0+384),w
  3060  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0437  00C1               	movwf	___lltoft@c+3
  3063  0438  1683               	bsf	3,5	;RP0=1, select bank3
  3064  0439  1703               	bsf	3,6	;RP1=1, select bank3
  3065  043A  081E               	movf	(sprintf@val+2)^(0+384),w
  3066  043B  1283               	bcf	3,5	;RP0=0, select bank0
  3067  043C  1303               	bcf	3,6	;RP1=0, select bank0
  3068  043D  00C0               	movwf	___lltoft@c+2
  3069  043E  1683               	bsf	3,5	;RP0=1, select bank3
  3070  043F  1703               	bsf	3,6	;RP1=1, select bank3
  3071  0440  081D               	movf	(sprintf@val+1)^(0+384),w
  3072  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0443  00BF               	movwf	___lltoft@c+1
  3075  0444  1683               	bsf	3,5	;RP0=1, select bank3
  3076  0445  1703               	bsf	3,6	;RP1=1, select bank3
  3077  0446  081C               	movf	sprintf@val^(0+384),w
  3078  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0449  00BE               	movwf	___lltoft@c
  3081  044A  160A  118A  20A6  120A  118A  	fcall	___lltoft
  3082  044F  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0450  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0451  083E               	movf	?___lltoft,w
  3085  0452  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0453  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0454  00D3               	movwf	___ftsub@f2^(0+128)
  3088  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0457  083F               	movf	?___lltoft+1,w
  3091  0458  1683               	bsf	3,5	;RP0=1, select bank1
  3092  0459  1303               	bcf	3,6	;RP1=0, select bank1
  3093  045A  00D4               	movwf	(___ftsub@f2+1)^(0+128)
  3094  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3095  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3096  045D  0840               	movf	?___lltoft+2,w
  3097  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3098  045F  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0460  00D5               	movwf	(___ftsub@f2+2)^(0+128)
  3100  0461  1683               	bsf	3,5	;RP0=1, select bank3
  3101  0462  1703               	bsf	3,6	;RP1=1, select bank3
  3102  0463  0822               	movf	sprintf@fval^(0+384),w
  3103  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3104  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3105  0466  00D6               	movwf	___ftsub@f1^(0+128)
  3106  0467  1683               	bsf	3,5	;RP0=1, select bank3
  3107  0468  1703               	bsf	3,6	;RP1=1, select bank3
  3108  0469  0823               	movf	(sprintf@fval+1)^(0+384),w
  3109  046A  1683               	bsf	3,5	;RP0=1, select bank1
  3110  046B  1303               	bcf	3,6	;RP1=0, select bank1
  3111  046C  00D7               	movwf	(___ftsub@f1+1)^(0+128)
  3112  046D  1683               	bsf	3,5	;RP0=1, select bank3
  3113  046E  1703               	bsf	3,6	;RP1=1, select bank3
  3114  046F  0824               	movf	(sprintf@fval+2)^(0+384),w
  3115  0470  1683               	bsf	3,5	;RP0=1, select bank1
  3116  0471  1303               	bcf	3,6	;RP1=0, select bank1
  3117  0472  00D8               	movwf	(___ftsub@f1+2)^(0+128)
  3118  0473  160A  158A  239E  120A  118A  	fcall	___ftsub
  3119  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3120  0479  1303               	bcf	3,6	;RP1=0, select bank1
  3121  047A  0853               	movf	?___ftsub^(0+128),w
  3122  047B  1683               	bsf	3,5	;RP0=1, select bank3
  3123  047C  1703               	bsf	3,6	;RP1=1, select bank3
  3124  047D  00A2               	movwf	sprintf@fval^(0+384)
  3125  047E  1683               	bsf	3,5	;RP0=1, select bank1
  3126  047F  1303               	bcf	3,6	;RP1=0, select bank1
  3127  0480  0854               	movf	(?___ftsub+1)^(0+128),w
  3128  0481  1683               	bsf	3,5	;RP0=1, select bank3
  3129  0482  1703               	bsf	3,6	;RP1=1, select bank3
  3130  0483  00A3               	movwf	(sprintf@fval+1)^(0+384)
  3131  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3132  0485  1303               	bcf	3,6	;RP1=0, select bank1
  3133  0486  0855               	movf	(?___ftsub+2)^(0+128),w
  3134  0487  1683               	bsf	3,5	;RP0=1, select bank3
  3135  0488  1703               	bsf	3,6	;RP1=1, select bank3
  3136  0489  00A4               	movwf	(sprintf@fval+2)^(0+384)
  3137                           
  3138                           ;doprnt.c: 1133: exp = 0;
  3139  048A  01A0               	clrf	sprintf@exp^(0+384)
  3140  048B  01A1               	clrf	(sprintf@exp+1)^(0+384)
  3141  048C                     l4083:	
  3142                           
  3143                           ;doprnt.c: 1134: }
  3144                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3145  048C  01A7               	clrf	sprintf@c^(0+384)
  3146  048D  0AA7               	incf	sprintf@c^(0+384),f
  3147  048E  300A               	movlw	10
  3148  048F  0627               	xorwf	sprintf@c^(0+384),w
  3149  0490  1903               	btfsc	3,2
  3150  0491  2CE2               	goto	l4095
  3151  0492                     l4089:	
  3152                           
  3153                           ;doprnt.c: 1137: if(val < dpowers[c])
  3154  0492  0827               	movf	sprintf@c^(0+384),w
  3155  0493  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0494  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0495  00E1               	movwf	??_sprintf^(0+128)
  3158  0496  3001               	movlw	1
  3159  0497                     u6305:	
  3160  0497  1003               	clrc
  3161  0498  0DE1               	rlf	??_sprintf^(0+128),f
  3162  0499  3EFF               	addlw	-1
  3163  049A  1D03               	skipz
  3164  049B  2C97               	goto	u6305
  3165  049C  1003               	clrc
  3166  049D  0D61               	rlf	??_sprintf^(0+128),w
  3167  049E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3168  049F  0084               	movwf	4
  3169  04A0  160A  118A  2000  120A  118A  	fcall	stringdir
  3170  04A5  00E2               	movwf	(??_sprintf+1)^(0+128)
  3171  04A6  160A  118A  2000  120A  118A  	fcall	stringdir
  3172  04AB  00E3               	movwf	((??_sprintf+1)^(0+128)+1)
  3173  04AC  160A  118A  2000  120A  118A  	fcall	stringdir
  3174  04B1  00E4               	movwf	((??_sprintf+1)^(0+128)+2)
  3175  04B2  160A  118A  2000  120A  118A  	fcall	stringdir
  3176  04B7  00E5               	movwf	((??_sprintf+1)^(0+128)+3)
  3177  04B8  0865               	movf	(??_sprintf+4)^(0+128),w
  3178  04B9  1683               	bsf	3,5	;RP0=1, select bank3
  3179  04BA  1703               	bsf	3,6	;RP1=1, select bank3
  3180  04BB  021F               	subwf	(sprintf@val+3)^(0+384),w
  3181  04BC  1D03               	skipz
  3182  04BD  2CD4               	goto	u6315
  3183  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  3184  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  3185  04C0  0864               	movf	(??_sprintf+3)^(0+128),w
  3186  04C1  1683               	bsf	3,5	;RP0=1, select bank3
  3187  04C2  1703               	bsf	3,6	;RP1=1, select bank3
  3188  04C3  021E               	subwf	(sprintf@val+2)^(0+384),w
  3189  04C4  1D03               	skipz
  3190  04C5  2CD4               	goto	u6315
  3191  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3192  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3193  04C8  0863               	movf	(??_sprintf+2)^(0+128),w
  3194  04C9  1683               	bsf	3,5	;RP0=1, select bank3
  3195  04CA  1703               	bsf	3,6	;RP1=1, select bank3
  3196  04CB  021D               	subwf	(sprintf@val+1)^(0+384),w
  3197  04CC  1D03               	skipz
  3198  04CD  2CD4               	goto	u6315
  3199  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  3200  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  3201  04D0  0862               	movf	(??_sprintf+1)^(0+128),w
  3202  04D1  1683               	bsf	3,5	;RP0=1, select bank3
  3203  04D2  1703               	bsf	3,6	;RP1=1, select bank3
  3204  04D3  021C               	subwf	sprintf@val^(0+384),w
  3205  04D4                     u6315:	
  3206  04D4  1C03               	btfss	3,0
  3207  04D5  2CE2               	goto	l4095
  3208                           
  3209                           ;doprnt.c: 1138: break;
  3210  04D6  3001               	movlw	1
  3211  04D7  1683               	bsf	3,5	;RP0=1, select bank1
  3212  04D8  1303               	bcf	3,6	;RP1=0, select bank1
  3213  04D9  00E1               	movwf	??_sprintf^(0+128)
  3214  04DA  0861               	movf	??_sprintf^(0+128),w
  3215  04DB  1683               	bsf	3,5	;RP0=1, select bank3
  3216  04DC  1703               	bsf	3,6	;RP1=1, select bank3
  3217  04DD  07A7               	addwf	sprintf@c^(0+384),f
  3218  04DE  300A               	movlw	10
  3219  04DF  0627               	xorwf	sprintf@c^(0+384),w
  3220  04E0  1D03               	btfss	3,2
  3221  04E1  2C92               	goto	l4089
  3222  04E2                     l4095:	
  3223                           
  3224                           ;doprnt.c: 1142: width -= prec + c + exp;
  3225  04E2  0825               	movf	sprintf@prec^(0+384),w
  3226  04E3  0727               	addwf	sprintf@c^(0+384),w
  3227  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  3228  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  3229  04E6  00E1               	movwf	??_sprintf^(0+128)
  3230  04E7  1683               	bsf	3,5	;RP0=1, select bank3
  3231  04E8  1703               	bsf	3,6	;RP1=1, select bank3
  3232  04E9  0826               	movf	(sprintf@prec+1)^(0+384),w
  3233  04EA  1803               	skipnc
  3234  04EB  0A26               	incf	(sprintf@prec+1)^(0+384),w
  3235  04EC  3E00               	addlw	0
  3236  04ED  1BA7               	btfsc	sprintf@c^(0+384),7
  3237  04EE  3EFF               	addlw	255
  3238  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  3239  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  3240  04F1  00E2               	movwf	(??_sprintf+1)^(0+128)
  3241  04F2  1683               	bsf	3,5	;RP0=1, select bank3
  3242  04F3  1703               	bsf	3,6	;RP1=1, select bank3
  3243  04F4  0820               	movf	sprintf@exp^(0+384),w
  3244  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  3245  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  3246  04F7  0761               	addwf	??_sprintf^(0+128),w
  3247  04F8  00E3               	movwf	(??_sprintf+2)^(0+128)
  3248  04F9  1683               	bsf	3,5	;RP0=1, select bank3
  3249  04FA  1703               	bsf	3,6	;RP1=1, select bank3
  3250  04FB  0821               	movf	(sprintf@exp+1)^(0+384),w
  3251  04FC  1803               	skipnc
  3252  04FD  0A21               	incf	(sprintf@exp+1)^(0+384),w
  3253  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  3254  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0500  0762               	addwf	(??_sprintf+1)^(0+128),w
  3256  0501  00E4               	movwf	(??_sprintf+3)^(0+128)
  3257  0502  0863               	movf	(??_sprintf+2)^(0+128),w
  3258  0503  1683               	bsf	3,5	;RP0=1, select bank3
  3259  0504  1703               	bsf	3,6	;RP1=1, select bank3
  3260  0505  0296               	subwf	sprintf@width^(0+384),f
  3261  0506  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0507  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0508  0864               	movf	(??_sprintf+3)^(0+128),w
  3264  0509  1683               	bsf	3,5	;RP0=1, select bank3
  3265  050A  1703               	bsf	3,6	;RP1=1, select bank3
  3266  050B  1C03               	skipc
  3267  050C  0397               	decf	(sprintf@width+1)^(0+384),f
  3268  050D  0297               	subwf	(sprintf@width+1)^(0+384),f
  3269                           
  3270                           ;doprnt.c: 1143: if(
  3271                           ;doprnt.c: 1147: prec)
  3272  050E  0825               	movf	sprintf@prec^(0+384),w
  3273  050F  0426               	iorwf	(sprintf@prec+1)^(0+384),w
  3274  0510  1903               	btfsc	3,2
  3275  0511  2D18               	goto	l4099
  3276                           
  3277                           ;doprnt.c: 1148: width--;
  3278  0512  30FF               	movlw	255
  3279  0513  0796               	addwf	sprintf@width^(0+384),f
  3280  0514  1803               	skipnc
  3281  0515  0A97               	incf	(sprintf@width+1)^(0+384),f
  3282  0516  30FF               	movlw	255
  3283  0517  0797               	addwf	(sprintf@width+1)^(0+384),f
  3284  0518                     l4099:	
  3285                           
  3286                           ;doprnt.c: 1149: if(flag & 0x03)
  3287  0518  3003               	movlw	3
  3288  0519  0514               	andwf	sprintf@flag^(0+384),w
  3289  051A  1683               	bsf	3,5	;RP0=1, select bank1
  3290  051B  1303               	bcf	3,6	;RP1=0, select bank1
  3291  051C  00E1               	movwf	??_sprintf^(0+128)
  3292  051D  3000               	movlw	0
  3293  051E  1683               	bsf	3,5	;RP0=1, select bank3
  3294  051F  1703               	bsf	3,6	;RP1=1, select bank3
  3295  0520  0515               	andwf	(sprintf@flag+1)^(0+384),w
  3296  0521  1683               	bsf	3,5	;RP0=1, select bank1
  3297  0522  1303               	bcf	3,6	;RP1=0, select bank1
  3298  0523  00E2               	movwf	(??_sprintf+1)^(0+128)
  3299  0524  0861               	movf	??_sprintf^(0+128),w
  3300  0525  0462               	iorwf	(??_sprintf^(0+128)+1),w
  3301  0526  1903               	btfsc	3,2
  3302  0527  2D30               	goto	l4109
  3303  0528                     l4107:	
  3304                           
  3305                           ;doprnt.c: 1182: width--;
  3306  0528  30FF               	movlw	255
  3307  0529  1683               	bsf	3,5	;RP0=1, select bank3
  3308  052A  1703               	bsf	3,6	;RP1=1, select bank3
  3309  052B  0796               	addwf	sprintf@width^(0+384),f
  3310  052C  1803               	skipnc
  3311  052D  0A97               	incf	(sprintf@width+1)^(0+384),f
  3312  052E  30FF               	movlw	255
  3313  052F  0797               	addwf	(sprintf@width+1)^(0+384),f
  3314  0530                     l4109:	
  3315  0530  1683               	bsf	3,5	;RP0=1, select bank3
  3316  0531  1703               	bsf	3,6	;RP1=1, select bank3
  3317  0532  0817               	movf	(sprintf@width+1)^(0+384),w
  3318  0533  3A80               	xorlw	128
  3319  0534  00FF               	movwf	127
  3320  0535  3080               	movlw	128
  3321  0536  027F               	subwf	127,w
  3322  0537  1D03               	skipz
  3323  0538  2D3B               	goto	u6355
  3324  0539  3001               	movlw	1
  3325  053A  0216               	subwf	sprintf@width^(0+384),w
  3326  053B                     u6355:	
  3327  053B  1C03               	btfss	3,0
  3328  053C  2D4D               	goto	l4111
  3329                           
  3330                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  3331                           
  3332                           ;doprnt.c: 1175: {
  3333                           ;doprnt.c: 1180: while(width > 0) {
  3334                           
  3335                           ;doprnt.c: 1150: width--;
  3336  053D  3020               	movlw	32
  3337  053E  1683               	bsf	3,5	;RP0=1, select bank1
  3338  053F  1303               	bcf	3,6	;RP1=0, select bank1
  3339  0540  00E1               	movwf	??_sprintf^(0+128)
  3340  0541  0859               	movf	sprintf@sp^(0+128),w
  3341  0542  0084               	movwf	4
  3342  0543  1783               	bsf	3,7
  3343  0544  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  3344  0545  1383               	bcf	3,7
  3345  0546  0861               	movf	??_sprintf^(0+128),w
  3346  0547  0080               	movwf	0
  3347  0548  3001               	movlw	1
  3348  0549  07D9               	addwf	sprintf@sp^(0+128),f
  3349  054A  1803               	skipnc
  3350  054B  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  3351  054C  2D28               	goto	l4107
  3352  054D                     l4111:	
  3353                           
  3354                           ;doprnt.c: 1183: }
  3355                           ;doprnt.c: 1188: if(flag & 0x03)
  3356  054D  3003               	movlw	3
  3357  054E  1683               	bsf	3,5	;RP0=1, select bank3
  3358  054F  1703               	bsf	3,6	;RP1=1, select bank3
  3359  0550  0514               	andwf	sprintf@flag^(0+384),w
  3360  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3361  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3362  0553  00E1               	movwf	??_sprintf^(0+128)
  3363  0554  3000               	movlw	0
  3364  0555  1683               	bsf	3,5	;RP0=1, select bank3
  3365  0556  1703               	bsf	3,6	;RP1=1, select bank3
  3366  0557  0515               	andwf	(sprintf@flag+1)^(0+384),w
  3367  0558  1683               	bsf	3,5	;RP0=1, select bank1
  3368  0559  1303               	bcf	3,6	;RP1=0, select bank1
  3369  055A  00E2               	movwf	(??_sprintf+1)^(0+128)
  3370  055B  0861               	movf	??_sprintf^(0+128),w
  3371  055C  0462               	iorwf	(??_sprintf^(0+128)+1),w
  3372  055D  1903               	btfsc	3,2
  3373  055E  2D6C               	goto	l219
  3374                           
  3375                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  3376  055F  302D               	movlw	45
  3377  0560                     L5:	
  3378  0560  00E1               	movwf	??_sprintf^(0+128)
  3379  0561  0859               	movf	sprintf@sp^(0+128),w
  3380  0562  0084               	movwf	4
  3381  0563  1783               	bsf	3,7
  3382  0564  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  3383  0565  1383               	bcf	3,7
  3384  0566  0861               	movf	??_sprintf^(0+128),w
  3385  0567  0080               	movwf	0
  3386  0568  3001               	movlw	1
  3387  0569  07D9               	addwf	sprintf@sp^(0+128),f
  3388  056A  1803               	skipnc
  3389  056B  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  3390  056C                     l219:	
  3391  056C  30FF               	movlw	255
  3392  056D  00E1               	movwf	??_sprintf^(0+128)
  3393  056E  0861               	movf	??_sprintf^(0+128),w
  3394  056F  1683               	bsf	3,5	;RP0=1, select bank3
  3395  0570  1703               	bsf	3,6	;RP1=1, select bank3
  3396  0571  07A7               	addwf	sprintf@c^(0+384),f
  3397  0572  0A27               	incf	sprintf@c^(0+384),w
  3398  0573  1903               	btfsc	3,2
  3399  0574  2E2F               	goto	l4131
  3400                           
  3401                           ;doprnt.c: 1200: {
  3402                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3403                           
  3404                           ;doprnt.c: 1195: }
  3405                           ;doprnt.c: 1196: while(c--) {
  3406  0575  1683               	bsf	3,5	;RP0=1, select bank3
  3407  0576  1703               	bsf	3,6	;RP1=1, select bank3
  3408  0577  0827               	movf	sprintf@c^(0+384),w
  3409  0578  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0579  1303               	bcf	3,6	;RP1=0, select bank1
  3411  057A  00E1               	movwf	??_sprintf^(0+128)
  3412  057B  3001               	movlw	1
  3413  057C                     u6375:	
  3414  057C  1003               	clrc
  3415  057D  0DE1               	rlf	??_sprintf^(0+128),f
  3416  057E  3EFF               	addlw	-1
  3417  057F  1D03               	skipz
  3418  0580  2D7C               	goto	u6375
  3419  0581  1003               	clrc
  3420  0582  0D61               	rlf	??_sprintf^(0+128),w
  3421  0583  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3422  0584  0084               	movwf	4
  3423  0585  160A  118A  2000  120A  118A  	fcall	stringdir
  3424  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3425  058B  1303               	bcf	3,6	;RP1=0, select bank0
  3426  058C  00B6               	movwf	___lldiv@divisor
  3427  058D  160A  118A  2000  120A  118A  	fcall	stringdir
  3428  0592  00B7               	movwf	___lldiv@divisor+1
  3429  0593  160A  118A  2000  120A  118A  	fcall	stringdir
  3430  0598  00B8               	movwf	___lldiv@divisor+2
  3431  0599  160A  118A  2000  120A  118A  	fcall	stringdir
  3432  059E  00B9               	movwf	___lldiv@divisor+3
  3433  059F  1683               	bsf	3,5	;RP0=1, select bank3
  3434  05A0  1703               	bsf	3,6	;RP1=1, select bank3
  3435  05A1  081F               	movf	(sprintf@val+3)^(0+384),w
  3436  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3437  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3438  05A4  00BD               	movwf	___lldiv@dividend+3
  3439  05A5  1683               	bsf	3,5	;RP0=1, select bank3
  3440  05A6  1703               	bsf	3,6	;RP1=1, select bank3
  3441  05A7  081E               	movf	(sprintf@val+2)^(0+384),w
  3442  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3443  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  3444  05AA  00BC               	movwf	___lldiv@dividend+2
  3445  05AB  1683               	bsf	3,5	;RP0=1, select bank3
  3446  05AC  1703               	bsf	3,6	;RP1=1, select bank3
  3447  05AD  081D               	movf	(sprintf@val+1)^(0+384),w
  3448  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  3449  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  3450  05B0  00BB               	movwf	___lldiv@dividend+1
  3451  05B1  1683               	bsf	3,5	;RP0=1, select bank3
  3452  05B2  1703               	bsf	3,6	;RP1=1, select bank3
  3453  05B3  081C               	movf	sprintf@val^(0+384),w
  3454  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3455  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  3456  05B6  00BA               	movwf	___lldiv@dividend
  3457  05B7  160A  158A  2648  120A  118A  	fcall	___lldiv
  3458  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3459  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3460  05BE  0839               	movf	?___lldiv+3,w
  3461  05BF  1683               	bsf	3,5	;RP0=1, select bank3
  3462  05C0  1703               	bsf	3,6	;RP1=1, select bank3
  3463  05C1  009B               	movwf	(sprintf@tmpval+3)^(0+384)
  3464  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3465  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3466  05C4  0838               	movf	?___lldiv+2,w
  3467  05C5  1683               	bsf	3,5	;RP0=1, select bank3
  3468  05C6  1703               	bsf	3,6	;RP1=1, select bank3
  3469  05C7  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  3470  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3471  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3472  05CA  0837               	movf	?___lldiv+1,w
  3473  05CB  1683               	bsf	3,5	;RP0=1, select bank3
  3474  05CC  1703               	bsf	3,6	;RP1=1, select bank3
  3475  05CD  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  3476  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3477  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3478  05D0  0836               	movf	?___lldiv,w
  3479  05D1  1683               	bsf	3,5	;RP0=1, select bank3
  3480  05D2  1703               	bsf	3,6	;RP1=1, select bank3
  3481  05D3  0098               	movwf	sprintf@tmpval^(0+384)
  3482                           
  3483                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3484  05D4  3000               	movlw	0
  3485  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  3486  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  3487  05D7  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  3488  05D8  3000               	movlw	0
  3489  05D9  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  3490  05DA  3000               	movlw	0
  3491  05DB  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  3492  05DC  300A               	movlw	10
  3493  05DD  00A0               	movwf	___llmod@divisor^(0+128)
  3494  05DE  1683               	bsf	3,5	;RP0=1, select bank3
  3495  05DF  1703               	bsf	3,6	;RP1=1, select bank3
  3496  05E0  081B               	movf	(sprintf@tmpval+3)^(0+384),w
  3497  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3498  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3499  05E3  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  3500  05E4  1683               	bsf	3,5	;RP0=1, select bank3
  3501  05E5  1703               	bsf	3,6	;RP1=1, select bank3
  3502  05E6  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  3503  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3504  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3505  05E9  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  3506  05EA  1683               	bsf	3,5	;RP0=1, select bank3
  3507  05EB  1703               	bsf	3,6	;RP1=1, select bank3
  3508  05EC  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  3509  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3510  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3511  05EF  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  3512  05F0  1683               	bsf	3,5	;RP0=1, select bank3
  3513  05F1  1703               	bsf	3,6	;RP1=1, select bank3
  3514  05F2  0818               	movf	sprintf@tmpval^(0+384),w
  3515  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3516  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3517  05F5  00A4               	movwf	___llmod@dividend^(0+128)
  3518  05F6  160A  158A  24EA  120A  118A  	fcall	___llmod
  3519  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  3520  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  3521  05FD  0823               	movf	(?___llmod+3)^(0+128),w
  3522  05FE  1683               	bsf	3,5	;RP0=1, select bank3
  3523  05FF  1703               	bsf	3,6	;RP1=1, select bank3
  3524  0600  009B               	movwf	(sprintf@tmpval+3)^(0+384)
  3525  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0603  0822               	movf	(?___llmod+2)^(0+128),w
  3528  0604  1683               	bsf	3,5	;RP0=1, select bank3
  3529  0605  1703               	bsf	3,6	;RP1=1, select bank3
  3530  0606  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  3531  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3533  0609  0821               	movf	(?___llmod+1)^(0+128),w
  3534  060A  1683               	bsf	3,5	;RP0=1, select bank3
  3535  060B  1703               	bsf	3,6	;RP1=1, select bank3
  3536  060C  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  3537  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3538  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3539  060F  0820               	movf	?___llmod^(0+128),w
  3540  0610  1683               	bsf	3,5	;RP0=1, select bank3
  3541  0611  1703               	bsf	3,6	;RP1=1, select bank3
  3542  0612  0098               	movwf	sprintf@tmpval^(0+384)
  3543                           
  3544                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  3545  0613  0818               	movf	sprintf@tmpval^(0+384),w
  3546  0614  3E30               	addlw	48
  3547  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3548  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3549  0617  2D60               	goto	L5
  3550  0618                     l4125:	
  3551                           ;doprnt.c: 1204: }
  3552                           ;doprnt.c: 1206: }
  3553                           ;doprnt.c: 1207: while(exp > 0) {
  3554                           
  3555                           
  3556                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  3557  0618  3030               	movlw	48
  3558  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3559  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3560  061B  00E1               	movwf	??_sprintf^(0+128)
  3561  061C  0859               	movf	sprintf@sp^(0+128),w
  3562  061D  0084               	movwf	4
  3563  061E  1783               	bsf	3,7
  3564  061F  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  3565  0620  1383               	bcf	3,7
  3566  0621  0861               	movf	??_sprintf^(0+128),w
  3567  0622  0080               	movwf	0
  3568  0623  3001               	movlw	1
  3569  0624  07D9               	addwf	sprintf@sp^(0+128),f
  3570  0625  1803               	skipnc
  3571  0626  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  3572                           
  3573                           ;doprnt.c: 1209: exp--;
  3574  0627  30FF               	movlw	255
  3575  0628  1683               	bsf	3,5	;RP0=1, select bank3
  3576  0629  1703               	bsf	3,6	;RP1=1, select bank3
  3577  062A  07A0               	addwf	sprintf@exp^(0+384),f
  3578  062B  1803               	skipnc
  3579  062C  0AA1               	incf	(sprintf@exp+1)^(0+384),f
  3580  062D  30FF               	movlw	255
  3581  062E  07A1               	addwf	(sprintf@exp+1)^(0+384),f
  3582  062F                     l4131:	
  3583  062F  0821               	movf	(sprintf@exp+1)^(0+384),w
  3584  0630  3A80               	xorlw	128
  3585  0631  00FF               	movwf	127
  3586  0632  3080               	movlw	128
  3587  0633  027F               	subwf	127,w
  3588  0634  1D03               	skipz
  3589  0635  2E38               	goto	u6395
  3590  0636  3001               	movlw	1
  3591  0637  0220               	subwf	sprintf@exp^(0+384),w
  3592  0638                     u6395:	
  3593  0638  1803               	skipnc
  3594  0639  2E18               	goto	l4125
  3595                           
  3596                           ;doprnt.c: 1210: }
  3597                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3598  063A  1683               	bsf	3,5	;RP0=1, select bank3
  3599  063B  1703               	bsf	3,6	;RP1=1, select bank3
  3600  063C  0826               	movf	(sprintf@prec+1)^(0+384),w
  3601  063D  3A80               	xorlw	128
  3602  063E  00FF               	movwf	127
  3603  063F  3080               	movlw	128
  3604  0640  027F               	subwf	127,w
  3605  0641  1D03               	skipz
  3606  0642  2E45               	goto	u6405
  3607  0643  3009               	movlw	9
  3608  0644  0225               	subwf	sprintf@prec^(0+384),w
  3609  0645                     u6405:	
  3610  0645  1C03               	skipc
  3611  0646  2E49               	goto	l4137
  3612                           
  3613                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3614  0647  3008               	movlw	8
  3615  0648  2E4C               	goto	L3
  3616  0649                     l4137:	
  3617                           
  3618                           ;doprnt.c: 1213: else
  3619                           ;doprnt.c: 1214: c = prec;
  3620  0649  1683               	bsf	3,5	;RP0=1, select bank3
  3621  064A  1703               	bsf	3,6	;RP1=1, select bank3
  3622  064B  0825               	movf	sprintf@prec^(0+384),w
  3623  064C                     L3:	
  3624  064C  1683               	bsf	3,5	;RP0=1, select bank1
  3625  064D  1303               	bcf	3,6	;RP1=0, select bank1
  3626  064E  00E1               	movwf	??_sprintf^(0+128)
  3627  064F  0861               	movf	??_sprintf^(0+128),w
  3628  0650  1683               	bsf	3,5	;RP0=1, select bank3
  3629  0651  1703               	bsf	3,6	;RP1=1, select bank3
  3630  0652  00A7               	movwf	sprintf@c^(0+384)
  3631                           
  3632                           ;doprnt.c: 1215: prec -= c;
  3633  0653  0827               	movf	sprintf@c^(0+384),w
  3634  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0656  00E1               	movwf	??_sprintf^(0+128)
  3637  0657  01E2               	clrf	(??_sprintf^(0+128)+1)
  3638  0658  1BE1               	btfsc	??_sprintf^(0+128),7
  3639  0659  03E2               	decf	(??_sprintf^(0+128)+1),f
  3640  065A  0861               	movf	??_sprintf^(0+128),w
  3641  065B  1683               	bsf	3,5	;RP0=1, select bank3
  3642  065C  1703               	bsf	3,6	;RP1=1, select bank3
  3643  065D  02A5               	subwf	sprintf@prec^(0+384),f
  3644  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3645  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3646  0660  0862               	movf	(??_sprintf+1)^(0+128),w
  3647  0661  1683               	bsf	3,5	;RP0=1, select bank3
  3648  0662  1703               	bsf	3,6	;RP1=1, select bank3
  3649  0663  1C03               	skipc
  3650  0664  03A6               	decf	(sprintf@prec+1)^(0+384),f
  3651  0665  02A6               	subwf	(sprintf@prec+1)^(0+384),f
  3652                           
  3653                           ;doprnt.c: 1219: if(c)
  3654  0666  0827               	movf	sprintf@c^(0+384),w
  3655  0667  1903               	btfsc	3,2
  3656  0668  2E78               	goto	l4145
  3657                           
  3658                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  3659  0669  302E               	movlw	46
  3660  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3661  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3662  066C  00E1               	movwf	??_sprintf^(0+128)
  3663  066D  0859               	movf	sprintf@sp^(0+128),w
  3664  066E  0084               	movwf	4
  3665  066F  1783               	bsf	3,7
  3666  0670  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  3667  0671  1383               	bcf	3,7
  3668  0672  0861               	movf	??_sprintf^(0+128),w
  3669  0673  0080               	movwf	0
  3670  0674  3001               	movlw	1
  3671  0675  07D9               	addwf	sprintf@sp^(0+128),f
  3672  0676  1803               	skipnc
  3673  0677  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  3674  0678                     l4145:	
  3675                           
  3676                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3677  0678  1683               	bsf	3,5	;RP0=1, select bank3
  3678  0679  1703               	bsf	3,6	;RP1=1, select bank3
  3679  067A  0827               	movf	sprintf@c^(0+384),w
  3680  067B  120A  158A  2509  120A  118A  	fcall	_scale
  3681  0680  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0681  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0682  0836               	movf	?_scale^(0+128),w
  3684  0683  1683               	bsf	3,5	;RP0=1, select bank3
  3685  0684  1703               	bsf	3,6	;RP1=1, select bank3
  3686  0685  0090               	movwf	_sprintf$820^(0+384)
  3687  0686  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0687  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0688  0837               	movf	(?_scale+1)^(0+128),w
  3690  0689  1683               	bsf	3,5	;RP0=1, select bank3
  3691  068A  1703               	bsf	3,6	;RP1=1, select bank3
  3692  068B  0091               	movwf	(_sprintf$820+1)^(0+384)
  3693  068C  1683               	bsf	3,5	;RP0=1, select bank1
  3694  068D  1303               	bcf	3,6	;RP1=0, select bank1
  3695  068E  0838               	movf	(?_scale+2)^(0+128),w
  3696  068F  1683               	bsf	3,5	;RP0=1, select bank3
  3697  0690  1703               	bsf	3,6	;RP1=1, select bank3
  3698  0691  0092               	movwf	(_sprintf$820+2)^(0+384)
  3699                           
  3700                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3701  0692  0810               	movf	_sprintf$820^(0+384),w
  3702  0693  1683               	bsf	3,5	;RP0=1, select bank1
  3703  0694  1303               	bcf	3,6	;RP1=0, select bank1
  3704  0695  00A9               	movwf	___ftmul@f2^(0+128)
  3705  0696  1683               	bsf	3,5	;RP0=1, select bank3
  3706  0697  1703               	bsf	3,6	;RP1=1, select bank3
  3707  0698  0811               	movf	(_sprintf$820+1)^(0+384),w
  3708  0699  1683               	bsf	3,5	;RP0=1, select bank1
  3709  069A  1303               	bcf	3,6	;RP1=0, select bank1
  3710  069B  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  3711  069C  1683               	bsf	3,5	;RP0=1, select bank3
  3712  069D  1703               	bsf	3,6	;RP1=1, select bank3
  3713  069E  0812               	movf	(_sprintf$820+2)^(0+384),w
  3714  069F  1683               	bsf	3,5	;RP0=1, select bank1
  3715  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3716  06A1  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  3717  06A2  1683               	bsf	3,5	;RP0=1, select bank3
  3718  06A3  1703               	bsf	3,6	;RP1=1, select bank3
  3719  06A4  0822               	movf	sprintf@fval^(0+384),w
  3720  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  3721  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  3722  06A7  00A6               	movwf	___ftmul@f1^(0+128)
  3723  06A8  1683               	bsf	3,5	;RP0=1, select bank3
  3724  06A9  1703               	bsf	3,6	;RP1=1, select bank3
  3725  06AA  0823               	movf	(sprintf@fval+1)^(0+384),w
  3726  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3727  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  3728  06AD  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  3729  06AE  1683               	bsf	3,5	;RP0=1, select bank3
  3730  06AF  1703               	bsf	3,6	;RP1=1, select bank3
  3731  06B0  0824               	movf	(sprintf@fval+2)^(0+384),w
  3732  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  3733  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  3734  06B3  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  3735  06B4  160A  118A  2236  120A  118A  	fcall	___ftmul
  3736  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3737  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  3738  06BB  0826               	movf	?___ftmul^(0+128),w
  3739  06BC  00BF               	movwf	___fttol@f1^(0+128)
  3740  06BD  0827               	movf	(?___ftmul+1)^(0+128),w
  3741  06BE  00C0               	movwf	(___fttol@f1+1)^(0+128)
  3742  06BF  0828               	movf	(?___ftmul+2)^(0+128),w
  3743  06C0  00C1               	movwf	(___fttol@f1+2)^(0+128)
  3744  06C1  160A  118A  20D5  120A  118A  	fcall	___fttol
  3745  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  3746  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  3747  06C8  0842               	movf	(?___fttol+3)^(0+128),w
  3748  06C9  1683               	bsf	3,5	;RP0=1, select bank3
  3749  06CA  1703               	bsf	3,6	;RP1=1, select bank3
  3750  06CB  009F               	movwf	(sprintf@val+3)^(0+384)
  3751  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3752  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3753  06CE  0841               	movf	(?___fttol+2)^(0+128),w
  3754  06CF  1683               	bsf	3,5	;RP0=1, select bank3
  3755  06D0  1703               	bsf	3,6	;RP1=1, select bank3
  3756  06D1  009E               	movwf	(sprintf@val+2)^(0+384)
  3757  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  3758  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  3759  06D4  0840               	movf	(?___fttol+1)^(0+128),w
  3760  06D5  1683               	bsf	3,5	;RP0=1, select bank3
  3761  06D6  1703               	bsf	3,6	;RP1=1, select bank3
  3762  06D7  009D               	movwf	(sprintf@val+1)^(0+384)
  3763  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  3764  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  3765  06DA  083F               	movf	?___fttol^(0+128),w
  3766  06DB                     L4:	
  3767  06DB  1683               	bsf	3,5	;RP0=1, select bank3
  3768  06DC  1703               	bsf	3,6	;RP1=1, select bank3
  3769  06DD  009C               	movwf	sprintf@val^(0+384)
  3770  06DE  30FF               	movlw	255
  3771  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3772  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  3773  06E1  00E1               	movwf	??_sprintf^(0+128)
  3774  06E2  0861               	movf	??_sprintf^(0+128),w
  3775  06E3  1683               	bsf	3,5	;RP0=1, select bank3
  3776  06E4  1703               	bsf	3,6	;RP1=1, select bank3
  3777  06E5  07A7               	addwf	sprintf@c^(0+384),f
  3778  06E6  0A27               	incf	sprintf@c^(0+384),w
  3779  06E7  1903               	btfsc	3,2
  3780  06E8  2FF6               	goto	L13
  3781                           
  3782                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3783                           
  3784                           ;doprnt.c: 1228: while(c--) {
  3785  06E9  0827               	movf	sprintf@c^(0+384),w
  3786  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3787  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3788  06EC  00E1               	movwf	??_sprintf^(0+128)
  3789  06ED  3001               	movlw	1
  3790  06EE                     u6425:	
  3791  06EE  1003               	clrc
  3792  06EF  0DE1               	rlf	??_sprintf^(0+128),f
  3793  06F0  3EFF               	addlw	-1
  3794  06F1  1D03               	skipz
  3795  06F2  2EEE               	goto	u6425
  3796  06F3  1003               	clrc
  3797  06F4  0D61               	rlf	??_sprintf^(0+128),w
  3798  06F5  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3799  06F6  0084               	movwf	4
  3800  06F7  160A  118A  2000  120A  118A  	fcall	stringdir
  3801  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3802  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3803  06FE  00B6               	movwf	___lldiv@divisor
  3804  06FF  160A  118A  2000  120A  118A  	fcall	stringdir
  3805  0704  00B7               	movwf	___lldiv@divisor+1
  3806  0705  160A  118A  2000  120A  118A  	fcall	stringdir
  3807  070A  00B8               	movwf	___lldiv@divisor+2
  3808  070B  160A  118A  2000  120A  118A  	fcall	stringdir
  3809  0710  00B9               	movwf	___lldiv@divisor+3
  3810  0711  1683               	bsf	3,5	;RP0=1, select bank3
  3811  0712  1703               	bsf	3,6	;RP1=1, select bank3
  3812  0713  081F               	movf	(sprintf@val+3)^(0+384),w
  3813  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3814  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3815  0716  00BD               	movwf	___lldiv@dividend+3
  3816  0717  1683               	bsf	3,5	;RP0=1, select bank3
  3817  0718  1703               	bsf	3,6	;RP1=1, select bank3
  3818  0719  081E               	movf	(sprintf@val+2)^(0+384),w
  3819  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3820  071B  1303               	bcf	3,6	;RP1=0, select bank0
  3821  071C  00BC               	movwf	___lldiv@dividend+2
  3822  071D  1683               	bsf	3,5	;RP0=1, select bank3
  3823  071E  1703               	bsf	3,6	;RP1=1, select bank3
  3824  071F  081D               	movf	(sprintf@val+1)^(0+384),w
  3825  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0722  00BB               	movwf	___lldiv@dividend+1
  3828  0723  1683               	bsf	3,5	;RP0=1, select bank3
  3829  0724  1703               	bsf	3,6	;RP1=1, select bank3
  3830  0725  081C               	movf	sprintf@val^(0+384),w
  3831  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3832  0727  1303               	bcf	3,6	;RP1=0, select bank0
  3833  0728  00BA               	movwf	___lldiv@dividend
  3834  0729  160A  158A  2648  120A  118A  	fcall	___lldiv
  3835  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3836  072F  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0730  0839               	movf	?___lldiv+3,w
  3838  0731  1683               	bsf	3,5	;RP0=1, select bank3
  3839  0732  1703               	bsf	3,6	;RP1=1, select bank3
  3840  0733  009B               	movwf	(sprintf@tmpval+3)^(0+384)
  3841  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0735  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0736  0838               	movf	?___lldiv+2,w
  3844  0737  1683               	bsf	3,5	;RP0=1, select bank3
  3845  0738  1703               	bsf	3,6	;RP1=1, select bank3
  3846  0739  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  3847  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3848  073B  1303               	bcf	3,6	;RP1=0, select bank0
  3849  073C  0837               	movf	?___lldiv+1,w
  3850  073D  1683               	bsf	3,5	;RP0=1, select bank3
  3851  073E  1703               	bsf	3,6	;RP1=1, select bank3
  3852  073F  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  3853  0740  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0741  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0742  0836               	movf	?___lldiv,w
  3856  0743  1683               	bsf	3,5	;RP0=1, select bank3
  3857  0744  1703               	bsf	3,6	;RP1=1, select bank3
  3858  0745  0098               	movwf	sprintf@tmpval^(0+384)
  3859                           
  3860                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3861  0746  3000               	movlw	0
  3862  0747  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0748  1303               	bcf	3,6	;RP1=0, select bank1
  3864  0749  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  3865  074A  3000               	movlw	0
  3866  074B  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  3867  074C  3000               	movlw	0
  3868  074D  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  3869  074E  300A               	movlw	10
  3870  074F  00A0               	movwf	___llmod@divisor^(0+128)
  3871  0750  1683               	bsf	3,5	;RP0=1, select bank3
  3872  0751  1703               	bsf	3,6	;RP1=1, select bank3
  3873  0752  081B               	movf	(sprintf@tmpval+3)^(0+384),w
  3874  0753  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0754  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0755  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  3877  0756  1683               	bsf	3,5	;RP0=1, select bank3
  3878  0757  1703               	bsf	3,6	;RP1=1, select bank3
  3879  0758  081A               	movf	(sprintf@tmpval+2)^(0+384),w
  3880  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3881  075A  1303               	bcf	3,6	;RP1=0, select bank1
  3882  075B  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  3883  075C  1683               	bsf	3,5	;RP0=1, select bank3
  3884  075D  1703               	bsf	3,6	;RP1=1, select bank3
  3885  075E  0819               	movf	(sprintf@tmpval+1)^(0+384),w
  3886  075F  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0760  1303               	bcf	3,6	;RP1=0, select bank1
  3888  0761  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  3889  0762  1683               	bsf	3,5	;RP0=1, select bank3
  3890  0763  1703               	bsf	3,6	;RP1=1, select bank3
  3891  0764  0818               	movf	sprintf@tmpval^(0+384),w
  3892  0765  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0766  1303               	bcf	3,6	;RP1=0, select bank1
  3894  0767  00A4               	movwf	___llmod@dividend^(0+128)
  3895  0768  160A  158A  24EA  120A  118A  	fcall	___llmod
  3896  076D  1683               	bsf	3,5	;RP0=1, select bank1
  3897  076E  1303               	bcf	3,6	;RP1=0, select bank1
  3898  076F  0823               	movf	(?___llmod+3)^(0+128),w
  3899  0770  1683               	bsf	3,5	;RP0=1, select bank3
  3900  0771  1703               	bsf	3,6	;RP1=1, select bank3
  3901  0772  009B               	movwf	(sprintf@tmpval+3)^(0+384)
  3902  0773  1683               	bsf	3,5	;RP0=1, select bank1
  3903  0774  1303               	bcf	3,6	;RP1=0, select bank1
  3904  0775  0822               	movf	(?___llmod+2)^(0+128),w
  3905  0776  1683               	bsf	3,5	;RP0=1, select bank3
  3906  0777  1703               	bsf	3,6	;RP1=1, select bank3
  3907  0778  009A               	movwf	(sprintf@tmpval+2)^(0+384)
  3908  0779  1683               	bsf	3,5	;RP0=1, select bank1
  3909  077A  1303               	bcf	3,6	;RP1=0, select bank1
  3910  077B  0821               	movf	(?___llmod+1)^(0+128),w
  3911  077C  1683               	bsf	3,5	;RP0=1, select bank3
  3912  077D  1703               	bsf	3,6	;RP1=1, select bank3
  3913  077E  0099               	movwf	(sprintf@tmpval+1)^(0+384)
  3914  077F  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0780  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0781  0820               	movf	?___llmod^(0+128),w
  3917  0782  1683               	bsf	3,5	;RP0=1, select bank3
  3918  0783  1703               	bsf	3,6	;RP1=1, select bank3
  3919  0784  0098               	movwf	sprintf@tmpval^(0+384)
  3920                           
  3921                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  3922  0785  0818               	movf	sprintf@tmpval^(0+384),w
  3923  0786  3E30               	addlw	48
  3924  0787  1683               	bsf	3,5	;RP0=1, select bank1
  3925  0788  1303               	bcf	3,6	;RP1=0, select bank1
  3926  0789  00E1               	movwf	??_sprintf^(0+128)
  3927  078A  0859               	movf	sprintf@sp^(0+128),w
  3928  078B  0084               	movwf	4
  3929  078C  1783               	bsf	3,7
  3930  078D  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  3931  078E  1383               	bcf	3,7
  3932  078F  0861               	movf	??_sprintf^(0+128),w
  3933  0790  0080               	movwf	0
  3934  0791  3001               	movlw	1
  3935  0792  07D9               	addwf	sprintf@sp^(0+128),f
  3936  0793  1803               	skipnc
  3937  0794  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  3938                           
  3939                           ;doprnt.c: 1232: val %= dpowers[c];
  3940  0795  1683               	bsf	3,5	;RP0=1, select bank3
  3941  0796  1703               	bsf	3,6	;RP1=1, select bank3
  3942  0797  0827               	movf	sprintf@c^(0+384),w
  3943  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3945  079A  00E1               	movwf	??_sprintf^(0+128)
  3946  079B  3001               	movlw	1
  3947  079C                     u6435:	
  3948  079C  1003               	clrc
  3949  079D  0DE1               	rlf	??_sprintf^(0+128),f
  3950  079E  3EFF               	addlw	-1
  3951  079F  1D03               	skipz
  3952  07A0  2F9C               	goto	u6435
  3953  07A1  1003               	clrc
  3954  07A2  0D61               	rlf	??_sprintf^(0+128),w
  3955  07A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3956  07A4  0084               	movwf	4
  3957  07A5  160A  118A  2000  120A  118A  	fcall	stringdir
  3958  07AA  00A0               	movwf	___llmod@divisor^(0+128)
  3959  07AB  160A  118A  2000  120A  118A  	fcall	stringdir
  3960  07B0  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  3961  07B1  160A  118A  2000  120A  118A  	fcall	stringdir
  3962  07B6  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  3963  07B7  160A  118A  2000  120A  118A  	fcall	stringdir
  3964  07BC  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  3965  07BD  1683               	bsf	3,5	;RP0=1, select bank3
  3966  07BE  1703               	bsf	3,6	;RP1=1, select bank3
  3967  07BF  081F               	movf	(sprintf@val+3)^(0+384),w
  3968  07C0  1683               	bsf	3,5	;RP0=1, select bank1
  3969  07C1  1303               	bcf	3,6	;RP1=0, select bank1
  3970  07C2  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  3971  07C3  1683               	bsf	3,5	;RP0=1, select bank3
  3972  07C4  1703               	bsf	3,6	;RP1=1, select bank3
  3973  07C5  081E               	movf	(sprintf@val+2)^(0+384),w
  3974  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3975  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  3976  07C8  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  3977  07C9  1683               	bsf	3,5	;RP0=1, select bank3
  3978  07CA  1703               	bsf	3,6	;RP1=1, select bank3
  3979  07CB  081D               	movf	(sprintf@val+1)^(0+384),w
  3980  07CC  1683               	bsf	3,5	;RP0=1, select bank1
  3981  07CD  1303               	bcf	3,6	;RP1=0, select bank1
  3982  07CE  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  3983  07CF  1683               	bsf	3,5	;RP0=1, select bank3
  3984  07D0  1703               	bsf	3,6	;RP1=1, select bank3
  3985  07D1  081C               	movf	sprintf@val^(0+384),w
  3986  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  3987  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  3988  07D4  00A4               	movwf	___llmod@dividend^(0+128)
  3989  07D5  160A  158A  24EA  120A  118A  	fcall	___llmod
  3990  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  3991  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  3992  07DC  0823               	movf	(?___llmod+3)^(0+128),w
  3993  07DD  1683               	bsf	3,5	;RP0=1, select bank3
  3994  07DE  1703               	bsf	3,6	;RP1=1, select bank3
  3995  07DF  009F               	movwf	(sprintf@val+3)^(0+384)
  3996  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  3997  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  3998  07E2  0822               	movf	(?___llmod+2)^(0+128),w
  3999  07E3  1683               	bsf	3,5	;RP0=1, select bank3
  4000  07E4  1703               	bsf	3,6	;RP1=1, select bank3
  4001  07E5  009E               	movwf	(sprintf@val+2)^(0+384)
  4002  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  4003  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  4004  07E8  0821               	movf	(?___llmod+1)^(0+128),w
  4005  07E9  1683               	bsf	3,5	;RP0=1, select bank3
  4006  07EA  1703               	bsf	3,6	;RP1=1, select bank3
  4007  07EB  009D               	movwf	(sprintf@val+1)^(0+384)
  4008  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  4009  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  4010  07EE  0820               	movf	?___llmod^(0+128),w
  4011  07EF  2EDB               	goto	L4
  4012  07F0                     L9:	
  4013  07F0                     L8:	
  4014  07F0  120A  158A  2CFD   	ljmp	l4251
  4015  07F3                     L11:	
  4016  07F3                     L10:	
  4017  07F3  120A  158A  2ABF   	ljmp	l191
  4018  07F6                     L13:	
  4019  07F6                     L12:	
  4020  07F6  120A  158A  2ABA   	ljmp	l4167
  4021                           
  4022                           	psect	text4
  4023  0D09                     __ptext4:	
  4024 ;; *************** function _scale *****************
  4025 ;; Defined at:
  4026 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  scl             1    wreg     char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  scl             1   30[BANK1 ] char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  3   22[BANK1 ] char 
  4033 ;; Registers used:
  4034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       3       0       0
  4041 ;;      Locals:         0       0       4       0       0
  4042 ;;      Temps:          0       0       2       0       0
  4043 ;;      Totals:         0       0       9       0       0
  4044 ;;Total ram usage:        9 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    5
  4047 ;; This function calls:
  4048 ;;		___awdiv
  4049 ;;		___awmod
  4050 ;;		___bmul
  4051 ;;		___ftmul
  4052 ;; This function is called by:
  4053 ;;		_sprintf
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _scale
  4059  0D09                     _scale:	
  4060                           
  4061                           ;incstack = 0
  4062 ;; using string table level
  4063                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4064                           ;scale@scl stored from wreg
  4065  0D09  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0D0A  1303               	bcf	3,6	;RP1=0, select bank1
  4067  0D0B  00BE               	movwf	scale@scl^(0+128)
  4068                           
  4069                           ;doprnt.c: 428: if(scl < 0) {
  4070  0D0C  1FBE               	btfss	scale@scl^(0+128),7
  4071  0D0D  2E88               	goto	l3685
  4072                           
  4073                           ;doprnt.c: 429: scl = -scl;
  4074  0D0E  09BE               	comf	scale@scl^(0+128),f
  4075  0D0F  0ABE               	incf	scale@scl^(0+128),f
  4076                           
  4077                           ;doprnt.c: 430: if(scl>=110)
  4078  0D10  083E               	movf	scale@scl^(0+128),w
  4079  0D11  3A80               	xorlw	128
  4080  0D12  3E12               	addlw	-238
  4081  0D13  1C03               	skipc
  4082  0D14  2DE7               	goto	l3675
  4083                           
  4084                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4085  0D15  3003               	movlw	3
  4086  0D16  00B9               	movwf	??_scale^(0+128)
  4087  0D17  0839               	movf	??_scale^(0+128),w
  4088  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  4089  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  4090  0D1A  00C2               	movwf	___bmul@multiplicand
  4091  0D1B  300A               	movlw	10
  4092  0D1C  00BD               	movwf	___awdiv@divisor
  4093  0D1D  3000               	movlw	0
  4094  0D1E  00BE               	movwf	___awdiv@divisor+1
  4095  0D1F  1683               	bsf	3,5	;RP0=1, select bank1
  4096  0D20  1303               	bcf	3,6	;RP1=0, select bank1
  4097  0D21  083E               	movf	scale@scl^(0+128),w
  4098  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0D24  00B8               	movwf	___awmod@dividend
  4101  0D25  01B9               	clrf	___awmod@dividend+1
  4102  0D26  1BB8               	btfsc	___awmod@dividend,7
  4103  0D27  03B9               	decf	___awmod@dividend+1,f
  4104  0D28  3064               	movlw	100
  4105  0D29  00B6               	movwf	___awmod@divisor
  4106  0D2A  3000               	movlw	0
  4107  0D2B  00B7               	movwf	___awmod@divisor+1
  4108  0D2C  160A  158A  249D  120A  158A  	fcall	___awmod
  4109  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0D33  0837               	movf	?___awmod+1,w
  4112  0D34  00C0               	movwf	___awdiv@dividend+1
  4113  0D35  0836               	movf	?___awmod,w
  4114  0D36  00BF               	movwf	___awdiv@dividend
  4115  0D37  160A  158A  2782  120A  158A  	fcall	___awdiv
  4116  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0D3E  083D               	movf	?___awdiv,w
  4119  0D3F  3E09               	addlw	9
  4120  0D40  160A  158A  2346  120A  158A  	fcall	___bmul
  4121  0D45  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4122  0D46  0084               	movwf	4
  4123  0D47  160A  118A  2000  120A  158A  	fcall	stringdir
  4124  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0D4D  1303               	bcf	3,6	;RP1=0, select bank1
  4126  0D4E  00A6               	movwf	___ftmul@f1^(0+128)
  4127  0D4F  160A  118A  2000  120A  158A  	fcall	stringdir
  4128  0D54  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4129  0D55  160A  118A  2000  120A  158A  	fcall	stringdir
  4130  0D5A  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4131  0D5B  3003               	movlw	3
  4132  0D5C  00BA               	movwf	(??_scale+1)^(0+128)
  4133  0D5D  083A               	movf	(??_scale+1)^(0+128),w
  4134  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0D60  00C2               	movwf	___bmul@multiplicand
  4137  0D61  3064               	movlw	100
  4138  0D62  00BD               	movwf	___awdiv@divisor
  4139  0D63  3000               	movlw	0
  4140  0D64  00BE               	movwf	___awdiv@divisor+1
  4141  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  4142  0D66  1303               	bcf	3,6	;RP1=0, select bank1
  4143  0D67  083E               	movf	scale@scl^(0+128),w
  4144  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  4145  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  4146  0D6A  00BF               	movwf	___awdiv@dividend
  4147  0D6B  01C0               	clrf	___awdiv@dividend+1
  4148  0D6C  1BBF               	btfsc	___awdiv@dividend,7
  4149  0D6D  03C0               	decf	___awdiv@dividend+1,f
  4150  0D6E  160A  158A  2782  120A  158A  	fcall	___awdiv
  4151  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  4152  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  4153  0D75  083D               	movf	?___awdiv,w
  4154  0D76  3E12               	addlw	18
  4155  0D77  160A  158A  2346  120A  158A  	fcall	___bmul
  4156  0D7C  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4157  0D7D  0084               	movwf	4
  4158  0D7E  160A  118A  2000  120A  158A  	fcall	stringdir
  4159  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0D85  00A9               	movwf	___ftmul@f2^(0+128)
  4162  0D86  160A  118A  2000  120A  158A  	fcall	stringdir
  4163  0D8B  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4164  0D8C  160A  118A  2000  120A  158A  	fcall	stringdir
  4165  0D91  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4166  0D92  160A  118A  2236  120A  158A  	fcall	___ftmul
  4167  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  4168  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  4169  0D99  0826               	movf	?___ftmul^(0+128),w
  4170  0D9A  00BB               	movwf	_scale$819^(0+128)
  4171  0D9B  0827               	movf	(?___ftmul+1)^(0+128),w
  4172  0D9C  00BC               	movwf	(_scale$819+1)^(0+128)
  4173  0D9D  0828               	movf	(?___ftmul+2)^(0+128),w
  4174  0D9E  00BD               	movwf	(_scale$819+2)^(0+128)
  4175                           
  4176                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4177  0D9F  3003               	movlw	3
  4178  0DA0  00B9               	movwf	??_scale^(0+128)
  4179  0DA1  0839               	movf	??_scale^(0+128),w
  4180  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0DA4  00C2               	movwf	___bmul@multiplicand
  4183  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0DA7  083E               	movf	scale@scl^(0+128),w
  4186  0DA8  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0DA9  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0DAA  00B8               	movwf	___awmod@dividend
  4189  0DAB  01B9               	clrf	___awmod@dividend+1
  4190  0DAC  1BB8               	btfsc	___awmod@dividend,7
  4191  0DAD  03B9               	decf	___awmod@dividend+1,f
  4192  0DAE  300A               	movlw	10
  4193  0DAF  00B6               	movwf	___awmod@divisor
  4194  0DB0  3000               	movlw	0
  4195  0DB1  00B7               	movwf	___awmod@divisor+1
  4196  0DB2  160A  158A  249D  120A  158A  	fcall	___awmod
  4197  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  4198  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  4199  0DB9  0836               	movf	?___awmod,w
  4200  0DBA  160A  158A  2346  120A  158A  	fcall	___bmul
  4201  0DBF  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4202  0DC0  0084               	movwf	4
  4203  0DC1  160A  118A  2000  120A  158A  	fcall	stringdir
  4204  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  4205  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  4206  0DC8  00A6               	movwf	___ftmul@f1^(0+128)
  4207  0DC9  160A  118A  2000  120A  158A  	fcall	stringdir
  4208  0DCE  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4209  0DCF  160A  118A  2000  120A  158A  	fcall	stringdir
  4210  0DD4  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4211  0DD5  083B               	movf	_scale$819^(0+128),w
  4212  0DD6  00A9               	movwf	___ftmul@f2^(0+128)
  4213  0DD7  083C               	movf	(_scale$819+1)^(0+128),w
  4214  0DD8  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4215  0DD9  083D               	movf	(_scale$819+2)^(0+128),w
  4216  0DDA  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4217  0DDB  160A  118A  2236   	fcall	___ftmul
  4218  0DDE  1683               	bsf	3,5	;RP0=1, select bank1
  4219  0DDF  1303               	bcf	3,6	;RP1=0, select bank1
  4220  0DE0  0826               	movf	?___ftmul^(0+128),w
  4221  0DE1  00B6               	movwf	?_scale^(0+128)
  4222  0DE2  0827               	movf	(?___ftmul+1)^(0+128),w
  4223  0DE3  00B7               	movwf	(?_scale+1)^(0+128)
  4224  0DE4  0828               	movf	(?___ftmul+2)^(0+128),w
  4225  0DE5  00B8               	movwf	(?_scale+2)^(0+128)
  4226  0DE6  0008               	return
  4227  0DE7                     l3675:	
  4228                           
  4229                           ;doprnt.c: 432: else if(scl > 10)
  4230  0DE7  083E               	movf	scale@scl^(0+128),w
  4231  0DE8  3A80               	xorlw	128
  4232  0DE9  3E75               	addlw	-139
  4233  0DEA  1C03               	skipc
  4234  0DEB  2E65               	goto	l3681
  4235                           
  4236                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4237  0DEC  3003               	movlw	3
  4238  0DED  00B9               	movwf	??_scale^(0+128)
  4239  0DEE  0839               	movf	??_scale^(0+128),w
  4240  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  4242  0DF1  00C2               	movwf	___bmul@multiplicand
  4243  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  4244  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  4245  0DF4  083E               	movf	scale@scl^(0+128),w
  4246  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0DF7  00B8               	movwf	___awmod@dividend
  4249  0DF8  01B9               	clrf	___awmod@dividend+1
  4250  0DF9  1BB8               	btfsc	___awmod@dividend,7
  4251  0DFA  03B9               	decf	___awmod@dividend+1,f
  4252  0DFB  300A               	movlw	10
  4253  0DFC  00B6               	movwf	___awmod@divisor
  4254  0DFD  3000               	movlw	0
  4255  0DFE  00B7               	movwf	___awmod@divisor+1
  4256  0DFF  160A  158A  249D  120A  158A  	fcall	___awmod
  4257  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4258  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4259  0E06  0836               	movf	?___awmod,w
  4260  0E07  160A  158A  2346  120A  158A  	fcall	___bmul
  4261  0E0C  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4262  0E0D  0084               	movwf	4
  4263  0E0E  160A  118A  2000  120A  158A  	fcall	stringdir
  4264  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  4265  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  4266  0E15  00A6               	movwf	___ftmul@f1^(0+128)
  4267  0E16  160A  118A  2000  120A  158A  	fcall	stringdir
  4268  0E1B  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4269  0E1C  160A  118A  2000  120A  158A  	fcall	stringdir
  4270  0E21  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4271  0E22  3003               	movlw	3
  4272  0E23  00BA               	movwf	(??_scale+1)^(0+128)
  4273  0E24  083A               	movf	(??_scale+1)^(0+128),w
  4274  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  4275  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  4276  0E27  00C2               	movwf	___bmul@multiplicand
  4277  0E28  300A               	movlw	10
  4278  0E29  00BD               	movwf	___awdiv@divisor
  4279  0E2A  3000               	movlw	0
  4280  0E2B  00BE               	movwf	___awdiv@divisor+1
  4281  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  4282  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  4283  0E2E  083E               	movf	scale@scl^(0+128),w
  4284  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0E31  00BF               	movwf	___awdiv@dividend
  4287  0E32  01C0               	clrf	___awdiv@dividend+1
  4288  0E33  1BBF               	btfsc	___awdiv@dividend,7
  4289  0E34  03C0               	decf	___awdiv@dividend+1,f
  4290  0E35  160A  158A  2782  120A  158A  	fcall	___awdiv
  4291  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0E3C  083D               	movf	?___awdiv,w
  4294  0E3D  3E09               	addlw	9
  4295  0E3E  160A  158A  2346  120A  158A  	fcall	___bmul
  4296  0E43  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4297  0E44  0084               	movwf	4
  4298  0E45  160A  118A  2000  120A  158A  	fcall	stringdir
  4299  0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  4300  0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  4301  0E4C  00A9               	movwf	___ftmul@f2^(0+128)
  4302  0E4D  160A  118A  2000  120A  158A  	fcall	stringdir
  4303  0E52  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4304  0E53  160A  118A  2000  120A  158A  	fcall	stringdir
  4305  0E58  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4306  0E59  160A  118A  2236   	fcall	___ftmul
  4307  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0E5E  0826               	movf	?___ftmul^(0+128),w
  4310  0E5F  00B6               	movwf	?_scale^(0+128)
  4311  0E60  0827               	movf	(?___ftmul+1)^(0+128),w
  4312  0E61  00B7               	movwf	(?_scale+1)^(0+128)
  4313  0E62  0828               	movf	(?___ftmul+2)^(0+128),w
  4314  0E63  00B8               	movwf	(?_scale+2)^(0+128)
  4315  0E64  0008               	return
  4316  0E65                     l3681:	
  4317                           
  4318                           ;doprnt.c: 434: return _npowers_[scl];
  4319  0E65  3003               	movlw	3
  4320  0E66  00B9               	movwf	??_scale^(0+128)
  4321  0E67  0839               	movf	??_scale^(0+128),w
  4322  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0E6A  00C2               	movwf	___bmul@multiplicand
  4325  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0E6D  083E               	movf	scale@scl^(0+128),w
  4328  0E6E  160A  158A  2346  120A  158A  	fcall	___bmul
  4329  0E73  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4330  0E74  0084               	movwf	4
  4331  0E75  160A  118A  2000  120A  158A  	fcall	stringdir
  4332  0E7A  1683               	bsf	3,5	;RP0=1, select bank1
  4333  0E7B  1303               	bcf	3,6	;RP1=0, select bank1
  4334  0E7C  00B6               	movwf	?_scale^(0+128)
  4335  0E7D  160A  118A  2000  120A  158A  	fcall	stringdir
  4336  0E82  00B7               	movwf	(?_scale+1)^(0+128)
  4337  0E83  160A  118A  2000   	fcall	stringdir
  4338  0E86  00B8               	movwf	(?_scale+2)^(0+128)
  4339  0E87  0008               	return
  4340  0E88                     l3685:	
  4341                           
  4342                           ;doprnt.c: 435: }
  4343                           ;doprnt.c: 436: if(scl>=110)
  4344  0E88  083E               	movf	scale@scl^(0+128),w
  4345  0E89  3A80               	xorlw	128
  4346  0E8A  3E12               	addlw	-238
  4347  0E8B  1C03               	skipc
  4348  0E8C  2F5F               	goto	l3693
  4349                           
  4350                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4351  0E8D  3003               	movlw	3
  4352  0E8E  00B9               	movwf	??_scale^(0+128)
  4353  0E8F  0839               	movf	??_scale^(0+128),w
  4354  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0E92  00C2               	movwf	___bmul@multiplicand
  4357  0E93  300A               	movlw	10
  4358  0E94  00BD               	movwf	___awdiv@divisor
  4359  0E95  3000               	movlw	0
  4360  0E96  00BE               	movwf	___awdiv@divisor+1
  4361  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  4362  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0E99  083E               	movf	scale@scl^(0+128),w
  4364  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0E9C  00B8               	movwf	___awmod@dividend
  4367  0E9D  01B9               	clrf	___awmod@dividend+1
  4368  0E9E  1BB8               	btfsc	___awmod@dividend,7
  4369  0E9F  03B9               	decf	___awmod@dividend+1,f
  4370  0EA0  3064               	movlw	100
  4371  0EA1  00B6               	movwf	___awmod@divisor
  4372  0EA2  3000               	movlw	0
  4373  0EA3  00B7               	movwf	___awmod@divisor+1
  4374  0EA4  160A  158A  249D  120A  158A  	fcall	___awmod
  4375  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0EAB  0837               	movf	?___awmod+1,w
  4378  0EAC  00C0               	movwf	___awdiv@dividend+1
  4379  0EAD  0836               	movf	?___awmod,w
  4380  0EAE  00BF               	movwf	___awdiv@dividend
  4381  0EAF  160A  158A  2782  120A  158A  	fcall	___awdiv
  4382  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0EB6  083D               	movf	?___awdiv,w
  4385  0EB7  3E09               	addlw	9
  4386  0EB8  160A  158A  2346  120A  158A  	fcall	___bmul
  4387  0EBD  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4388  0EBE  0084               	movwf	4
  4389  0EBF  160A  118A  2000  120A  158A  	fcall	stringdir
  4390  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  4391  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  4392  0EC6  00A6               	movwf	___ftmul@f1^(0+128)
  4393  0EC7  160A  118A  2000  120A  158A  	fcall	stringdir
  4394  0ECC  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4395  0ECD  160A  118A  2000  120A  158A  	fcall	stringdir
  4396  0ED2  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4397  0ED3  3003               	movlw	3
  4398  0ED4  00BA               	movwf	(??_scale+1)^(0+128)
  4399  0ED5  083A               	movf	(??_scale+1)^(0+128),w
  4400  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0ED8  00C2               	movwf	___bmul@multiplicand
  4403  0ED9  3064               	movlw	100
  4404  0EDA  00BD               	movwf	___awdiv@divisor
  4405  0EDB  3000               	movlw	0
  4406  0EDC  00BE               	movwf	___awdiv@divisor+1
  4407  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  4408  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  4409  0EDF  083E               	movf	scale@scl^(0+128),w
  4410  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  4411  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0EE2  00BF               	movwf	___awdiv@dividend
  4413  0EE3  01C0               	clrf	___awdiv@dividend+1
  4414  0EE4  1BBF               	btfsc	___awdiv@dividend,7
  4415  0EE5  03C0               	decf	___awdiv@dividend+1,f
  4416  0EE6  160A  158A  2782  120A  158A  	fcall	___awdiv
  4417  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  4418  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  4419  0EED  083D               	movf	?___awdiv,w
  4420  0EEE  3E12               	addlw	18
  4421  0EEF  160A  158A  2346  120A  158A  	fcall	___bmul
  4422  0EF4  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4423  0EF5  0084               	movwf	4
  4424  0EF6  160A  118A  2000  120A  158A  	fcall	stringdir
  4425  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  4426  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  4427  0EFD  00A9               	movwf	___ftmul@f2^(0+128)
  4428  0EFE  160A  118A  2000  120A  158A  	fcall	stringdir
  4429  0F03  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4430  0F04  160A  118A  2000  120A  158A  	fcall	stringdir
  4431  0F09  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4432  0F0A  160A  118A  2236  120A  158A  	fcall	___ftmul
  4433  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  4434  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  4435  0F11  0826               	movf	?___ftmul^(0+128),w
  4436  0F12  00BB               	movwf	_scale$819^(0+128)
  4437  0F13  0827               	movf	(?___ftmul+1)^(0+128),w
  4438  0F14  00BC               	movwf	(_scale$819+1)^(0+128)
  4439  0F15  0828               	movf	(?___ftmul+2)^(0+128),w
  4440  0F16  00BD               	movwf	(_scale$819+2)^(0+128)
  4441                           
  4442                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4443  0F17  3003               	movlw	3
  4444  0F18  00B9               	movwf	??_scale^(0+128)
  4445  0F19  0839               	movf	??_scale^(0+128),w
  4446  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  4447  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  4448  0F1C  00C2               	movwf	___bmul@multiplicand
  4449  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0F1F  083E               	movf	scale@scl^(0+128),w
  4452  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0F22  00B8               	movwf	___awmod@dividend
  4455  0F23  01B9               	clrf	___awmod@dividend+1
  4456  0F24  1BB8               	btfsc	___awmod@dividend,7
  4457  0F25  03B9               	decf	___awmod@dividend+1,f
  4458  0F26  300A               	movlw	10
  4459  0F27  00B6               	movwf	___awmod@divisor
  4460  0F28  3000               	movlw	0
  4461  0F29  00B7               	movwf	___awmod@divisor+1
  4462  0F2A  160A  158A  249D  120A  158A  	fcall	___awmod
  4463  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  4464  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  4465  0F31  0836               	movf	?___awmod,w
  4466  0F32  160A  158A  2346  120A  158A  	fcall	___bmul
  4467  0F37  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4468  0F38  0084               	movwf	4
  4469  0F39  160A  118A  2000  120A  158A  	fcall	stringdir
  4470  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  4471  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  4472  0F40  00A6               	movwf	___ftmul@f1^(0+128)
  4473  0F41  160A  118A  2000  120A  158A  	fcall	stringdir
  4474  0F46  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4475  0F47  160A  118A  2000  120A  158A  	fcall	stringdir
  4476  0F4C  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4477  0F4D  083B               	movf	_scale$819^(0+128),w
  4478  0F4E  00A9               	movwf	___ftmul@f2^(0+128)
  4479  0F4F  083C               	movf	(_scale$819+1)^(0+128),w
  4480  0F50  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4481  0F51  083D               	movf	(_scale$819+2)^(0+128),w
  4482  0F52  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4483  0F53  160A  118A  2236   	fcall	___ftmul
  4484  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  4485  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  4486  0F58  0826               	movf	?___ftmul^(0+128),w
  4487  0F59  00B6               	movwf	?_scale^(0+128)
  4488  0F5A  0827               	movf	(?___ftmul+1)^(0+128),w
  4489  0F5B  00B7               	movwf	(?_scale+1)^(0+128)
  4490  0F5C  0828               	movf	(?___ftmul+2)^(0+128),w
  4491  0F5D  00B8               	movwf	(?_scale+2)^(0+128)
  4492  0F5E  0008               	return
  4493  0F5F                     l3693:	
  4494                           
  4495                           ;doprnt.c: 438: else if(scl > 10)
  4496  0F5F  083E               	movf	scale@scl^(0+128),w
  4497  0F60  3A80               	xorlw	128
  4498  0F61  3E75               	addlw	-139
  4499  0F62  1C03               	skipc
  4500  0F63  2FDD               	goto	l3699
  4501                           
  4502                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4503  0F64  3003               	movlw	3
  4504  0F65  00B9               	movwf	??_scale^(0+128)
  4505  0F66  0839               	movf	??_scale^(0+128),w
  4506  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0F69  00C2               	movwf	___bmul@multiplicand
  4509  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  4510  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  4511  0F6C  083E               	movf	scale@scl^(0+128),w
  4512  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4513  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4514  0F6F  00B8               	movwf	___awmod@dividend
  4515  0F70  01B9               	clrf	___awmod@dividend+1
  4516  0F71  1BB8               	btfsc	___awmod@dividend,7
  4517  0F72  03B9               	decf	___awmod@dividend+1,f
  4518  0F73  300A               	movlw	10
  4519  0F74  00B6               	movwf	___awmod@divisor
  4520  0F75  3000               	movlw	0
  4521  0F76  00B7               	movwf	___awmod@divisor+1
  4522  0F77  160A  158A  249D  120A  158A  	fcall	___awmod
  4523  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  4524  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  4525  0F7E  0836               	movf	?___awmod,w
  4526  0F7F  160A  158A  2346  120A  158A  	fcall	___bmul
  4527  0F84  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4528  0F85  0084               	movwf	4
  4529  0F86  160A  118A  2000  120A  158A  	fcall	stringdir
  4530  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  4531  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  4532  0F8D  00A6               	movwf	___ftmul@f1^(0+128)
  4533  0F8E  160A  118A  2000  120A  158A  	fcall	stringdir
  4534  0F93  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4535  0F94  160A  118A  2000  120A  158A  	fcall	stringdir
  4536  0F99  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4537  0F9A  3003               	movlw	3
  4538  0F9B  00BA               	movwf	(??_scale+1)^(0+128)
  4539  0F9C  083A               	movf	(??_scale+1)^(0+128),w
  4540  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0F9E  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0F9F  00C2               	movwf	___bmul@multiplicand
  4543  0FA0  300A               	movlw	10
  4544  0FA1  00BD               	movwf	___awdiv@divisor
  4545  0FA2  3000               	movlw	0
  4546  0FA3  00BE               	movwf	___awdiv@divisor+1
  4547  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  4548  0FA5  1303               	bcf	3,6	;RP1=0, select bank1
  4549  0FA6  083E               	movf	scale@scl^(0+128),w
  4550  0FA7  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0FA8  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0FA9  00BF               	movwf	___awdiv@dividend
  4553  0FAA  01C0               	clrf	___awdiv@dividend+1
  4554  0FAB  1BBF               	btfsc	___awdiv@dividend,7
  4555  0FAC  03C0               	decf	___awdiv@dividend+1,f
  4556  0FAD  160A  158A  2782  120A  158A  	fcall	___awdiv
  4557  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  4558  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  4559  0FB4  083D               	movf	?___awdiv,w
  4560  0FB5  3E09               	addlw	9
  4561  0FB6  160A  158A  2346  120A  158A  	fcall	___bmul
  4562  0FBB  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4563  0FBC  0084               	movwf	4
  4564  0FBD  160A  118A  2000  120A  158A  	fcall	stringdir
  4565  0FC2  1683               	bsf	3,5	;RP0=1, select bank1
  4566  0FC3  1303               	bcf	3,6	;RP1=0, select bank1
  4567  0FC4  00A9               	movwf	___ftmul@f2^(0+128)
  4568  0FC5  160A  118A  2000  120A  158A  	fcall	stringdir
  4569  0FCA  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4570  0FCB  160A  118A  2000  120A  158A  	fcall	stringdir
  4571  0FD0  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4572  0FD1  160A  118A  2236   	fcall	___ftmul
  4573  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  4574  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  4575  0FD6  0826               	movf	?___ftmul^(0+128),w
  4576  0FD7  00B6               	movwf	?_scale^(0+128)
  4577  0FD8  0827               	movf	(?___ftmul+1)^(0+128),w
  4578  0FD9  00B7               	movwf	(?_scale+1)^(0+128)
  4579  0FDA  0828               	movf	(?___ftmul+2)^(0+128),w
  4580  0FDB  00B8               	movwf	(?_scale+2)^(0+128)
  4581  0FDC  0008               	return
  4582  0FDD                     l3699:	
  4583                           
  4584                           ;doprnt.c: 440: return _powers_[scl];
  4585  0FDD  3003               	movlw	3
  4586  0FDE  00B9               	movwf	??_scale^(0+128)
  4587  0FDF  0839               	movf	??_scale^(0+128),w
  4588  0FE0  1283               	bcf	3,5	;RP0=0, select bank0
  4589  0FE1  1303               	bcf	3,6	;RP1=0, select bank0
  4590  0FE2  00C2               	movwf	___bmul@multiplicand
  4591  0FE3  1683               	bsf	3,5	;RP0=1, select bank1
  4592  0FE4  1303               	bcf	3,6	;RP1=0, select bank1
  4593  0FE5  083E               	movf	scale@scl^(0+128),w
  4594  0FE6  160A  158A  2346  120A  158A  	fcall	___bmul
  4595  0FEB  3E29               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4596  0FEC  0084               	movwf	4
  4597  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  4598  0FF2  1683               	bsf	3,5	;RP0=1, select bank1
  4599  0FF3  1303               	bcf	3,6	;RP1=0, select bank1
  4600  0FF4  00B6               	movwf	?_scale^(0+128)
  4601  0FF5  160A  118A  2000  120A  158A  	fcall	stringdir
  4602  0FFA  00B7               	movwf	(?_scale+1)^(0+128)
  4603  0FFB  160A  118A  2000   	fcall	stringdir
  4604  0FFE  00B8               	movwf	(?_scale+2)^(0+128)
  4605  0FFF  0008               	return
  4606  1000                     __end_of_scale:	
  4607                           
  4608                           	psect	text5
  4609  1AF5                     __ptext5:	
  4610 ;; *************** function _isdigit *****************
  4611 ;; Defined at:
  4612 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  c               1    wreg     unsigned char 
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;  c               1   23[BANK0 ] unsigned char 
  4617 ;; Return value:  Size  Location     Type
  4618 ;;		None               void
  4619 ;; Registers used:
  4620 ;;		wreg, status,2, status,0
  4621 ;; Tracked objects:
  4622 ;;		On entry : 0/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4626 ;;      Params:         0       0       0       0       0
  4627 ;;      Locals:         0       2       0       0       0
  4628 ;;      Temps:          0       0       0       0       0
  4629 ;;      Totals:         0       2       0       0       0
  4630 ;;Total ram usage:        2 bytes
  4631 ;; Hardware stack levels used:    1
  4632 ;; Hardware stack levels required when called:    3
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_sprintf
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _isdigit
  4642  1AF5                     _isdigit:	
  4643                           
  4644                           ;incstack = 0
  4645                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4646                           ;isdigit@c stored from wreg
  4647  1AF5  1283               	bcf	3,5	;RP0=0, select bank0
  4648  1AF6  1303               	bcf	3,6	;RP1=0, select bank0
  4649  1AF7  00B7               	movwf	isdigit@c
  4650  1AF8  01B6               	clrf	_isdigit$609
  4651  1AF9  303A               	movlw	58
  4652  1AFA  0237               	subwf	isdigit@c,w
  4653  1AFB  1803               	skipnc
  4654  1AFC  2B03               	goto	l3711
  4655  1AFD  3030               	movlw	48
  4656  1AFE  0237               	subwf	isdigit@c,w
  4657  1AFF  1C03               	skipc
  4658  1B00  2B03               	goto	l3711
  4659  1B01  01B6               	clrf	_isdigit$609
  4660  1B02  0AB6               	incf	_isdigit$609,f
  4661  1B03                     l3711:	
  4662  1B03  0C36               	rrf	_isdigit$609,w
  4663  1B04  0008               	return
  4664  1B05                     __end_of_isdigit:	
  4665                           
  4666                           	psect	text6
  4667  08C7                     __ptext6:	
  4668 ;; *************** function _fround *****************
  4669 ;; Defined at:
  4670 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  prec            1    wreg     unsigned char 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  prec            1   37[BANK1 ] unsigned char 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  3   22[BANK1 ] unsigned char 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4684 ;;      Params:         0       0       3       0       0
  4685 ;;      Locals:         0       0       7       0       0
  4686 ;;      Temps:          0       0       6       0       0
  4687 ;;      Totals:         0       0      16       0       0
  4688 ;;Total ram usage:       16 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:    5
  4691 ;; This function calls:
  4692 ;;		___awdiv
  4693 ;;		___awmod
  4694 ;;		___bmul
  4695 ;;		___ftmul
  4696 ;; This function is called by:
  4697 ;;		_sprintf
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           
  4702                           ;psect for function _fround
  4703  08C7                     _fround:	
  4704                           
  4705                           ;incstack = 0
  4706 ;; using string table level
  4707                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4708                           ;fround@prec stored from wreg
  4709  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  4710  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  4711  08C9  00C5               	movwf	fround@prec^(0+128)
  4712                           
  4713                           ;doprnt.c: 413: if(prec>=110)
  4714  08CA  306E               	movlw	110
  4715  08CB  0245               	subwf	fround@prec^(0+128),w
  4716  08CC  1C03               	skipc
  4717  08CD  29CB               	goto	l3651
  4718                           
  4719                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4720  08CE  3003               	movlw	3
  4721  08CF  00B9               	movwf	??_fround^(0+128)
  4722  08D0  0839               	movf	??_fround^(0+128),w
  4723  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  4724  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  4725  08D3  00C2               	movwf	___bmul@multiplicand
  4726  08D4  300A               	movlw	10
  4727  08D5  00BD               	movwf	___awdiv@divisor
  4728  08D6  3000               	movlw	0
  4729  08D7  00BE               	movwf	___awdiv@divisor+1
  4730  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  4731  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  4732  08DA  0845               	movf	fround@prec^(0+128),w
  4733  08DB  00BA               	movwf	(??_fround+1)^(0+128)
  4734  08DC  01BB               	clrf	((??_fround+1)^(0+128)+1)
  4735  08DD  083A               	movf	(??_fround+1)^(0+128),w
  4736  08DE  1283               	bcf	3,5	;RP0=0, select bank0
  4737  08DF  1303               	bcf	3,6	;RP1=0, select bank0
  4738  08E0  00B8               	movwf	___awmod@dividend
  4739  08E1  1683               	bsf	3,5	;RP0=1, select bank1
  4740  08E2  1303               	bcf	3,6	;RP1=0, select bank1
  4741  08E3  083B               	movf	(??_fround+2)^(0+128),w
  4742  08E4  1283               	bcf	3,5	;RP0=0, select bank0
  4743  08E5  1303               	bcf	3,6	;RP1=0, select bank0
  4744  08E6  00B9               	movwf	___awmod@dividend+1
  4745  08E7  3064               	movlw	100
  4746  08E8  00B6               	movwf	___awmod@divisor
  4747  08E9  3000               	movlw	0
  4748  08EA  00B7               	movwf	___awmod@divisor+1
  4749  08EB  160A  158A  249D  120A  158A  	fcall	___awmod
  4750  08F0  1283               	bcf	3,5	;RP0=0, select bank0
  4751  08F1  1303               	bcf	3,6	;RP1=0, select bank0
  4752  08F2  0837               	movf	?___awmod+1,w
  4753  08F3  00C0               	movwf	___awdiv@dividend+1
  4754  08F4  0836               	movf	?___awmod,w
  4755  08F5  00BF               	movwf	___awdiv@dividend
  4756  08F6  160A  158A  2782  120A  158A  	fcall	___awdiv
  4757  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  4758  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  4759  08FD  083D               	movf	?___awdiv,w
  4760  08FE  3E09               	addlw	9
  4761  08FF  160A  158A  2346  120A  158A  	fcall	___bmul
  4762  0904  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4763  0905  0084               	movwf	4
  4764  0906  160A  118A  2000  120A  158A  	fcall	stringdir
  4765  090B  1683               	bsf	3,5	;RP0=1, select bank1
  4766  090C  1303               	bcf	3,6	;RP1=0, select bank1
  4767  090D  00A6               	movwf	___ftmul@f1^(0+128)
  4768  090E  160A  118A  2000  120A  158A  	fcall	stringdir
  4769  0913  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4770  0914  160A  118A  2000  120A  158A  	fcall	stringdir
  4771  0919  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4772  091A  3003               	movlw	3
  4773  091B  00BC               	movwf	(??_fround+3)^(0+128)
  4774  091C  083C               	movf	(??_fround+3)^(0+128),w
  4775  091D  1283               	bcf	3,5	;RP0=0, select bank0
  4776  091E  1303               	bcf	3,6	;RP1=0, select bank0
  4777  091F  00C2               	movwf	___bmul@multiplicand
  4778  0920  3064               	movlw	100
  4779  0921  00BD               	movwf	___awdiv@divisor
  4780  0922  3000               	movlw	0
  4781  0923  00BE               	movwf	___awdiv@divisor+1
  4782  0924  1683               	bsf	3,5	;RP0=1, select bank1
  4783  0925  1303               	bcf	3,6	;RP1=0, select bank1
  4784  0926  0845               	movf	fround@prec^(0+128),w
  4785  0927  00BD               	movwf	(??_fround+4)^(0+128)
  4786  0928  01BE               	clrf	((??_fround+4)^(0+128)+1)
  4787  0929  083D               	movf	(??_fround+4)^(0+128),w
  4788  092A  1283               	bcf	3,5	;RP0=0, select bank0
  4789  092B  1303               	bcf	3,6	;RP1=0, select bank0
  4790  092C  00BF               	movwf	___awdiv@dividend
  4791  092D  1683               	bsf	3,5	;RP0=1, select bank1
  4792  092E  1303               	bcf	3,6	;RP1=0, select bank1
  4793  092F  083E               	movf	(??_fround+5)^(0+128),w
  4794  0930  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0931  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0932  00C0               	movwf	___awdiv@dividend+1
  4797  0933  160A  158A  2782  120A  158A  	fcall	___awdiv
  4798  0938  1283               	bcf	3,5	;RP0=0, select bank0
  4799  0939  1303               	bcf	3,6	;RP1=0, select bank0
  4800  093A  083D               	movf	?___awdiv,w
  4801  093B  3E12               	addlw	18
  4802  093C  160A  158A  2346  120A  158A  	fcall	___bmul
  4803  0941  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4804  0942  0084               	movwf	4
  4805  0943  160A  118A  2000  120A  158A  	fcall	stringdir
  4806  0948  1683               	bsf	3,5	;RP0=1, select bank1
  4807  0949  1303               	bcf	3,6	;RP1=0, select bank1
  4808  094A  00A9               	movwf	___ftmul@f2^(0+128)
  4809  094B  160A  118A  2000  120A  158A  	fcall	stringdir
  4810  0950  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4811  0951  160A  118A  2000  120A  158A  	fcall	stringdir
  4812  0956  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4813  0957  160A  118A  2236  120A  158A  	fcall	___ftmul
  4814  095C  1683               	bsf	3,5	;RP0=1, select bank1
  4815  095D  1303               	bcf	3,6	;RP1=0, select bank1
  4816  095E  0826               	movf	?___ftmul^(0+128),w
  4817  095F  00C2               	movwf	_fround$817^(0+128)
  4818  0960  0827               	movf	(?___ftmul+1)^(0+128),w
  4819  0961  00C3               	movwf	(_fround$817+1)^(0+128)
  4820  0962  0828               	movf	(?___ftmul+2)^(0+128),w
  4821  0963  00C4               	movwf	(_fround$817+2)^(0+128)
  4822                           
  4823                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4824  0964  3003               	movlw	3
  4825  0965  00B9               	movwf	??_fround^(0+128)
  4826  0966  0839               	movf	??_fround^(0+128),w
  4827  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4828  0968  1303               	bcf	3,6	;RP1=0, select bank0
  4829  0969  00C2               	movwf	___bmul@multiplicand
  4830  096A  1683               	bsf	3,5	;RP0=1, select bank1
  4831  096B  1303               	bcf	3,6	;RP1=0, select bank1
  4832  096C  0845               	movf	fround@prec^(0+128),w
  4833  096D  00BA               	movwf	(??_fround+1)^(0+128)
  4834  096E  01BB               	clrf	((??_fround+1)^(0+128)+1)
  4835  096F  083A               	movf	(??_fround+1)^(0+128),w
  4836  0970  1283               	bcf	3,5	;RP0=0, select bank0
  4837  0971  1303               	bcf	3,6	;RP1=0, select bank0
  4838  0972  00B8               	movwf	___awmod@dividend
  4839  0973  1683               	bsf	3,5	;RP0=1, select bank1
  4840  0974  1303               	bcf	3,6	;RP1=0, select bank1
  4841  0975  083B               	movf	(??_fround+2)^(0+128),w
  4842  0976  1283               	bcf	3,5	;RP0=0, select bank0
  4843  0977  1303               	bcf	3,6	;RP1=0, select bank0
  4844  0978  00B9               	movwf	___awmod@dividend+1
  4845  0979  300A               	movlw	10
  4846  097A  00B6               	movwf	___awmod@divisor
  4847  097B  3000               	movlw	0
  4848  097C  00B7               	movwf	___awmod@divisor+1
  4849  097D  160A  158A  249D  120A  158A  	fcall	___awmod
  4850  0982  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0983  1303               	bcf	3,6	;RP1=0, select bank0
  4852  0984  0836               	movf	?___awmod,w
  4853  0985  160A  158A  2346  120A  158A  	fcall	___bmul
  4854  098A  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4855  098B  0084               	movwf	4
  4856  098C  160A  118A  2000  120A  158A  	fcall	stringdir
  4857  0991  1683               	bsf	3,5	;RP0=1, select bank1
  4858  0992  1303               	bcf	3,6	;RP1=0, select bank1
  4859  0993  00A6               	movwf	___ftmul@f1^(0+128)
  4860  0994  160A  118A  2000  120A  158A  	fcall	stringdir
  4861  0999  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4862  099A  160A  118A  2000  120A  158A  	fcall	stringdir
  4863  099F  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4864  09A0  0842               	movf	_fround$817^(0+128),w
  4865  09A1  00A9               	movwf	___ftmul@f2^(0+128)
  4866  09A2  0843               	movf	(_fround$817+1)^(0+128),w
  4867  09A3  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4868  09A4  0844               	movf	(_fround$817+2)^(0+128),w
  4869  09A5  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4870  09A6  160A  118A  2236  120A  158A  	fcall	___ftmul
  4871  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  4872  09AC  1303               	bcf	3,6	;RP1=0, select bank1
  4873  09AD  0826               	movf	?___ftmul^(0+128),w
  4874  09AE  00BF               	movwf	_fround$818^(0+128)
  4875  09AF  0827               	movf	(?___ftmul+1)^(0+128),w
  4876  09B0  00C0               	movwf	(_fround$818+1)^(0+128)
  4877  09B1  0828               	movf	(?___ftmul+2)^(0+128),w
  4878  09B2  00C1               	movwf	(_fround$818+2)^(0+128)
  4879                           
  4880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4881  09B3  3000               	movlw	0
  4882  09B4  00A6               	movwf	___ftmul@f1^(0+128)
  4883  09B5  3000               	movlw	0
  4884  09B6  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4885  09B7  303F               	movlw	63
  4886  09B8  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4887  09B9  083F               	movf	_fround$818^(0+128),w
  4888  09BA  00A9               	movwf	___ftmul@f2^(0+128)
  4889  09BB  0840               	movf	(_fround$818+1)^(0+128),w
  4890  09BC  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4891  09BD  0841               	movf	(_fround$818+2)^(0+128),w
  4892  09BE  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4893  09BF  160A  118A  2236   	fcall	___ftmul
  4894  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  4895  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  4896  09C4  0826               	movf	?___ftmul^(0+128),w
  4897  09C5  00B6               	movwf	?_fround^(0+128)
  4898  09C6  0827               	movf	(?___ftmul+1)^(0+128),w
  4899  09C7  00B7               	movwf	(?_fround+1)^(0+128)
  4900  09C8  0828               	movf	(?___ftmul+2)^(0+128),w
  4901  09C9  00B8               	movwf	(?_fround+2)^(0+128)
  4902  09CA  0008               	return
  4903  09CB                     l3651:	
  4904                           
  4905                           ;doprnt.c: 415: else if(prec > 10)
  4906  09CB  300B               	movlw	11
  4907  09CC  0245               	subwf	fround@prec^(0+128),w
  4908  09CD  1C03               	skipc
  4909  09CE  2A6D               	goto	l3659
  4910                           
  4911                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4912  09CF  3003               	movlw	3
  4913  09D0  00B9               	movwf	??_fround^(0+128)
  4914  09D1  0839               	movf	??_fround^(0+128),w
  4915  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  4916  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  4917  09D4  00C2               	movwf	___bmul@multiplicand
  4918  09D5  1683               	bsf	3,5	;RP0=1, select bank1
  4919  09D6  1303               	bcf	3,6	;RP1=0, select bank1
  4920  09D7  0845               	movf	fround@prec^(0+128),w
  4921  09D8  00BA               	movwf	(??_fround+1)^(0+128)
  4922  09D9  01BB               	clrf	((??_fround+1)^(0+128)+1)
  4923  09DA  083A               	movf	(??_fround+1)^(0+128),w
  4924  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  4925  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  4926  09DD  00B8               	movwf	___awmod@dividend
  4927  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  4928  09DF  1303               	bcf	3,6	;RP1=0, select bank1
  4929  09E0  083B               	movf	(??_fround+2)^(0+128),w
  4930  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  4931  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  4932  09E3  00B9               	movwf	___awmod@dividend+1
  4933  09E4  300A               	movlw	10
  4934  09E5  00B6               	movwf	___awmod@divisor
  4935  09E6  3000               	movlw	0
  4936  09E7  00B7               	movwf	___awmod@divisor+1
  4937  09E8  160A  158A  249D  120A  158A  	fcall	___awmod
  4938  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  4939  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  4940  09EF  0836               	movf	?___awmod,w
  4941  09F0  160A  158A  2346  120A  158A  	fcall	___bmul
  4942  09F5  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4943  09F6  0084               	movwf	4
  4944  09F7  160A  118A  2000  120A  158A  	fcall	stringdir
  4945  09FC  1683               	bsf	3,5	;RP0=1, select bank1
  4946  09FD  1303               	bcf	3,6	;RP1=0, select bank1
  4947  09FE  00A6               	movwf	___ftmul@f1^(0+128)
  4948  09FF  160A  118A  2000  120A  158A  	fcall	stringdir
  4949  0A04  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  4950  0A05  160A  118A  2000  120A  158A  	fcall	stringdir
  4951  0A0A  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  4952  0A0B  3003               	movlw	3
  4953  0A0C  00BC               	movwf	(??_fround+3)^(0+128)
  4954  0A0D  083C               	movf	(??_fround+3)^(0+128),w
  4955  0A0E  1283               	bcf	3,5	;RP0=0, select bank0
  4956  0A0F  1303               	bcf	3,6	;RP1=0, select bank0
  4957  0A10  00C2               	movwf	___bmul@multiplicand
  4958  0A11  300A               	movlw	10
  4959  0A12  00BD               	movwf	___awdiv@divisor
  4960  0A13  3000               	movlw	0
  4961  0A14  00BE               	movwf	___awdiv@divisor+1
  4962  0A15  1683               	bsf	3,5	;RP0=1, select bank1
  4963  0A16  1303               	bcf	3,6	;RP1=0, select bank1
  4964  0A17  0845               	movf	fround@prec^(0+128),w
  4965  0A18  00BD               	movwf	(??_fround+4)^(0+128)
  4966  0A19  01BE               	clrf	((??_fround+4)^(0+128)+1)
  4967  0A1A  083D               	movf	(??_fround+4)^(0+128),w
  4968  0A1B  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0A1C  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0A1D  00BF               	movwf	___awdiv@dividend
  4971  0A1E  1683               	bsf	3,5	;RP0=1, select bank1
  4972  0A1F  1303               	bcf	3,6	;RP1=0, select bank1
  4973  0A20  083E               	movf	(??_fround+5)^(0+128),w
  4974  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  4975  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  4976  0A23  00C0               	movwf	___awdiv@dividend+1
  4977  0A24  160A  158A  2782  120A  158A  	fcall	___awdiv
  4978  0A29  1283               	bcf	3,5	;RP0=0, select bank0
  4979  0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  4980  0A2B  083D               	movf	?___awdiv,w
  4981  0A2C  3E09               	addlw	9
  4982  0A2D  160A  158A  2346  120A  158A  	fcall	___bmul
  4983  0A32  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4984  0A33  0084               	movwf	4
  4985  0A34  160A  118A  2000  120A  158A  	fcall	stringdir
  4986  0A39  1683               	bsf	3,5	;RP0=1, select bank1
  4987  0A3A  1303               	bcf	3,6	;RP1=0, select bank1
  4988  0A3B  00A9               	movwf	___ftmul@f2^(0+128)
  4989  0A3C  160A  118A  2000  120A  158A  	fcall	stringdir
  4990  0A41  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  4991  0A42  160A  118A  2000  120A  158A  	fcall	stringdir
  4992  0A47  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  4993  0A48  160A  118A  2236  120A  158A  	fcall	___ftmul
  4994  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  4995  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  4996  0A4F  0826               	movf	?___ftmul^(0+128),w
  4997  0A50  00C2               	movwf	_fround$817^(0+128)
  4998  0A51  0827               	movf	(?___ftmul+1)^(0+128),w
  4999  0A52  00C3               	movwf	(_fround$817+1)^(0+128)
  5000  0A53  0828               	movf	(?___ftmul+2)^(0+128),w
  5001  0A54  00C4               	movwf	(_fround$817+2)^(0+128)
  5002                           
  5003                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  5004  0A55  3000               	movlw	0
  5005  0A56  00A6               	movwf	___ftmul@f1^(0+128)
  5006  0A57  3000               	movlw	0
  5007  0A58  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  5008  0A59  303F               	movlw	63
  5009  0A5A  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  5010  0A5B  0842               	movf	_fround$817^(0+128),w
  5011  0A5C  00A9               	movwf	___ftmul@f2^(0+128)
  5012  0A5D  0843               	movf	(_fround$817+1)^(0+128),w
  5013  0A5E  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  5014  0A5F  0844               	movf	(_fround$817+2)^(0+128),w
  5015  0A60  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  5016  0A61  160A  118A  2236   	fcall	___ftmul
  5017  0A64  1683               	bsf	3,5	;RP0=1, select bank1
  5018  0A65  1303               	bcf	3,6	;RP1=0, select bank1
  5019  0A66  0826               	movf	?___ftmul^(0+128),w
  5020  0A67  00B6               	movwf	?_fround^(0+128)
  5021  0A68  0827               	movf	(?___ftmul+1)^(0+128),w
  5022  0A69  00B7               	movwf	(?_fround+1)^(0+128)
  5023  0A6A  0828               	movf	(?___ftmul+2)^(0+128),w
  5024  0A6B  00B8               	movwf	(?_fround+2)^(0+128)
  5025  0A6C  0008               	return
  5026  0A6D                     l3659:	
  5027                           
  5028                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5029  0A6D  3000               	movlw	0
  5030  0A6E  00A6               	movwf	___ftmul@f1^(0+128)
  5031  0A6F  3000               	movlw	0
  5032  0A70  00A7               	movwf	(___ftmul@f1+1)^(0+128)
  5033  0A71  303F               	movlw	63
  5034  0A72  00A8               	movwf	(___ftmul@f1+2)^(0+128)
  5035  0A73  3003               	movlw	3
  5036  0A74  00B9               	movwf	??_fround^(0+128)
  5037  0A75  0839               	movf	??_fround^(0+128),w
  5038  0A76  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0A77  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0A78  00C2               	movwf	___bmul@multiplicand
  5041  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  5042  0A7A  1303               	bcf	3,6	;RP1=0, select bank1
  5043  0A7B  0845               	movf	fround@prec^(0+128),w
  5044  0A7C  160A  158A  2346  120A  158A  	fcall	___bmul
  5045  0A81  3E50               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5046  0A82  0084               	movwf	4
  5047  0A83  160A  118A  2000  120A  158A  	fcall	stringdir
  5048  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  5049  0A89  1303               	bcf	3,6	;RP1=0, select bank1
  5050  0A8A  00A9               	movwf	___ftmul@f2^(0+128)
  5051  0A8B  160A  118A  2000  120A  158A  	fcall	stringdir
  5052  0A90  00AA               	movwf	(___ftmul@f2+1)^(0+128)
  5053  0A91  160A  118A  2000  120A  158A  	fcall	stringdir
  5054  0A96  00AB               	movwf	(___ftmul@f2+2)^(0+128)
  5055  0A97  160A  118A  2236   	fcall	___ftmul
  5056  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  5057  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  5058  0A9C  0826               	movf	?___ftmul^(0+128),w
  5059  0A9D  00B6               	movwf	?_fround^(0+128)
  5060  0A9E  0827               	movf	(?___ftmul+1)^(0+128),w
  5061  0A9F  00B7               	movwf	(?_fround+1)^(0+128)
  5062  0AA0  0828               	movf	(?___ftmul+2)^(0+128),w
  5063  0AA1  00B8               	movwf	(?_fround+2)^(0+128)
  5064  0AA2  0008               	return
  5065  0AA3                     __end_of_fround:	
  5066                           
  5067                           	psect	text7
  5068  1236                     __ptext7:	
  5069 ;; *************** function ___ftmul *****************
  5070 ;; Defined at:
  5071 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  f1              3    6[BANK1 ] float 
  5074 ;;  f2              3    9[BANK1 ] float 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  f3_as_produc    3   17[BANK1 ] unsigned um
  5077 ;;  sign            1   21[BANK1 ] unsigned char 
  5078 ;;  cntr            1   20[BANK1 ] unsigned char 
  5079 ;;  exp             1   16[BANK1 ] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  3    6[BANK1 ] float 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5089 ;;      Params:         0       0       6       0       0
  5090 ;;      Locals:         0       0       6       0       0
  5091 ;;      Temps:          0       0       4       0       0
  5092 ;;      Totals:         0       0      16       0       0
  5093 ;;Total ram usage:       16 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    4
  5096 ;; This function calls:
  5097 ;;		___ftpack
  5098 ;; This function is called by:
  5099 ;;		_fround
  5100 ;;		_scale
  5101 ;;		_sprintf
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function ___ftmul
  5107  1236                     ___ftmul:	
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5111  1236  1683               	bsf	3,5	;RP0=1, select bank1
  5112  1237  1303               	bcf	3,6	;RP1=0, select bank1
  5113  1238  0826               	movf	___ftmul@f1^(0+128),w
  5114  1239  00AC               	movwf	??___ftmul^(0+128)
  5115  123A  0827               	movf	(___ftmul@f1+1)^(0+128),w
  5116  123B  00AD               	movwf	(??___ftmul^(0+128)+1)
  5117  123C  0828               	movf	(___ftmul@f1+2)^(0+128),w
  5118  123D  00AE               	movwf	(??___ftmul^(0+128)+2)
  5119  123E  1003               	clrc
  5120  123F  0D2D               	rlf	(??___ftmul^(0+128)+1),w
  5121  1240  0D2E               	rlf	(??___ftmul^(0+128)+2),w
  5122  1241  00AF               	movwf	(??___ftmul+3)^(0+128)
  5123  1242  082F               	movf	(??___ftmul+3)^(0+128),w
  5124  1243  00B0               	movwf	___ftmul@exp^(0+128)
  5125  1244  0830               	movf	___ftmul@exp^(0+128),w
  5126  1245  1D03               	btfss	3,2
  5127  1246  2A4E               	goto	l3597
  5128  1247  3000               	movlw	0
  5129  1248  00A6               	movwf	?___ftmul^(0+128)
  5130  1249  3000               	movlw	0
  5131  124A  00A7               	movwf	(?___ftmul+1)^(0+128)
  5132  124B  3000               	movlw	0
  5133  124C  00A8               	movwf	(?___ftmul+2)^(0+128)
  5134  124D  0008               	return
  5135  124E                     l3597:	
  5136  124E  0829               	movf	___ftmul@f2^(0+128),w
  5137  124F  00AC               	movwf	??___ftmul^(0+128)
  5138  1250  082A               	movf	(___ftmul@f2+1)^(0+128),w
  5139  1251  00AD               	movwf	(??___ftmul^(0+128)+1)
  5140  1252  082B               	movf	(___ftmul@f2+2)^(0+128),w
  5141  1253  00AE               	movwf	(??___ftmul^(0+128)+2)
  5142  1254  1003               	clrc
  5143  1255  0D2D               	rlf	(??___ftmul^(0+128)+1),w
  5144  1256  0D2E               	rlf	(??___ftmul^(0+128)+2),w
  5145  1257  00AF               	movwf	(??___ftmul+3)^(0+128)
  5146  1258  082F               	movf	(??___ftmul+3)^(0+128),w
  5147  1259  00B5               	movwf	___ftmul@sign^(0+128)
  5148  125A  0835               	movf	___ftmul@sign^(0+128),w
  5149  125B  1D03               	btfss	3,2
  5150  125C  2A64               	goto	l3603
  5151  125D  3000               	movlw	0
  5152  125E  00A6               	movwf	?___ftmul^(0+128)
  5153  125F  3000               	movlw	0
  5154  1260  00A7               	movwf	(?___ftmul+1)^(0+128)
  5155  1261  3000               	movlw	0
  5156  1262  00A8               	movwf	(?___ftmul+2)^(0+128)
  5157  1263  0008               	return
  5158  1264                     l3603:	
  5159  1264  0835               	movf	___ftmul@sign^(0+128),w
  5160  1265  3E7B               	addlw	123
  5161  1266  00AC               	movwf	??___ftmul^(0+128)
  5162  1267  082C               	movf	??___ftmul^(0+128),w
  5163  1268  07B0               	addwf	___ftmul@exp^(0+128),f
  5164  1269  0826               	movf	___ftmul@f1^(0+128),w
  5165  126A  00AC               	movwf	??___ftmul^(0+128)
  5166  126B  0827               	movf	(___ftmul@f1+1)^(0+128),w
  5167  126C  00AD               	movwf	(??___ftmul^(0+128)+1)
  5168  126D  0828               	movf	(___ftmul@f1+2)^(0+128),w
  5169  126E  00AE               	movwf	(??___ftmul^(0+128)+2)
  5170  126F  3010               	movlw	16
  5171  1270                     u5285:	
  5172  1270  1003               	clrc
  5173  1271  0CAE               	rrf	(??___ftmul^(0+128)+2),f
  5174  1272  0CAD               	rrf	(??___ftmul^(0+128)+1),f
  5175  1273  0CAC               	rrf	??___ftmul^(0+128),f
  5176  1274  3EFF               	addlw	-1
  5177  1275  1D03               	skipz
  5178  1276  2A70               	goto	u5285
  5179  1277  082C               	movf	??___ftmul^(0+128),w
  5180  1278  00AF               	movwf	(??___ftmul+3)^(0+128)
  5181  1279  082F               	movf	(??___ftmul+3)^(0+128),w
  5182  127A  00B5               	movwf	___ftmul@sign^(0+128)
  5183  127B  0829               	movf	___ftmul@f2^(0+128),w
  5184  127C  00AC               	movwf	??___ftmul^(0+128)
  5185  127D  082A               	movf	(___ftmul@f2+1)^(0+128),w
  5186  127E  00AD               	movwf	(??___ftmul^(0+128)+1)
  5187  127F  082B               	movf	(___ftmul@f2+2)^(0+128),w
  5188  1280  00AE               	movwf	(??___ftmul^(0+128)+2)
  5189  1281  3010               	movlw	16
  5190  1282                     u5295:	
  5191  1282  1003               	clrc
  5192  1283  0CAE               	rrf	(??___ftmul^(0+128)+2),f
  5193  1284  0CAD               	rrf	(??___ftmul^(0+128)+1),f
  5194  1285  0CAC               	rrf	??___ftmul^(0+128),f
  5195  1286  3EFF               	addlw	-1
  5196  1287  1D03               	skipz
  5197  1288  2A82               	goto	u5295
  5198  1289  082C               	movf	??___ftmul^(0+128),w
  5199  128A  00AF               	movwf	(??___ftmul+3)^(0+128)
  5200  128B  082F               	movf	(??___ftmul+3)^(0+128),w
  5201  128C  06B5               	xorwf	___ftmul@sign^(0+128),f
  5202  128D  3080               	movlw	128
  5203  128E  00AC               	movwf	??___ftmul^(0+128)
  5204  128F  082C               	movf	??___ftmul^(0+128),w
  5205  1290  05B5               	andwf	___ftmul@sign^(0+128),f
  5206  1291  17A7               	bsf	(___ftmul@f1^(0+128)+1),7
  5207  1292  17AA               	bsf	(___ftmul@f2^(0+128)+1),7
  5208  1293  30FF               	movlw	255
  5209  1294  05A9               	andwf	___ftmul@f2^(0+128),f
  5210  1295  30FF               	movlw	255
  5211  1296  05AA               	andwf	(___ftmul@f2+1)^(0+128),f
  5212  1297  3000               	movlw	0
  5213  1298  05AB               	andwf	(___ftmul@f2+2)^(0+128),f
  5214  1299  3000               	movlw	0
  5215  129A  00B1               	movwf	___ftmul@f3_as_product^(0+128)
  5216  129B  3000               	movlw	0
  5217  129C  00B2               	movwf	(___ftmul@f3_as_product+1)^(0+128)
  5218  129D  3000               	movlw	0
  5219  129E  00B3               	movwf	(___ftmul@f3_as_product+2)^(0+128)
  5220  129F  3007               	movlw	7
  5221  12A0  00AC               	movwf	??___ftmul^(0+128)
  5222  12A1  082C               	movf	??___ftmul^(0+128),w
  5223  12A2  00B4               	movwf	___ftmul@cntr^(0+128)
  5224  12A3                     l3615:	
  5225  12A3  1C26               	btfss	___ftmul@f1^(0+128),0
  5226  12A4  2AB3               	goto	l3619
  5227  12A5  0829               	movf	___ftmul@f2^(0+128),w
  5228  12A6  07B1               	addwf	___ftmul@f3_as_product^(0+128),f
  5229  12A7  082A               	movf	(___ftmul@f2+1)^(0+128),w
  5230  12A8  1103               	clrz
  5231  12A9  1803               	skipnc
  5232  12AA  0A2A               	incf	(___ftmul@f2+1)^(0+128),w
  5233  12AB  1D03               	btfss	3,2
  5234  12AC  07B2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  5235  12AD  082B               	movf	(___ftmul@f2+2)^(0+128),w
  5236  12AE  1103               	clrz
  5237  12AF  1803               	skipnc
  5238  12B0  0A2B               	incf	(___ftmul@f2+2)^(0+128),w
  5239  12B1  1D03               	btfss	3,2
  5240  12B2  07B3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  5241  12B3                     l3619:	
  5242  12B3  3001               	movlw	1
  5243  12B4                     u5325:	
  5244  12B4  1003               	clrc
  5245  12B5  0CA8               	rrf	(___ftmul@f1+2)^(0+128),f
  5246  12B6  0CA7               	rrf	(___ftmul@f1+1)^(0+128),f
  5247  12B7  0CA6               	rrf	___ftmul@f1^(0+128),f
  5248  12B8  3EFF               	addlw	-1
  5249  12B9  1D03               	skipz
  5250  12BA  2AB4               	goto	u5325
  5251  12BB  3001               	movlw	1
  5252  12BC                     u5335:	
  5253  12BC  1003               	clrc
  5254  12BD  0DA9               	rlf	___ftmul@f2^(0+128),f
  5255  12BE  0DAA               	rlf	(___ftmul@f2+1)^(0+128),f
  5256  12BF  0DAB               	rlf	(___ftmul@f2+2)^(0+128),f
  5257  12C0  3EFF               	addlw	-1
  5258  12C1  1D03               	skipz
  5259  12C2  2ABC               	goto	u5335
  5260  12C3  3001               	movlw	1
  5261  12C4  02B4               	subwf	___ftmul@cntr^(0+128),f
  5262  12C5  1D03               	btfss	3,2
  5263  12C6  2AA3               	goto	l3615
  5264  12C7  3009               	movlw	9
  5265  12C8  00AC               	movwf	??___ftmul^(0+128)
  5266  12C9  082C               	movf	??___ftmul^(0+128),w
  5267  12CA  00B4               	movwf	___ftmul@cntr^(0+128)
  5268  12CB                     l3627:	
  5269  12CB  1C26               	btfss	___ftmul@f1^(0+128),0
  5270  12CC  2ADB               	goto	l3631
  5271  12CD  0829               	movf	___ftmul@f2^(0+128),w
  5272  12CE  07B1               	addwf	___ftmul@f3_as_product^(0+128),f
  5273  12CF  082A               	movf	(___ftmul@f2+1)^(0+128),w
  5274  12D0  1103               	clrz
  5275  12D1  1803               	skipnc
  5276  12D2  0A2A               	incf	(___ftmul@f2+1)^(0+128),w
  5277  12D3  1D03               	btfss	3,2
  5278  12D4  07B2               	addwf	(___ftmul@f3_as_product+1)^(0+128),f
  5279  12D5  082B               	movf	(___ftmul@f2+2)^(0+128),w
  5280  12D6  1103               	clrz
  5281  12D7  1803               	skipnc
  5282  12D8  0A2B               	incf	(___ftmul@f2+2)^(0+128),w
  5283  12D9  1D03               	btfss	3,2
  5284  12DA  07B3               	addwf	(___ftmul@f3_as_product+2)^(0+128),f
  5285  12DB                     l3631:	
  5286  12DB  3001               	movlw	1
  5287  12DC                     u5375:	
  5288  12DC  1003               	clrc
  5289  12DD  0CA8               	rrf	(___ftmul@f1+2)^(0+128),f
  5290  12DE  0CA7               	rrf	(___ftmul@f1+1)^(0+128),f
  5291  12DF  0CA6               	rrf	___ftmul@f1^(0+128),f
  5292  12E0  3EFF               	addlw	-1
  5293  12E1  1D03               	skipz
  5294  12E2  2ADC               	goto	u5375
  5295  12E3  3001               	movlw	1
  5296  12E4                     u5385:	
  5297  12E4  1003               	clrc
  5298  12E5  0CB3               	rrf	(___ftmul@f3_as_product+2)^(0+128),f
  5299  12E6  0CB2               	rrf	(___ftmul@f3_as_product+1)^(0+128),f
  5300  12E7  0CB1               	rrf	___ftmul@f3_as_product^(0+128),f
  5301  12E8  3EFF               	addlw	-1
  5302  12E9  1D03               	skipz
  5303  12EA  2AE4               	goto	u5385
  5304  12EB  3001               	movlw	1
  5305  12EC  02B4               	subwf	___ftmul@cntr^(0+128),f
  5306  12ED  1D03               	btfss	3,2
  5307  12EE  2ACB               	goto	l3627
  5308  12EF  0831               	movf	___ftmul@f3_as_product^(0+128),w
  5309  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  5310  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  5311  12F2  00B6               	movwf	___ftpack@arg
  5312  12F3  1683               	bsf	3,5	;RP0=1, select bank1
  5313  12F4  1303               	bcf	3,6	;RP1=0, select bank1
  5314  12F5  0832               	movf	(___ftmul@f3_as_product+1)^(0+128),w
  5315  12F6  1283               	bcf	3,5	;RP0=0, select bank0
  5316  12F7  1303               	bcf	3,6	;RP1=0, select bank0
  5317  12F8  00B7               	movwf	___ftpack@arg+1
  5318  12F9  1683               	bsf	3,5	;RP0=1, select bank1
  5319  12FA  1303               	bcf	3,6	;RP1=0, select bank1
  5320  12FB  0833               	movf	(___ftmul@f3_as_product+2)^(0+128),w
  5321  12FC  1283               	bcf	3,5	;RP0=0, select bank0
  5322  12FD  1303               	bcf	3,6	;RP1=0, select bank0
  5323  12FE  00B8               	movwf	___ftpack@arg+2
  5324  12FF  1683               	bsf	3,5	;RP0=1, select bank1
  5325  1300  1303               	bcf	3,6	;RP1=0, select bank1
  5326  1301  0830               	movf	___ftmul@exp^(0+128),w
  5327  1302  00AC               	movwf	??___ftmul^(0+128)
  5328  1303  082C               	movf	??___ftmul^(0+128),w
  5329  1304  1283               	bcf	3,5	;RP0=0, select bank0
  5330  1305  1303               	bcf	3,6	;RP1=0, select bank0
  5331  1306  00B9               	movwf	___ftpack@exp
  5332  1307  1683               	bsf	3,5	;RP0=1, select bank1
  5333  1308  1303               	bcf	3,6	;RP1=0, select bank1
  5334  1309  0835               	movf	___ftmul@sign^(0+128),w
  5335  130A  00AD               	movwf	(??___ftmul+1)^(0+128)
  5336  130B  082D               	movf	(??___ftmul+1)^(0+128),w
  5337  130C  1283               	bcf	3,5	;RP0=0, select bank0
  5338  130D  1303               	bcf	3,6	;RP1=0, select bank0
  5339  130E  00BA               	movwf	___ftpack@sign
  5340  130F  160A  158A  2714   	fcall	___ftpack
  5341  1312  1283               	bcf	3,5	;RP0=0, select bank0
  5342  1313  1303               	bcf	3,6	;RP1=0, select bank0
  5343  1314  0836               	movf	?___ftpack,w
  5344  1315  1683               	bsf	3,5	;RP0=1, select bank1
  5345  1316  1303               	bcf	3,6	;RP1=0, select bank1
  5346  1317  00A6               	movwf	?___ftmul^(0+128)
  5347  1318  1283               	bcf	3,5	;RP0=0, select bank0
  5348  1319  1303               	bcf	3,6	;RP1=0, select bank0
  5349  131A  0837               	movf	?___ftpack+1,w
  5350  131B  1683               	bsf	3,5	;RP0=1, select bank1
  5351  131C  1303               	bcf	3,6	;RP1=0, select bank1
  5352  131D  00A7               	movwf	(?___ftmul+1)^(0+128)
  5353  131E  1283               	bcf	3,5	;RP0=0, select bank0
  5354  131F  1303               	bcf	3,6	;RP1=0, select bank0
  5355  1320  0838               	movf	?___ftpack+2,w
  5356  1321  1683               	bsf	3,5	;RP0=1, select bank1
  5357  1322  1303               	bcf	3,6	;RP1=0, select bank1
  5358  1323  00A8               	movwf	(?___ftmul+2)^(0+128)
  5359  1324  0008               	return
  5360  1325                     __end_of___ftmul:	
  5361                           
  5362                           	psect	text8
  5363  1B46                     __ptext8:	
  5364 ;; *************** function ___bmul *****************
  5365 ;; Defined at:
  5366 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  multiplier      1    wreg     unsigned char 
  5369 ;;  multiplicand    1   34[BANK0 ] unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  multiplier      1    5[BANK1 ] unsigned char 
  5372 ;;  product         1    4[BANK1 ] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      unsigned char 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5382 ;;      Params:         0       1       0       0       0
  5383 ;;      Locals:         0       0       2       0       0
  5384 ;;      Temps:          0       1       0       0       0
  5385 ;;      Totals:         0       2       2       0       0
  5386 ;;Total ram usage:        4 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    3
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_fround
  5393 ;;		_scale
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           
  5398                           ;psect for function ___bmul
  5399  1B46                     ___bmul:	
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5403                           ;___bmul@multiplier stored from wreg
  5404  1B46  1683               	bsf	3,5	;RP0=1, select bank1
  5405  1B47  1303               	bcf	3,6	;RP1=0, select bank1
  5406  1B48  00A5               	movwf	___bmul@multiplier^(0+128)
  5407  1B49  01A4               	clrf	___bmul@product^(0+128)
  5408  1B4A                     l3427:	
  5409  1B4A  1C25               	btfss	___bmul@multiplier^(0+128),0
  5410  1B4B  2B54               	goto	l3431
  5411  1B4C  1283               	bcf	3,5	;RP0=0, select bank0
  5412  1B4D  1303               	bcf	3,6	;RP1=0, select bank0
  5413  1B4E  0842               	movf	___bmul@multiplicand,w
  5414  1B4F  00C3               	movwf	??___bmul
  5415  1B50  0843               	movf	??___bmul,w
  5416  1B51  1683               	bsf	3,5	;RP0=1, select bank1
  5417  1B52  1303               	bcf	3,6	;RP1=0, select bank1
  5418  1B53  07A4               	addwf	___bmul@product^(0+128),f
  5419  1B54                     l3431:	
  5420  1B54  1003               	clrc
  5421  1B55  1283               	bcf	3,5	;RP0=0, select bank0
  5422  1B56  1303               	bcf	3,6	;RP1=0, select bank0
  5423  1B57  0DC2               	rlf	___bmul@multiplicand,f
  5424  1B58  1003               	clrc
  5425  1B59  1683               	bsf	3,5	;RP0=1, select bank1
  5426  1B5A  1303               	bcf	3,6	;RP1=0, select bank1
  5427  1B5B  0CA5               	rrf	___bmul@multiplier^(0+128),f
  5428  1B5C  0825               	movf	___bmul@multiplier^(0+128),w
  5429  1B5D  1D03               	btfss	3,2
  5430  1B5E  2B4A               	goto	l3427
  5431  1B5F  0824               	movf	___bmul@product^(0+128),w
  5432  1B60  0008               	return
  5433  1B61                     __end_of___bmul:	
  5434                           
  5435                           	psect	text9
  5436  1C9D                     __ptext9:	
  5437 ;; *************** function ___awmod *****************
  5438 ;; Defined at:
  5439 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  divisor         2   22[BANK0 ] int 
  5442 ;;  dividend        2   24[BANK0 ] int 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;  sign            1   28[BANK0 ] unsigned char 
  5445 ;;  counter         1   27[BANK0 ] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  2   22[BANK0 ] int 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         0       4       0       0       0
  5456 ;;      Locals:         0       2       0       0       0
  5457 ;;      Temps:          0       1       0       0       0
  5458 ;;      Totals:         0       7       0       0       0
  5459 ;;Total ram usage:        7 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    3
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_fround
  5466 ;;		_scale
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           
  5471                           ;psect for function ___awmod
  5472  1C9D                     ___awmod:	
  5473                           
  5474                           ;incstack = 0
  5475                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5476  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  5477  1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  5478  1C9F  01BC               	clrf	___awmod@sign
  5479  1CA0  1FB9               	btfss	___awmod@dividend+1,7
  5480  1CA1  2CA9               	goto	l3491
  5481  1CA2  09B8               	comf	___awmod@dividend,f
  5482  1CA3  09B9               	comf	___awmod@dividend+1,f
  5483  1CA4  0AB8               	incf	___awmod@dividend,f
  5484  1CA5  1903               	skipnz
  5485  1CA6  0AB9               	incf	___awmod@dividend+1,f
  5486  1CA7  01BC               	clrf	___awmod@sign
  5487  1CA8  0ABC               	incf	___awmod@sign,f
  5488  1CA9                     l3491:	
  5489  1CA9  1FB7               	btfss	___awmod@divisor+1,7
  5490  1CAA  2CB0               	goto	l3495
  5491  1CAB  09B6               	comf	___awmod@divisor,f
  5492  1CAC  09B7               	comf	___awmod@divisor+1,f
  5493  1CAD  0AB6               	incf	___awmod@divisor,f
  5494  1CAE  1903               	skipnz
  5495  1CAF  0AB7               	incf	___awmod@divisor+1,f
  5496  1CB0                     l3495:	
  5497  1CB0  0836               	movf	___awmod@divisor,w
  5498  1CB1  0437               	iorwf	___awmod@divisor+1,w
  5499  1CB2  1903               	btfsc	3,2
  5500  1CB3  2CDD               	goto	l3513
  5501  1CB4  01BB               	clrf	___awmod@counter
  5502  1CB5  0ABB               	incf	___awmod@counter,f
  5503  1CB6                     l3503:	
  5504  1CB6  1BB7               	btfsc	___awmod@divisor+1,7
  5505  1CB7  2CC4               	goto	l3505
  5506  1CB8  3001               	movlw	1
  5507  1CB9                     u4965:	
  5508  1CB9  1003               	clrc
  5509  1CBA  0DB6               	rlf	___awmod@divisor,f
  5510  1CBB  0DB7               	rlf	___awmod@divisor+1,f
  5511  1CBC  3EFF               	addlw	-1
  5512  1CBD  1D03               	skipz
  5513  1CBE  2CB9               	goto	u4965
  5514  1CBF  3001               	movlw	1
  5515  1CC0  00BA               	movwf	??___awmod
  5516  1CC1  083A               	movf	??___awmod,w
  5517  1CC2  07BB               	addwf	___awmod@counter,f
  5518  1CC3  2CB6               	goto	l3503
  5519  1CC4                     l3505:	
  5520  1CC4  0837               	movf	___awmod@divisor+1,w
  5521  1CC5  0239               	subwf	___awmod@dividend+1,w
  5522  1CC6  1D03               	skipz
  5523  1CC7  2CCA               	goto	u4985
  5524  1CC8  0836               	movf	___awmod@divisor,w
  5525  1CC9  0238               	subwf	___awmod@dividend,w
  5526  1CCA                     u4985:	
  5527  1CCA  1C03               	skipc
  5528  1CCB  2CD2               	goto	l3509
  5529  1CCC  0836               	movf	___awmod@divisor,w
  5530  1CCD  02B8               	subwf	___awmod@dividend,f
  5531  1CCE  0837               	movf	___awmod@divisor+1,w
  5532  1CCF  1C03               	skipc
  5533  1CD0  03B9               	decf	___awmod@dividend+1,f
  5534  1CD1  02B9               	subwf	___awmod@dividend+1,f
  5535  1CD2                     l3509:	
  5536  1CD2  3001               	movlw	1
  5537  1CD3                     u4995:	
  5538  1CD3  1003               	clrc
  5539  1CD4  0CB7               	rrf	___awmod@divisor+1,f
  5540  1CD5  0CB6               	rrf	___awmod@divisor,f
  5541  1CD6  3EFF               	addlw	-1
  5542  1CD7  1D03               	skipz
  5543  1CD8  2CD3               	goto	u4995
  5544  1CD9  3001               	movlw	1
  5545  1CDA  02BB               	subwf	___awmod@counter,f
  5546  1CDB  1D03               	btfss	3,2
  5547  1CDC  2CC4               	goto	l3505
  5548  1CDD                     l3513:	
  5549  1CDD  083C               	movf	___awmod@sign,w
  5550  1CDE  1903               	btfsc	3,2
  5551  1CDF  2CE5               	goto	l3517
  5552  1CE0  09B8               	comf	___awmod@dividend,f
  5553  1CE1  09B9               	comf	___awmod@dividend+1,f
  5554  1CE2  0AB8               	incf	___awmod@dividend,f
  5555  1CE3  1903               	skipnz
  5556  1CE4  0AB9               	incf	___awmod@dividend+1,f
  5557  1CE5                     l3517:	
  5558  1CE5  0839               	movf	___awmod@dividend+1,w
  5559  1CE6  00B7               	movwf	?___awmod+1
  5560  1CE7  0838               	movf	___awmod@dividend,w
  5561  1CE8  00B6               	movwf	?___awmod
  5562  1CE9  0008               	return
  5563  1CEA                     __end_of___awmod:	
  5564                           
  5565                           	psect	text10
  5566  1F82                     __ptext10:	
  5567 ;; *************** function ___awdiv *****************
  5568 ;; Defined at:
  5569 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  divisor         2   29[BANK0 ] int 
  5572 ;;  dividend        2   31[BANK0 ] int 
  5573 ;; Auto vars:     Size  Location     Type
  5574 ;;  quotient        2    2[BANK1 ] int 
  5575 ;;  sign            1    1[BANK1 ] unsigned char 
  5576 ;;  counter         1    0[BANK1 ] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  2   29[BANK0 ] int 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5586 ;;      Params:         0       4       0       0       0
  5587 ;;      Locals:         0       0       4       0       0
  5588 ;;      Temps:          0       1       0       0       0
  5589 ;;      Totals:         0       5       4       0       0
  5590 ;;Total ram usage:        9 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    3
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_fround
  5597 ;;		_scale
  5598 ;;		_sprintf
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           
  5603                           ;psect for function ___awdiv
  5604  1F82                     ___awdiv:	
  5605                           
  5606                           ;incstack = 0
  5607                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5608  1F82  1683               	bsf	3,5	;RP0=1, select bank1
  5609  1F83  1303               	bcf	3,6	;RP1=0, select bank1
  5610  1F84  01A1               	clrf	___awdiv@sign^(0+128)
  5611  1F85  1283               	bcf	3,5	;RP0=0, select bank0
  5612  1F86  1303               	bcf	3,6	;RP1=0, select bank0
  5613  1F87  1FBE               	btfss	___awdiv@divisor+1,7
  5614  1F88  2F92               	goto	l3447
  5615  1F89  09BD               	comf	___awdiv@divisor,f
  5616  1F8A  09BE               	comf	___awdiv@divisor+1,f
  5617  1F8B  0ABD               	incf	___awdiv@divisor,f
  5618  1F8C  1903               	skipnz
  5619  1F8D  0ABE               	incf	___awdiv@divisor+1,f
  5620  1F8E  1683               	bsf	3,5	;RP0=1, select bank1
  5621  1F8F  1303               	bcf	3,6	;RP1=0, select bank1
  5622  1F90  01A1               	clrf	___awdiv@sign^(0+128)
  5623  1F91  0AA1               	incf	___awdiv@sign^(0+128),f
  5624  1F92                     l3447:	
  5625  1F92  1283               	bcf	3,5	;RP0=0, select bank0
  5626  1F93  1FC0               	btfss	___awdiv@dividend+1,7
  5627  1F94  2FA0               	goto	l3453
  5628  1F95  09BF               	comf	___awdiv@dividend,f
  5629  1F96  09C0               	comf	___awdiv@dividend+1,f
  5630  1F97  0ABF               	incf	___awdiv@dividend,f
  5631  1F98  1903               	skipnz
  5632  1F99  0AC0               	incf	___awdiv@dividend+1,f
  5633  1F9A  3001               	movlw	1
  5634  1F9B  00C1               	movwf	??___awdiv
  5635  1F9C  0841               	movf	??___awdiv,w
  5636  1F9D  1683               	bsf	3,5	;RP0=1, select bank1
  5637  1F9E  1303               	bcf	3,6	;RP1=0, select bank1
  5638  1F9F  06A1               	xorwf	___awdiv@sign^(0+128),f
  5639  1FA0                     l3453:	
  5640  1FA0  1683               	bsf	3,5	;RP0=1, select bank1
  5641  1FA1  1303               	bcf	3,6	;RP1=0, select bank1
  5642  1FA2  01A2               	clrf	___awdiv@quotient^(0+128)
  5643  1FA3  01A3               	clrf	(___awdiv@quotient+1)^(0+128)
  5644  1FA4  1283               	bcf	3,5	;RP0=0, select bank0
  5645  1FA5  1303               	bcf	3,6	;RP1=0, select bank0
  5646  1FA6  083D               	movf	___awdiv@divisor,w
  5647  1FA7  043E               	iorwf	___awdiv@divisor+1,w
  5648  1FA8  1903               	btfsc	3,2
  5649  1FA9  2FEB               	goto	l3475
  5650  1FAA  1683               	bsf	3,5	;RP0=1, select bank1
  5651  1FAB  1303               	bcf	3,6	;RP1=0, select bank1
  5652  1FAC  01A0               	clrf	___awdiv@counter^(0+128)
  5653  1FAD  0AA0               	incf	___awdiv@counter^(0+128),f
  5654  1FAE                     l3463:	
  5655  1FAE  1283               	bcf	3,5	;RP0=0, select bank0
  5656  1FAF  1303               	bcf	3,6	;RP1=0, select bank0
  5657  1FB0  1BBE               	btfsc	___awdiv@divisor+1,7
  5658  1FB1  2FC1               	goto	l3465
  5659  1FB2  3001               	movlw	1
  5660  1FB3  1283               	bcf	3,5	;RP0=0, select bank0
  5661  1FB4                     u4865:	
  5662  1FB4  1003               	clrc
  5663  1FB5  0DBD               	rlf	___awdiv@divisor,f
  5664  1FB6  0DBE               	rlf	___awdiv@divisor+1,f
  5665  1FB7  3EFF               	addlw	-1
  5666  1FB8  1D03               	skipz
  5667  1FB9  2FB4               	goto	u4865
  5668  1FBA  3001               	movlw	1
  5669  1FBB  00C1               	movwf	??___awdiv
  5670  1FBC  0841               	movf	??___awdiv,w
  5671  1FBD  1683               	bsf	3,5	;RP0=1, select bank1
  5672  1FBE  1303               	bcf	3,6	;RP1=0, select bank1
  5673  1FBF  07A0               	addwf	___awdiv@counter^(0+128),f
  5674  1FC0  2FAE               	goto	l3463
  5675  1FC1                     l3465:	
  5676  1FC1  3001               	movlw	1
  5677  1FC2  1683               	bsf	3,5	;RP0=1, select bank1
  5678  1FC3  1303               	bcf	3,6	;RP1=0, select bank1
  5679  1FC4                     u4885:	
  5680  1FC4  1003               	clrc
  5681  1FC5  0DA2               	rlf	___awdiv@quotient^(0+128),f
  5682  1FC6  0DA3               	rlf	(___awdiv@quotient+1)^(0+128),f
  5683  1FC7  3EFF               	addlw	-1
  5684  1FC8  1D03               	skipz
  5685  1FC9  2FC4               	goto	u4885
  5686  1FCA  1283               	bcf	3,5	;RP0=0, select bank0
  5687  1FCB  1303               	bcf	3,6	;RP1=0, select bank0
  5688  1FCC  083E               	movf	___awdiv@divisor+1,w
  5689  1FCD  0240               	subwf	___awdiv@dividend+1,w
  5690  1FCE  1D03               	skipz
  5691  1FCF  2FD2               	goto	u4895
  5692  1FD0  083D               	movf	___awdiv@divisor,w
  5693  1FD1  023F               	subwf	___awdiv@dividend,w
  5694  1FD2                     u4895:	
  5695  1FD2  1C03               	skipc
  5696  1FD3  2FDD               	goto	l3471
  5697  1FD4  083D               	movf	___awdiv@divisor,w
  5698  1FD5  02BF               	subwf	___awdiv@dividend,f
  5699  1FD6  083E               	movf	___awdiv@divisor+1,w
  5700  1FD7  1C03               	skipc
  5701  1FD8  03C0               	decf	___awdiv@dividend+1,f
  5702  1FD9  02C0               	subwf	___awdiv@dividend+1,f
  5703  1FDA  1683               	bsf	3,5	;RP0=1, select bank1
  5704  1FDB  1303               	bcf	3,6	;RP1=0, select bank1
  5705  1FDC  1422               	bsf	___awdiv@quotient^(0+128),0
  5706  1FDD                     l3471:	
  5707  1FDD  3001               	movlw	1
  5708  1FDE  1283               	bcf	3,5	;RP0=0, select bank0
  5709  1FDF                     u4905:	
  5710  1FDF  1003               	clrc
  5711  1FE0  0CBE               	rrf	___awdiv@divisor+1,f
  5712  1FE1  0CBD               	rrf	___awdiv@divisor,f
  5713  1FE2  3EFF               	addlw	-1
  5714  1FE3  1D03               	skipz
  5715  1FE4  2FDF               	goto	u4905
  5716  1FE5  3001               	movlw	1
  5717  1FE6  1683               	bsf	3,5	;RP0=1, select bank1
  5718  1FE7  1303               	bcf	3,6	;RP1=0, select bank1
  5719  1FE8  02A0               	subwf	___awdiv@counter^(0+128),f
  5720  1FE9  1D03               	btfss	3,2
  5721  1FEA  2FC1               	goto	l3465
  5722  1FEB                     l3475:	
  5723  1FEB  1683               	bsf	3,5	;RP0=1, select bank1
  5724  1FEC  1303               	bcf	3,6	;RP1=0, select bank1
  5725  1FED  0821               	movf	___awdiv@sign^(0+128),w
  5726  1FEE  1903               	btfsc	3,2
  5727  1FEF  2FF5               	goto	l3479
  5728  1FF0  09A2               	comf	___awdiv@quotient^(0+128),f
  5729  1FF1  09A3               	comf	(___awdiv@quotient+1)^(0+128),f
  5730  1FF2  0AA2               	incf	___awdiv@quotient^(0+128),f
  5731  1FF3  1903               	skipnz
  5732  1FF4  0AA3               	incf	(___awdiv@quotient+1)^(0+128),f
  5733  1FF5                     l3479:	
  5734  1FF5  0823               	movf	(___awdiv@quotient+1)^(0+128),w
  5735  1FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5736  1FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5737  1FF8  00BE               	movwf	?___awdiv+1
  5738  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  5739  1FFA  1303               	bcf	3,6	;RP1=0, select bank1
  5740  1FFB  0822               	movf	___awdiv@quotient^(0+128),w
  5741  1FFC  1283               	bcf	3,5	;RP0=0, select bank0
  5742  1FFD  1303               	bcf	3,6	;RP1=0, select bank0
  5743  1FFE  00BD               	movwf	?___awdiv
  5744  1FFF  0008               	return
  5745  2000                     __end_of___awdiv:	
  5746                           
  5747                           	psect	text11
  5748  1325                     __ptext11:	
  5749 ;; *************** function __tdiv_to_l_ *****************
  5750 ;; Defined at:
  5751 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  f1              3   22[BANK0 ] float 
  5754 ;;  f2              3   25[BANK0 ] float 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  quot            4    0[BANK1 ] unsigned long 
  5757 ;;  exp1            1    5[BANK1 ] unsigned char 
  5758 ;;  cntr            1    4[BANK1 ] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4   22[BANK0 ] unsigned long 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5768 ;;      Params:         0       6       0       0       0
  5769 ;;      Locals:         0       0       6       0       0
  5770 ;;      Temps:          0       4       0       0       0
  5771 ;;      Totals:         0      10       6       0       0
  5772 ;;Total ram usage:       16 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    3
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_sprintf
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function __tdiv_to_l_
  5784  1325                     __tdiv_to_l_:	
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5788  1325  1283               	bcf	3,5	;RP0=0, select bank0
  5789  1326  1303               	bcf	3,6	;RP1=0, select bank0
  5790  1327  0836               	movf	__tdiv_to_l_@f1,w
  5791  1328  00BC               	movwf	??__tdiv_to_l_
  5792  1329  0837               	movf	__tdiv_to_l_@f1+1,w
  5793  132A  00BD               	movwf	??__tdiv_to_l_+1
  5794  132B  0838               	movf	__tdiv_to_l_@f1+2,w
  5795  132C  00BE               	movwf	??__tdiv_to_l_+2
  5796  132D  1003               	clrc
  5797  132E  0D3D               	rlf	??__tdiv_to_l_+1,w
  5798  132F  0D3E               	rlf	??__tdiv_to_l_+2,w
  5799  1330  00BF               	movwf	??__tdiv_to_l_+3
  5800  1331  083F               	movf	??__tdiv_to_l_+3,w
  5801  1332  1683               	bsf	3,5	;RP0=1, select bank1
  5802  1333  1303               	bcf	3,6	;RP1=0, select bank1
  5803  1334  00A5               	movwf	__tdiv_to_l_@exp1^(0+128)
  5804  1335  0825               	movf	__tdiv_to_l_@exp1^(0+128),w
  5805  1336  1D03               	btfss	3,2
  5806  1337  2B43               	goto	l3721
  5807  1338  3000               	movlw	0
  5808  1339  1283               	bcf	3,5	;RP0=0, select bank0
  5809  133A  1303               	bcf	3,6	;RP1=0, select bank0
  5810  133B  00B9               	movwf	?__tdiv_to_l_+3
  5811  133C  3000               	movlw	0
  5812  133D  00B8               	movwf	?__tdiv_to_l_+2
  5813  133E  3000               	movlw	0
  5814  133F  00B7               	movwf	?__tdiv_to_l_+1
  5815  1340  3000               	movlw	0
  5816  1341  00B6               	movwf	?__tdiv_to_l_
  5817  1342  0008               	return
  5818  1343                     l3721:	
  5819  1343  1283               	bcf	3,5	;RP0=0, select bank0
  5820  1344  0839               	movf	__tdiv_to_l_@f2,w
  5821  1345  00BC               	movwf	??__tdiv_to_l_
  5822  1346  083A               	movf	__tdiv_to_l_@f2+1,w
  5823  1347  00BD               	movwf	??__tdiv_to_l_+1
  5824  1348  083B               	movf	__tdiv_to_l_@f2+2,w
  5825  1349  00BE               	movwf	??__tdiv_to_l_+2
  5826  134A  1003               	clrc
  5827  134B  0D3D               	rlf	??__tdiv_to_l_+1,w
  5828  134C  0D3E               	rlf	??__tdiv_to_l_+2,w
  5829  134D  00BF               	movwf	??__tdiv_to_l_+3
  5830  134E  083F               	movf	??__tdiv_to_l_+3,w
  5831  134F  1683               	bsf	3,5	;RP0=1, select bank1
  5832  1350  1303               	bcf	3,6	;RP1=0, select bank1
  5833  1351  00A4               	movwf	__tdiv_to_l_@cntr^(0+128)
  5834  1352  0824               	movf	__tdiv_to_l_@cntr^(0+128),w
  5835  1353  1D03               	btfss	3,2
  5836  1354  2B60               	goto	l577
  5837  1355  3000               	movlw	0
  5838  1356  1283               	bcf	3,5	;RP0=0, select bank0
  5839  1357  1303               	bcf	3,6	;RP1=0, select bank0
  5840  1358  00B9               	movwf	?__tdiv_to_l_+3
  5841  1359  3000               	movlw	0
  5842  135A  00B8               	movwf	?__tdiv_to_l_+2
  5843  135B  3000               	movlw	0
  5844  135C  00B7               	movwf	?__tdiv_to_l_+1
  5845  135D  3000               	movlw	0
  5846  135E  00B6               	movwf	?__tdiv_to_l_
  5847  135F  0008               	return
  5848  1360                     l577:	
  5849  1360  1283               	bcf	3,5	;RP0=0, select bank0
  5850  1361  1303               	bcf	3,6	;RP1=0, select bank0
  5851  1362  17B7               	bsf	__tdiv_to_l_@f1+1,7
  5852  1363  30FF               	movlw	255
  5853  1364  05B6               	andwf	__tdiv_to_l_@f1,f
  5854  1365  30FF               	movlw	255
  5855  1366  05B7               	andwf	__tdiv_to_l_@f1+1,f
  5856  1367  3000               	movlw	0
  5857  1368  05B8               	andwf	__tdiv_to_l_@f1+2,f
  5858  1369  17BA               	bsf	__tdiv_to_l_@f2+1,7
  5859  136A  30FF               	movlw	255
  5860  136B  05B9               	andwf	__tdiv_to_l_@f2,f
  5861  136C  30FF               	movlw	255
  5862  136D  05BA               	andwf	__tdiv_to_l_@f2+1,f
  5863  136E  3000               	movlw	0
  5864  136F  05BB               	andwf	__tdiv_to_l_@f2+2,f
  5865  1370  3000               	movlw	0
  5866  1371  1683               	bsf	3,5	;RP0=1, select bank1
  5867  1372  1303               	bcf	3,6	;RP1=0, select bank1
  5868  1373  00A3               	movwf	(__tdiv_to_l_@quot+3)^(0+128)
  5869  1374  3000               	movlw	0
  5870  1375  00A2               	movwf	(__tdiv_to_l_@quot+2)^(0+128)
  5871  1376  3000               	movlw	0
  5872  1377  00A1               	movwf	(__tdiv_to_l_@quot+1)^(0+128)
  5873  1378  3000               	movlw	0
  5874  1379  00A0               	movwf	__tdiv_to_l_@quot^(0+128)
  5875  137A  307F               	movlw	127
  5876  137B  02A5               	subwf	__tdiv_to_l_@exp1^(0+128),f
  5877  137C  3098               	movlw	152
  5878  137D  0724               	addwf	__tdiv_to_l_@cntr^(0+128),w
  5879  137E  1283               	bcf	3,5	;RP0=0, select bank0
  5880  137F  1303               	bcf	3,6	;RP1=0, select bank0
  5881  1380  00BC               	movwf	??__tdiv_to_l_
  5882  1381  083C               	movf	??__tdiv_to_l_,w
  5883  1382  1683               	bsf	3,5	;RP0=1, select bank1
  5884  1383  1303               	bcf	3,6	;RP1=0, select bank1
  5885  1384  02A5               	subwf	__tdiv_to_l_@exp1^(0+128),f
  5886  1385  3018               	movlw	24
  5887  1386  1283               	bcf	3,5	;RP0=0, select bank0
  5888  1387  1303               	bcf	3,6	;RP1=0, select bank0
  5889  1388  00BC               	movwf	??__tdiv_to_l_
  5890  1389  083C               	movf	??__tdiv_to_l_,w
  5891  138A  1683               	bsf	3,5	;RP0=1, select bank1
  5892  138B  1303               	bcf	3,6	;RP1=0, select bank1
  5893  138C  00A4               	movwf	__tdiv_to_l_@cntr^(0+128)
  5894  138D                     l3735:	
  5895  138D  3001               	movlw	1
  5896  138E  1283               	bcf	3,5	;RP0=0, select bank0
  5897  138F  1303               	bcf	3,6	;RP1=0, select bank0
  5898  1390  00BC               	movwf	??__tdiv_to_l_
  5899  1391                     u5515:	
  5900  1391  1003               	clrc
  5901  1392  1683               	bsf	3,5	;RP0=1, select bank1
  5902  1393  1303               	bcf	3,6	;RP1=0, select bank1
  5903  1394  0DA0               	rlf	__tdiv_to_l_@quot^(0+128),f
  5904  1395  0DA1               	rlf	(__tdiv_to_l_@quot+1)^(0+128),f
  5905  1396  0DA2               	rlf	(__tdiv_to_l_@quot+2)^(0+128),f
  5906  1397  0DA3               	rlf	(__tdiv_to_l_@quot+3)^(0+128),f
  5907  1398  1283               	bcf	3,5	;RP0=0, select bank0
  5908  1399  1303               	bcf	3,6	;RP1=0, select bank0
  5909  139A  0BBC               	decfsz	??__tdiv_to_l_,f
  5910  139B  2B91               	goto	u5515
  5911  139C  083B               	movf	__tdiv_to_l_@f2+2,w
  5912  139D  0238               	subwf	__tdiv_to_l_@f1+2,w
  5913  139E  1D03               	skipz
  5914  139F  2BA6               	goto	u5525
  5915  13A0  083A               	movf	__tdiv_to_l_@f2+1,w
  5916  13A1  0237               	subwf	__tdiv_to_l_@f1+1,w
  5917  13A2  1D03               	skipz
  5918  13A3  2BA6               	goto	u5525
  5919  13A4  0839               	movf	__tdiv_to_l_@f2,w
  5920  13A5  0236               	subwf	__tdiv_to_l_@f1,w
  5921  13A6                     u5525:	
  5922  13A6  1C03               	skipc
  5923  13A7  2BB5               	goto	l3743
  5924  13A8  0839               	movf	__tdiv_to_l_@f2,w
  5925  13A9  02B6               	subwf	__tdiv_to_l_@f1,f
  5926  13AA  083A               	movf	__tdiv_to_l_@f2+1,w
  5927  13AB  1C03               	skipc
  5928  13AC  0F3A               	incfsz	__tdiv_to_l_@f2+1,w
  5929  13AD  02B7               	subwf	__tdiv_to_l_@f1+1,f
  5930  13AE  083B               	movf	__tdiv_to_l_@f2+2,w
  5931  13AF  1C03               	skipc
  5932  13B0  0A3B               	incf	__tdiv_to_l_@f2+2,w
  5933  13B1  02B8               	subwf	__tdiv_to_l_@f1+2,f
  5934  13B2  1683               	bsf	3,5	;RP0=1, select bank1
  5935  13B3  1303               	bcf	3,6	;RP1=0, select bank1
  5936  13B4  1420               	bsf	__tdiv_to_l_@quot^(0+128),0
  5937  13B5                     l3743:	
  5938  13B5  3001               	movlw	1
  5939  13B6                     u5535:	
  5940  13B6  1003               	clrc
  5941  13B7  1283               	bcf	3,5	;RP0=0, select bank0
  5942  13B8  0DB6               	rlf	__tdiv_to_l_@f1,f
  5943  13B9  0DB7               	rlf	__tdiv_to_l_@f1+1,f
  5944  13BA  0DB8               	rlf	__tdiv_to_l_@f1+2,f
  5945  13BB  3EFF               	addlw	-1
  5946  13BC  1D03               	skipz
  5947  13BD  2BB6               	goto	u5535
  5948  13BE  3001               	movlw	1
  5949  13BF  1683               	bsf	3,5	;RP0=1, select bank1
  5950  13C0  1303               	bcf	3,6	;RP1=0, select bank1
  5951  13C1  02A4               	subwf	__tdiv_to_l_@cntr^(0+128),f
  5952  13C2  1D03               	btfss	3,2
  5953  13C3  2B8D               	goto	l3735
  5954  13C4  1FA5               	btfss	__tdiv_to_l_@exp1^(0+128),7
  5955  13C5  2BEC               	goto	l3755
  5956  13C6  0825               	movf	__tdiv_to_l_@exp1^(0+128),w
  5957  13C7  3A80               	xorlw	128
  5958  13C8  3E97               	addlw	151
  5959  13C9  1803               	skipnc
  5960  13CA  2BD6               	goto	l3753
  5961  13CB  3000               	movlw	0
  5962  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  5963  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  5964  13CE  00B9               	movwf	?__tdiv_to_l_+3
  5965  13CF  3000               	movlw	0
  5966  13D0  00B8               	movwf	?__tdiv_to_l_+2
  5967  13D1  3000               	movlw	0
  5968  13D2  00B7               	movwf	?__tdiv_to_l_+1
  5969  13D3  3000               	movlw	0
  5970  13D4  00B6               	movwf	?__tdiv_to_l_
  5971  13D5  0008               	return
  5972  13D6                     l3753:	
  5973  13D6  3001               	movlw	1
  5974  13D7                     u5575:	
  5975  13D7  1003               	clrc
  5976  13D8  1683               	bsf	3,5	;RP0=1, select bank1
  5977  13D9  1303               	bcf	3,6	;RP1=0, select bank1
  5978  13DA  0CA3               	rrf	(__tdiv_to_l_@quot+3)^(0+128),f
  5979  13DB  0CA2               	rrf	(__tdiv_to_l_@quot+2)^(0+128),f
  5980  13DC  0CA1               	rrf	(__tdiv_to_l_@quot+1)^(0+128),f
  5981  13DD  0CA0               	rrf	__tdiv_to_l_@quot^(0+128),f
  5982  13DE  3EFF               	addlw	-1
  5983  13DF  1D03               	skipz
  5984  13E0  2BD7               	goto	u5575
  5985  13E1  3001               	movlw	1
  5986  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  5987  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  5988  13E4  00BC               	movwf	??__tdiv_to_l_
  5989  13E5  083C               	movf	??__tdiv_to_l_,w
  5990  13E6  1683               	bsf	3,5	;RP0=1, select bank1
  5991  13E7  1303               	bcf	3,6	;RP1=0, select bank1
  5992  13E8  07A5               	addwf	__tdiv_to_l_@exp1^(0+128),f
  5993  13E9  1903               	btfsc	3,2
  5994  13EA  2C12               	goto	l3763
  5995  13EB  2BD6               	goto	l3753
  5996  13EC                     l3755:	
  5997  13EC  3018               	movlw	24
  5998  13ED  0225               	subwf	__tdiv_to_l_@exp1^(0+128),w
  5999  13EE  1C03               	skipc
  6000  13EF  2C0D               	goto	l587
  6001  13F0  3000               	movlw	0
  6002  13F1  1283               	bcf	3,5	;RP0=0, select bank0
  6003  13F2  1303               	bcf	3,6	;RP1=0, select bank0
  6004  13F3  00B9               	movwf	?__tdiv_to_l_+3
  6005  13F4  3000               	movlw	0
  6006  13F5  00B8               	movwf	?__tdiv_to_l_+2
  6007  13F6  3000               	movlw	0
  6008  13F7  00B7               	movwf	?__tdiv_to_l_+1
  6009  13F8  3000               	movlw	0
  6010  13F9  00B6               	movwf	?__tdiv_to_l_
  6011  13FA  0008               	return
  6012  13FB                     l3761:	
  6013  13FB  3001               	movlw	1
  6014  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  6015  13FD  00BC               	movwf	??__tdiv_to_l_
  6016  13FE                     u5605:	
  6017  13FE  1003               	clrc
  6018  13FF  1683               	bsf	3,5	;RP0=1, select bank1
  6019  1400  1303               	bcf	3,6	;RP1=0, select bank1
  6020  1401  0DA0               	rlf	__tdiv_to_l_@quot^(0+128),f
  6021  1402  0DA1               	rlf	(__tdiv_to_l_@quot+1)^(0+128),f
  6022  1403  0DA2               	rlf	(__tdiv_to_l_@quot+2)^(0+128),f
  6023  1404  0DA3               	rlf	(__tdiv_to_l_@quot+3)^(0+128),f
  6024  1405  1283               	bcf	3,5	;RP0=0, select bank0
  6025  1406  1303               	bcf	3,6	;RP1=0, select bank0
  6026  1407  0BBC               	decfsz	??__tdiv_to_l_,f
  6027  1408  2BFE               	goto	u5605
  6028  1409  3001               	movlw	1
  6029  140A  1683               	bsf	3,5	;RP0=1, select bank1
  6030  140B  1303               	bcf	3,6	;RP1=0, select bank1
  6031  140C  02A5               	subwf	__tdiv_to_l_@exp1^(0+128),f
  6032  140D                     l587:	
  6033  140D  1683               	bsf	3,5	;RP0=1, select bank1
  6034  140E  1303               	bcf	3,6	;RP1=0, select bank1
  6035  140F  0825               	movf	__tdiv_to_l_@exp1^(0+128),w
  6036  1410  1D03               	btfss	3,2
  6037  1411  2BFB               	goto	l3761
  6038  1412                     l3763:	
  6039  1412  0823               	movf	(__tdiv_to_l_@quot+3)^(0+128),w
  6040  1413  1283               	bcf	3,5	;RP0=0, select bank0
  6041  1414  1303               	bcf	3,6	;RP1=0, select bank0
  6042  1415  00B9               	movwf	?__tdiv_to_l_+3
  6043  1416  1683               	bsf	3,5	;RP0=1, select bank1
  6044  1417  1303               	bcf	3,6	;RP1=0, select bank1
  6045  1418  0822               	movf	(__tdiv_to_l_@quot+2)^(0+128),w
  6046  1419  1283               	bcf	3,5	;RP0=0, select bank0
  6047  141A  1303               	bcf	3,6	;RP1=0, select bank0
  6048  141B  00B8               	movwf	?__tdiv_to_l_+2
  6049  141C  1683               	bsf	3,5	;RP0=1, select bank1
  6050  141D  1303               	bcf	3,6	;RP1=0, select bank1
  6051  141E  0821               	movf	(__tdiv_to_l_@quot+1)^(0+128),w
  6052  141F  1283               	bcf	3,5	;RP0=0, select bank0
  6053  1420  1303               	bcf	3,6	;RP1=0, select bank0
  6054  1421  00B7               	movwf	?__tdiv_to_l_+1
  6055  1422  1683               	bsf	3,5	;RP0=1, select bank1
  6056  1423  1303               	bcf	3,6	;RP1=0, select bank1
  6057  1424  0820               	movf	__tdiv_to_l_@quot^(0+128),w
  6058  1425  1283               	bcf	3,5	;RP0=0, select bank0
  6059  1426  1303               	bcf	3,6	;RP1=0, select bank0
  6060  1427  00B6               	movwf	?__tdiv_to_l_
  6061  1428  0008               	return
  6062  1429                     __end_of__tdiv_to_l_:	
  6063                           
  6064                           	psect	text12
  6065  168F                     __ptext12:	
  6066 ;; *************** function __div_to_l_ *****************
  6067 ;; Defined at:
  6068 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  f1              3   22[BANK0 ] unsigned long 
  6071 ;;  f2              3   25[BANK0 ] unsigned long 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  quot            4    0[BANK1 ] unsigned long 
  6074 ;;  exp1            1    5[BANK1 ] unsigned char 
  6075 ;;  cntr            1    4[BANK1 ] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  4   22[BANK0 ] unsigned long 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6085 ;;      Params:         0       6       0       0       0
  6086 ;;      Locals:         0       0       6       0       0
  6087 ;;      Temps:          0       8       0       0       0
  6088 ;;      Totals:         0      14       6       0       0
  6089 ;;Total ram usage:       20 bytes
  6090 ;; Hardware stack levels used:    1
  6091 ;; Hardware stack levels required when called:    3
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		_sprintf
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           
  6100                           ;psect for function __div_to_l_
  6101  168F                     __div_to_l_:	
  6102                           
  6103                           ;incstack = 0
  6104                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6105  168F  3036               	movlw	low (__div_to_l_@f1| 0)
  6106  1690  0084               	movwf	4
  6107  1691  1383               	bcf	3,7	;select IRP bank0
  6108  1692  0800               	movf	0,w
  6109  1693  1283               	bcf	3,5	;RP0=0, select bank0
  6110  1694  1303               	bcf	3,6	;RP1=0, select bank0
  6111  1695  00BC               	movwf	??__div_to_l_
  6112  1696  0A84               	incf	4,f
  6113  1697  0800               	movf	0,w
  6114  1698  00BD               	movwf	??__div_to_l_+1
  6115  1699  0A84               	incf	4,f
  6116  169A  0800               	movf	0,w
  6117  169B  00BE               	movwf	??__div_to_l_+2
  6118  169C  0A84               	incf	4,f
  6119  169D  0800               	movf	0,w
  6120  169E  00BF               	movwf	??__div_to_l_+3
  6121  169F  1003               	clrc
  6122  16A0  0D3E               	rlf	??__div_to_l_+2,w
  6123  16A1  0D3F               	rlf	??__div_to_l_+3,w
  6124  16A2  00C0               	movwf	??__div_to_l_+4
  6125  16A3  0840               	movf	??__div_to_l_+4,w
  6126  16A4  1683               	bsf	3,5	;RP0=1, select bank1
  6127  16A5  1303               	bcf	3,6	;RP1=0, select bank1
  6128  16A6  00A5               	movwf	__div_to_l_@exp1^(0+128)
  6129  16A7  0825               	movf	__div_to_l_@exp1^(0+128),w
  6130  16A8  1D03               	btfss	3,2
  6131  16A9  2EB5               	goto	l3773
  6132  16AA  3000               	movlw	0
  6133  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  6134  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  6135  16AD  00B9               	movwf	?__div_to_l_+3
  6136  16AE  3000               	movlw	0
  6137  16AF  00B8               	movwf	?__div_to_l_+2
  6138  16B0  3000               	movlw	0
  6139  16B1  00B7               	movwf	?__div_to_l_+1
  6140  16B2  3000               	movlw	0
  6141  16B3  00B6               	movwf	?__div_to_l_
  6142  16B4  0008               	return
  6143  16B5                     l3773:	
  6144  16B5  3039               	movlw	low (__div_to_l_@f2| 0)
  6145  16B6  0084               	movwf	4
  6146  16B7  0800               	movf	0,w
  6147  16B8  1283               	bcf	3,5	;RP0=0, select bank0
  6148  16B9  00BC               	movwf	??__div_to_l_
  6149  16BA  0A84               	incf	4,f
  6150  16BB  0800               	movf	0,w
  6151  16BC  00BD               	movwf	??__div_to_l_+1
  6152  16BD  0A84               	incf	4,f
  6153  16BE  0800               	movf	0,w
  6154  16BF  00BE               	movwf	??__div_to_l_+2
  6155  16C0  0A84               	incf	4,f
  6156  16C1  0800               	movf	0,w
  6157  16C2  00BF               	movwf	??__div_to_l_+3
  6158  16C3  1003               	clrc
  6159  16C4  0D3E               	rlf	??__div_to_l_+2,w
  6160  16C5  0D3F               	rlf	??__div_to_l_+3,w
  6161  16C6  00C0               	movwf	??__div_to_l_+4
  6162  16C7  0840               	movf	??__div_to_l_+4,w
  6163  16C8  1683               	bsf	3,5	;RP0=1, select bank1
  6164  16C9  1303               	bcf	3,6	;RP1=0, select bank1
  6165  16CA  00A4               	movwf	__div_to_l_@cntr^(0+128)
  6166  16CB  0824               	movf	__div_to_l_@cntr^(0+128),w
  6167  16CC  1D03               	btfss	3,2
  6168  16CD  2ED9               	goto	l3779
  6169  16CE  3000               	movlw	0
  6170  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  6171  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  6172  16D1  00B9               	movwf	?__div_to_l_+3
  6173  16D2  3000               	movlw	0
  6174  16D3  00B8               	movwf	?__div_to_l_+2
  6175  16D4  3000               	movlw	0
  6176  16D5  00B7               	movwf	?__div_to_l_+1
  6177  16D6  3000               	movlw	0
  6178  16D7  00B6               	movwf	?__div_to_l_
  6179  16D8  0008               	return
  6180  16D9                     l3779:	
  6181  16D9  3036               	movlw	low (__div_to_l_@f1| 0)
  6182  16DA  0084               	movwf	4
  6183  16DB  3000               	movlw	0
  6184  16DC  0480               	iorwf	0,f
  6185  16DD  0A84               	incf	4,f
  6186  16DE  3000               	movlw	0
  6187  16DF  0480               	iorwf	0,f
  6188  16E0  0A84               	incf	4,f
  6189  16E1  3080               	movlw	128
  6190  16E2  0480               	iorwf	0,f
  6191  16E3  0A84               	incf	4,f
  6192  16E4  3000               	movlw	0
  6193  16E5  0480               	iorwf	0,f
  6194  16E6  3036               	movlw	low (__div_to_l_@f1| 0)
  6195  16E7  0084               	movwf	4
  6196  16E8  30FF               	movlw	255
  6197  16E9  0580               	andwf	0,f
  6198  16EA  0A84               	incf	4,f
  6199  16EB  30FF               	movlw	255
  6200  16EC  0580               	andwf	0,f
  6201  16ED  0A84               	incf	4,f
  6202  16EE  30FF               	movlw	255
  6203  16EF  0580               	andwf	0,f
  6204  16F0  0A84               	incf	4,f
  6205  16F1  3000               	movlw	0
  6206  16F2  0580               	andwf	0,f
  6207  16F3  3039               	movlw	low (__div_to_l_@f2| 0)
  6208  16F4  0084               	movwf	4
  6209  16F5  3000               	movlw	0
  6210  16F6  0480               	iorwf	0,f
  6211  16F7  0A84               	incf	4,f
  6212  16F8  3000               	movlw	0
  6213  16F9  0480               	iorwf	0,f
  6214  16FA  0A84               	incf	4,f
  6215  16FB  3080               	movlw	128
  6216  16FC  0480               	iorwf	0,f
  6217  16FD  0A84               	incf	4,f
  6218  16FE  3000               	movlw	0
  6219  16FF  0480               	iorwf	0,f
  6220  1700  3039               	movlw	low (__div_to_l_@f2| 0)
  6221  1701  0084               	movwf	4
  6222  1702  30FF               	movlw	255
  6223  1703  0580               	andwf	0,f
  6224  1704  0A84               	incf	4,f
  6225  1705  30FF               	movlw	255
  6226  1706  0580               	andwf	0,f
  6227  1707  0A84               	incf	4,f
  6228  1708  30FF               	movlw	255
  6229  1709  0580               	andwf	0,f
  6230  170A  0A84               	incf	4,f
  6231  170B  3000               	movlw	0
  6232  170C  0580               	andwf	0,f
  6233  170D  3000               	movlw	0
  6234  170E  1683               	bsf	3,5	;RP0=1, select bank1
  6235  170F  1303               	bcf	3,6	;RP1=0, select bank1
  6236  1710  00A3               	movwf	(__div_to_l_@quot+3)^(0+128)
  6237  1711  3000               	movlw	0
  6238  1712  00A2               	movwf	(__div_to_l_@quot+2)^(0+128)
  6239  1713  3000               	movlw	0
  6240  1714  00A1               	movwf	(__div_to_l_@quot+1)^(0+128)
  6241  1715  3000               	movlw	0
  6242  1716  00A0               	movwf	__div_to_l_@quot^(0+128)
  6243  1717  307F               	movlw	127
  6244  1718  02A5               	subwf	__div_to_l_@exp1^(0+128),f
  6245  1719  30A0               	movlw	160
  6246  171A  0724               	addwf	__div_to_l_@cntr^(0+128),w
  6247  171B  1283               	bcf	3,5	;RP0=0, select bank0
  6248  171C  1303               	bcf	3,6	;RP1=0, select bank0
  6249  171D  00BC               	movwf	??__div_to_l_
  6250  171E  083C               	movf	??__div_to_l_,w
  6251  171F  1683               	bsf	3,5	;RP0=1, select bank1
  6252  1720  1303               	bcf	3,6	;RP1=0, select bank1
  6253  1721  02A5               	subwf	__div_to_l_@exp1^(0+128),f
  6254  1722  3020               	movlw	32
  6255  1723  1283               	bcf	3,5	;RP0=0, select bank0
  6256  1724  1303               	bcf	3,6	;RP1=0, select bank0
  6257  1725  00BC               	movwf	??__div_to_l_
  6258  1726  083C               	movf	??__div_to_l_,w
  6259  1727  1683               	bsf	3,5	;RP0=1, select bank1
  6260  1728  1303               	bcf	3,6	;RP1=0, select bank1
  6261  1729  00A4               	movwf	__div_to_l_@cntr^(0+128)
  6262  172A                     l3789:	
  6263  172A  3001               	movlw	1
  6264  172B  1283               	bcf	3,5	;RP0=0, select bank0
  6265  172C  1303               	bcf	3,6	;RP1=0, select bank0
  6266  172D  00BC               	movwf	??__div_to_l_
  6267  172E                     u5645:	
  6268  172E  1003               	clrc
  6269  172F  1683               	bsf	3,5	;RP0=1, select bank1
  6270  1730  1303               	bcf	3,6	;RP1=0, select bank1
  6271  1731  0DA0               	rlf	__div_to_l_@quot^(0+128),f
  6272  1732  0DA1               	rlf	(__div_to_l_@quot+1)^(0+128),f
  6273  1733  0DA2               	rlf	(__div_to_l_@quot+2)^(0+128),f
  6274  1734  0DA3               	rlf	(__div_to_l_@quot+3)^(0+128),f
  6275  1735  1283               	bcf	3,5	;RP0=0, select bank0
  6276  1736  1303               	bcf	3,6	;RP1=0, select bank0
  6277  1737  0BBC               	decfsz	??__div_to_l_,f
  6278  1738  2F2E               	goto	u5645
  6279  1739  3039               	movlw	low (__div_to_l_@f2| 0)
  6280  173A  0084               	movwf	4
  6281  173B  0800               	movf	0,w
  6282  173C  00BC               	movwf	??__div_to_l_
  6283  173D  0A84               	incf	4,f
  6284  173E  0800               	movf	0,w
  6285  173F  00BD               	movwf	??__div_to_l_+1
  6286  1740  0A84               	incf	4,f
  6287  1741  0800               	movf	0,w
  6288  1742  00BE               	movwf	??__div_to_l_+2
  6289  1743  0A84               	incf	4,f
  6290  1744  0800               	movf	0,w
  6291  1745  00BF               	movwf	??__div_to_l_+3
  6292  1746  3036               	movlw	low (__div_to_l_@f1| 0)
  6293  1747  0084               	movwf	4
  6294  1748  0800               	movf	0,w
  6295  1749  00C0               	movwf	??__div_to_l_+4
  6296  174A  0A84               	incf	4,f
  6297  174B  0800               	movf	0,w
  6298  174C  00C1               	movwf	??__div_to_l_+5
  6299  174D  0A84               	incf	4,f
  6300  174E  0800               	movf	0,w
  6301  174F  00C2               	movwf	??__div_to_l_+6
  6302  1750  0A84               	incf	4,f
  6303  1751  0800               	movf	0,w
  6304  1752  00C3               	movwf	??__div_to_l_+7
  6305  1753  083F               	movf	??__div_to_l_+3,w
  6306  1754  0243               	subwf	??__div_to_l_+7,w
  6307  1755  1D03               	skipz
  6308  1756  2F61               	goto	u5655
  6309  1757  083E               	movf	??__div_to_l_+2,w
  6310  1758  0242               	subwf	??__div_to_l_+6,w
  6311  1759  1D03               	skipz
  6312  175A  2F61               	goto	u5655
  6313  175B  083D               	movf	??__div_to_l_+1,w
  6314  175C  0241               	subwf	??__div_to_l_+5,w
  6315  175D  1D03               	skipz
  6316  175E  2F61               	goto	u5655
  6317  175F  083C               	movf	??__div_to_l_,w
  6318  1760  0240               	subwf	??__div_to_l_+4,w
  6319  1761                     u5655:	
  6320  1761  1C03               	skipc
  6321  1762  2F88               	goto	l500
  6322  1763  3039               	movlw	low (__div_to_l_@f2| 0)
  6323  1764  0084               	movwf	4
  6324  1765  0800               	movf	0,w
  6325  1766  00BC               	movwf	??__div_to_l_
  6326  1767  0A84               	incf	4,f
  6327  1768  0800               	movf	0,w
  6328  1769  00BD               	movwf	??__div_to_l_+1
  6329  176A  0A84               	incf	4,f
  6330  176B  0800               	movf	0,w
  6331  176C  00BE               	movwf	??__div_to_l_+2
  6332  176D  0A84               	incf	4,f
  6333  176E  0800               	movf	0,w
  6334  176F  00BF               	movwf	??__div_to_l_+3
  6335  1770  3036               	movlw	low (__div_to_l_@f1| 0)
  6336  1771  0084               	movwf	4
  6337  1772  083C               	movf	??__div_to_l_,w
  6338  1773  0280               	subwf	0,f
  6339  1774  0A84               	incf	4,f
  6340  1775  083D               	movf	??__div_to_l_+1,w
  6341  1776  1C03               	skipc
  6342  1777  0F3D               	incfsz	??__div_to_l_+1,w
  6343  1778  0280               	subwf	0,f
  6344  1779  0A84               	incf	4,f
  6345  177A  083E               	movf	??__div_to_l_+2,w
  6346  177B  1C03               	skipc
  6347  177C  0F3E               	incfsz	??__div_to_l_+2,w
  6348  177D  0280               	subwf	0,f
  6349  177E  0A84               	incf	4,f
  6350  177F  083F               	movf	??__div_to_l_+3,w
  6351  1780  1C03               	skipc
  6352  1781  0A3F               	incf	??__div_to_l_+3,w
  6353  1782  0280               	subwf	0,f
  6354  1783  3003               	movlw	3
  6355  1784  0284               	subwf	4,f
  6356  1785  1683               	bsf	3,5	;RP0=1, select bank1
  6357  1786  1303               	bcf	3,6	;RP1=0, select bank1
  6358  1787  1420               	bsf	__div_to_l_@quot^(0+128),0
  6359  1788                     l500:	
  6360  1788  3036               	movlw	low (__div_to_l_@f1| 0)
  6361  1789  0084               	movwf	4
  6362  178A  1003               	clrc
  6363  178B  0D80               	rlf	0,f
  6364  178C  0A84               	incf	4,f
  6365  178D  0D80               	rlf	0,f
  6366  178E  0A84               	incf	4,f
  6367  178F  0D80               	rlf	0,f
  6368  1790  0A84               	incf	4,f
  6369  1791  0D80               	rlf	0,f
  6370  1792  0384               	decf	4,f
  6371  1793  0384               	decf	4,f
  6372  1794  0384               	decf	4,f
  6373  1795  3001               	movlw	1
  6374  1796  1683               	bsf	3,5	;RP0=1, select bank1
  6375  1797  1303               	bcf	3,6	;RP1=0, select bank1
  6376  1798  02A4               	subwf	__div_to_l_@cntr^(0+128),f
  6377  1799  1D03               	btfss	3,2
  6378  179A  2F2A               	goto	l3789
  6379  179B  1FA5               	btfss	__div_to_l_@exp1^(0+128),7
  6380  179C  2FC3               	goto	l3807
  6381  179D  0825               	movf	__div_to_l_@exp1^(0+128),w
  6382  179E  3A80               	xorlw	128
  6383  179F  3E9F               	addlw	159
  6384  17A0  1803               	skipnc
  6385  17A1  2FAD               	goto	l3805
  6386  17A2  3000               	movlw	0
  6387  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  6388  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  6389  17A5  00B9               	movwf	?__div_to_l_+3
  6390  17A6  3000               	movlw	0
  6391  17A7  00B8               	movwf	?__div_to_l_+2
  6392  17A8  3000               	movlw	0
  6393  17A9  00B7               	movwf	?__div_to_l_+1
  6394  17AA  3000               	movlw	0
  6395  17AB  00B6               	movwf	?__div_to_l_
  6396  17AC  0008               	return
  6397  17AD                     l3805:	
  6398  17AD  3001               	movlw	1
  6399  17AE                     u5695:	
  6400  17AE  1003               	clrc
  6401  17AF  1683               	bsf	3,5	;RP0=1, select bank1
  6402  17B0  1303               	bcf	3,6	;RP1=0, select bank1
  6403  17B1  0CA3               	rrf	(__div_to_l_@quot+3)^(0+128),f
  6404  17B2  0CA2               	rrf	(__div_to_l_@quot+2)^(0+128),f
  6405  17B3  0CA1               	rrf	(__div_to_l_@quot+1)^(0+128),f
  6406  17B4  0CA0               	rrf	__div_to_l_@quot^(0+128),f
  6407  17B5  3EFF               	addlw	-1
  6408  17B6  1D03               	skipz
  6409  17B7  2FAE               	goto	u5695
  6410  17B8  3001               	movlw	1
  6411  17B9  1283               	bcf	3,5	;RP0=0, select bank0
  6412  17BA  1303               	bcf	3,6	;RP1=0, select bank0
  6413  17BB  00BC               	movwf	??__div_to_l_
  6414  17BC  083C               	movf	??__div_to_l_,w
  6415  17BD  1683               	bsf	3,5	;RP0=1, select bank1
  6416  17BE  1303               	bcf	3,6	;RP1=0, select bank1
  6417  17BF  07A5               	addwf	__div_to_l_@exp1^(0+128),f
  6418  17C0  1903               	btfsc	3,2
  6419  17C1  2FE9               	goto	l3815
  6420  17C2  2FAD               	goto	l3805
  6421  17C3                     l3807:	
  6422  17C3  3020               	movlw	32
  6423  17C4  0225               	subwf	__div_to_l_@exp1^(0+128),w
  6424  17C5  1C03               	skipc
  6425  17C6  2FE4               	goto	l508
  6426  17C7  3000               	movlw	0
  6427  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  6428  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  6429  17CA  00B9               	movwf	?__div_to_l_+3
  6430  17CB  3000               	movlw	0
  6431  17CC  00B8               	movwf	?__div_to_l_+2
  6432  17CD  3000               	movlw	0
  6433  17CE  00B7               	movwf	?__div_to_l_+1
  6434  17CF  3000               	movlw	0
  6435  17D0  00B6               	movwf	?__div_to_l_
  6436  17D1  0008               	return
  6437  17D2                     l3813:	
  6438  17D2  3001               	movlw	1
  6439  17D3  1283               	bcf	3,5	;RP0=0, select bank0
  6440  17D4  00BC               	movwf	??__div_to_l_
  6441  17D5                     u5725:	
  6442  17D5  1003               	clrc
  6443  17D6  1683               	bsf	3,5	;RP0=1, select bank1
  6444  17D7  1303               	bcf	3,6	;RP1=0, select bank1
  6445  17D8  0DA0               	rlf	__div_to_l_@quot^(0+128),f
  6446  17D9  0DA1               	rlf	(__div_to_l_@quot+1)^(0+128),f
  6447  17DA  0DA2               	rlf	(__div_to_l_@quot+2)^(0+128),f
  6448  17DB  0DA3               	rlf	(__div_to_l_@quot+3)^(0+128),f
  6449  17DC  1283               	bcf	3,5	;RP0=0, select bank0
  6450  17DD  1303               	bcf	3,6	;RP1=0, select bank0
  6451  17DE  0BBC               	decfsz	??__div_to_l_,f
  6452  17DF  2FD5               	goto	u5725
  6453  17E0  3001               	movlw	1
  6454  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  6455  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  6456  17E3  02A5               	subwf	__div_to_l_@exp1^(0+128),f
  6457  17E4                     l508:	
  6458  17E4  1683               	bsf	3,5	;RP0=1, select bank1
  6459  17E5  1303               	bcf	3,6	;RP1=0, select bank1
  6460  17E6  0825               	movf	__div_to_l_@exp1^(0+128),w
  6461  17E7  1D03               	btfss	3,2
  6462  17E8  2FD2               	goto	l3813
  6463  17E9                     l3815:	
  6464  17E9  0823               	movf	(__div_to_l_@quot+3)^(0+128),w
  6465  17EA  1283               	bcf	3,5	;RP0=0, select bank0
  6466  17EB  1303               	bcf	3,6	;RP1=0, select bank0
  6467  17EC  00B9               	movwf	?__div_to_l_+3
  6468  17ED  1683               	bsf	3,5	;RP0=1, select bank1
  6469  17EE  1303               	bcf	3,6	;RP1=0, select bank1
  6470  17EF  0822               	movf	(__div_to_l_@quot+2)^(0+128),w
  6471  17F0  1283               	bcf	3,5	;RP0=0, select bank0
  6472  17F1  1303               	bcf	3,6	;RP1=0, select bank0
  6473  17F2  00B8               	movwf	?__div_to_l_+2
  6474  17F3  1683               	bsf	3,5	;RP0=1, select bank1
  6475  17F4  1303               	bcf	3,6	;RP1=0, select bank1
  6476  17F5  0821               	movf	(__div_to_l_@quot+1)^(0+128),w
  6477  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  6478  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  6479  17F8  00B7               	movwf	?__div_to_l_+1
  6480  17F9  1683               	bsf	3,5	;RP0=1, select bank1
  6481  17FA  1303               	bcf	3,6	;RP1=0, select bank1
  6482  17FB  0820               	movf	__div_to_l_@quot^(0+128),w
  6483  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  6484  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  6485  17FE  00B6               	movwf	?__div_to_l_
  6486  17FF  0008               	return
  6487  1800                     __end_of__div_to_l_:	
  6488                           
  6489                           	psect	text13
  6490  0800                     __ptext13:	
  6491 ;; *************** function ___wmul *****************
  6492 ;; Defined at:
  6493 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  multiplier      2   22[BANK0 ] unsigned int 
  6496 ;;  multiplicand    2   24[BANK0 ] unsigned int 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  product         2   26[BANK0 ] unsigned int 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  2   22[BANK0 ] unsigned int 
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6508 ;;      Params:         0       4       0       0       0
  6509 ;;      Locals:         0       2       0       0       0
  6510 ;;      Temps:          0       0       0       0       0
  6511 ;;      Totals:         0       6       0       0       0
  6512 ;;Total ram usage:        6 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    3
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_sprintf
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function ___wmul
  6524  0800                     ___wmul:	
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6528  0800  1283               	bcf	3,5	;RP0=0, select bank0
  6529  0801  1303               	bcf	3,6	;RP1=0, select bank0
  6530  0802  01BA               	clrf	___wmul@product
  6531  0803  01BB               	clrf	___wmul@product+1
  6532  0804                     l3821:	
  6533  0804  1C36               	btfss	___wmul@multiplier,0
  6534  0805  280C               	goto	l342
  6535  0806  0838               	movf	___wmul@multiplicand,w
  6536  0807  07BA               	addwf	___wmul@product,f
  6537  0808  1803               	skipnc
  6538  0809  0ABB               	incf	___wmul@product+1,f
  6539  080A  0839               	movf	___wmul@multiplicand+1,w
  6540  080B  07BB               	addwf	___wmul@product+1,f
  6541  080C                     l342:	
  6542  080C  3001               	movlw	1
  6543  080D                     u5755:	
  6544  080D  1003               	clrc
  6545  080E  0DB8               	rlf	___wmul@multiplicand,f
  6546  080F  0DB9               	rlf	___wmul@multiplicand+1,f
  6547  0810  3EFF               	addlw	-1
  6548  0811  1D03               	skipz
  6549  0812  280D               	goto	u5755
  6550  0813  3001               	movlw	1
  6551  0814                     u5765:	
  6552  0814  1003               	clrc
  6553  0815  0CB7               	rrf	___wmul@multiplier+1,f
  6554  0816  0CB6               	rrf	___wmul@multiplier,f
  6555  0817  3EFF               	addlw	-1
  6556  0818  1D03               	skipz
  6557  0819  2814               	goto	u5765
  6558  081A  0836               	movf	___wmul@multiplier,w
  6559  081B  0437               	iorwf	___wmul@multiplier+1,w
  6560  081C  1D03               	btfss	3,2
  6561  081D  2804               	goto	l3821
  6562  081E  083B               	movf	___wmul@product+1,w
  6563  081F  00B7               	movwf	?___wmul+1
  6564  0820  083A               	movf	___wmul@product,w
  6565  0821  00B6               	movwf	?___wmul
  6566  0822  0008               	return
  6567  0823                     __end_of___wmul:	
  6568                           
  6569                           	psect	text14
  6570  10A6                     __ptext14:	
  6571 ;; *************** function ___lltoft *****************
  6572 ;; Defined at:
  6573 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  c               4   30[BANK0 ] unsigned long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  exp             1   35[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  3   30[BANK0 ] float 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, pclath, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6587 ;;      Params:         0       4       0       0       0
  6588 ;;      Locals:         0       1       0       0       0
  6589 ;;      Temps:          0       1       0       0       0
  6590 ;;      Totals:         0       6       0       0       0
  6591 ;;Total ram usage:        6 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		___ftpack
  6596 ;; This function is called by:
  6597 ;;		_sprintf
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function ___lltoft
  6603  10A6                     ___lltoft:	
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  6607  10A6  308E               	movlw	142
  6608  10A7  1283               	bcf	3,5	;RP0=0, select bank0
  6609  10A8  1303               	bcf	3,6	;RP1=0, select bank0
  6610  10A9  00C2               	movwf	??___lltoft
  6611  10AA  0842               	movf	??___lltoft,w
  6612  10AB  00C3               	movwf	___lltoft@exp
  6613  10AC                     l3959:	
  6614  10AC  30FF               	movlw	255
  6615  10AD  0541               	andwf	___lltoft@c+3,w
  6616  10AE  1903               	btfsc	3,2
  6617  10AF  28BE               	goto	l3961
  6618  10B0  3001               	movlw	1
  6619  10B1                     u6085:	
  6620  10B1  1003               	clrc
  6621  10B2  0CC1               	rrf	___lltoft@c+3,f
  6622  10B3  0CC0               	rrf	___lltoft@c+2,f
  6623  10B4  0CBF               	rrf	___lltoft@c+1,f
  6624  10B5  0CBE               	rrf	___lltoft@c,f
  6625  10B6  3EFF               	addlw	-1
  6626  10B7  1D03               	skipz
  6627  10B8  28B1               	goto	u6085
  6628  10B9  3001               	movlw	1
  6629  10BA  00C2               	movwf	??___lltoft
  6630  10BB  0842               	movf	??___lltoft,w
  6631  10BC  07C3               	addwf	___lltoft@exp,f
  6632  10BD  28AC               	goto	l3959
  6633  10BE                     l3961:	
  6634  10BE  083E               	movf	___lltoft@c,w
  6635  10BF  00B6               	movwf	___ftpack@arg
  6636  10C0  083F               	movf	___lltoft@c+1,w
  6637  10C1  00B7               	movwf	___ftpack@arg+1
  6638  10C2  0840               	movf	___lltoft@c+2,w
  6639  10C3  00B8               	movwf	___ftpack@arg+2
  6640  10C4  0843               	movf	___lltoft@exp,w
  6641  10C5  00C2               	movwf	??___lltoft
  6642  10C6  0842               	movf	??___lltoft,w
  6643  10C7  00B9               	movwf	___ftpack@exp
  6644  10C8  01BA               	clrf	___ftpack@sign
  6645  10C9  160A  158A  2714   	fcall	___ftpack
  6646  10CC  1283               	bcf	3,5	;RP0=0, select bank0
  6647  10CD  1303               	bcf	3,6	;RP1=0, select bank0
  6648  10CE  0836               	movf	?___ftpack,w
  6649  10CF  00BE               	movwf	?___lltoft
  6650  10D0  0837               	movf	?___ftpack+1,w
  6651  10D1  00BF               	movwf	?___lltoft+1
  6652  10D2  0838               	movf	?___ftpack+2,w
  6653  10D3  00C0               	movwf	?___lltoft+2
  6654  10D4  0008               	return
  6655  10D5                     __end_of___lltoft:	
  6656                           
  6657                           	psect	text15
  6658  1CEA                     __ptext15:	
  6659 ;; *************** function ___llmod *****************
  6660 ;; Defined at:
  6661 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  divisor         4    0[BANK1 ] unsigned long 
  6664 ;;  dividend        4    4[BANK1 ] unsigned long 
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;  counter         1    9[BANK1 ] unsigned char 
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  4    0[BANK1 ] unsigned long 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6676 ;;      Params:         0       0       8       0       0
  6677 ;;      Locals:         0       0       1       0       0
  6678 ;;      Temps:          0       0       1       0       0
  6679 ;;      Totals:         0       0      10       0       0
  6680 ;;Total ram usage:       10 bytes
  6681 ;; Hardware stack levels used:    1
  6682 ;; Hardware stack levels required when called:    3
  6683 ;; This function calls:
  6684 ;;		Nothing
  6685 ;; This function is called by:
  6686 ;;		_sprintf
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           
  6691                           ;psect for function ___llmod
  6692  1CEA                     ___llmod:	
  6693                           
  6694                           ;incstack = 0
  6695                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6696  1CEA  1683               	bsf	3,5	;RP0=1, select bank1
  6697  1CEB  1303               	bcf	3,6	;RP1=0, select bank1
  6698  1CEC  0823               	movf	(___llmod@divisor+3)^(0+128),w
  6699  1CED  0422               	iorwf	(___llmod@divisor+2)^(0+128),w
  6700  1CEE  0421               	iorwf	(___llmod@divisor+1)^(0+128),w
  6701  1CEF  0420               	iorwf	___llmod@divisor^(0+128),w
  6702  1CF0  1903               	skipnz
  6703  1CF1  2D2F               	goto	l3951
  6704  1CF2  01A9               	clrf	___llmod@counter^(0+128)
  6705  1CF3  0AA9               	incf	___llmod@counter^(0+128),f
  6706  1CF4                     l3941:	
  6707  1CF4  1BA3               	btfsc	(___llmod@divisor+3)^(0+128),7
  6708  1CF5  2D04               	goto	l3943
  6709  1CF6  3001               	movlw	1
  6710  1CF7  00A8               	movwf	??___llmod^(0+128)
  6711  1CF8                     u6035:	
  6712  1CF8  1003               	clrc
  6713  1CF9  0DA0               	rlf	___llmod@divisor^(0+128),f
  6714  1CFA  0DA1               	rlf	(___llmod@divisor+1)^(0+128),f
  6715  1CFB  0DA2               	rlf	(___llmod@divisor+2)^(0+128),f
  6716  1CFC  0DA3               	rlf	(___llmod@divisor+3)^(0+128),f
  6717  1CFD  0BA8               	decfsz	??___llmod^(0+128),f
  6718  1CFE  2CF8               	goto	u6035
  6719  1CFF  3001               	movlw	1
  6720  1D00  00A8               	movwf	??___llmod^(0+128)
  6721  1D01  0828               	movf	??___llmod^(0+128),w
  6722  1D02  07A9               	addwf	___llmod@counter^(0+128),f
  6723  1D03  2CF4               	goto	l3941
  6724  1D04                     l3943:	
  6725  1D04  0823               	movf	(___llmod@divisor+3)^(0+128),w
  6726  1D05  0227               	subwf	(___llmod@dividend+3)^(0+128),w
  6727  1D06  1D03               	skipz
  6728  1D07  2D12               	goto	u6055
  6729  1D08  0822               	movf	(___llmod@divisor+2)^(0+128),w
  6730  1D09  0226               	subwf	(___llmod@dividend+2)^(0+128),w
  6731  1D0A  1D03               	skipz
  6732  1D0B  2D12               	goto	u6055
  6733  1D0C  0821               	movf	(___llmod@divisor+1)^(0+128),w
  6734  1D0D  0225               	subwf	(___llmod@dividend+1)^(0+128),w
  6735  1D0E  1D03               	skipz
  6736  1D0F  2D12               	goto	u6055
  6737  1D10  0820               	movf	___llmod@divisor^(0+128),w
  6738  1D11  0224               	subwf	___llmod@dividend^(0+128),w
  6739  1D12                     u6055:	
  6740  1D12  1C03               	skipc
  6741  1D13  2D22               	goto	l3947
  6742  1D14  0820               	movf	___llmod@divisor^(0+128),w
  6743  1D15  02A4               	subwf	___llmod@dividend^(0+128),f
  6744  1D16  0821               	movf	(___llmod@divisor+1)^(0+128),w
  6745  1D17  1C03               	skipc
  6746  1D18  0F21               	incfsz	(___llmod@divisor+1)^(0+128),w
  6747  1D19  02A5               	subwf	(___llmod@dividend+1)^(0+128),f
  6748  1D1A  0822               	movf	(___llmod@divisor+2)^(0+128),w
  6749  1D1B  1C03               	skipc
  6750  1D1C  0F22               	incfsz	(___llmod@divisor+2)^(0+128),w
  6751  1D1D  02A6               	subwf	(___llmod@dividend+2)^(0+128),f
  6752  1D1E  0823               	movf	(___llmod@divisor+3)^(0+128),w
  6753  1D1F  1C03               	skipc
  6754  1D20  0F23               	incfsz	(___llmod@divisor+3)^(0+128),w
  6755  1D21  02A7               	subwf	(___llmod@dividend+3)^(0+128),f
  6756  1D22                     l3947:	
  6757  1D22  3001               	movlw	1
  6758  1D23                     u6065:	
  6759  1D23  1003               	clrc
  6760  1D24  0CA3               	rrf	(___llmod@divisor+3)^(0+128),f
  6761  1D25  0CA2               	rrf	(___llmod@divisor+2)^(0+128),f
  6762  1D26  0CA1               	rrf	(___llmod@divisor+1)^(0+128),f
  6763  1D27  0CA0               	rrf	___llmod@divisor^(0+128),f
  6764  1D28  3EFF               	addlw	-1
  6765  1D29  1D03               	skipz
  6766  1D2A  2D23               	goto	u6065
  6767  1D2B  3001               	movlw	1
  6768  1D2C  02A9               	subwf	___llmod@counter^(0+128),f
  6769  1D2D  1D03               	btfss	3,2
  6770  1D2E  2D04               	goto	l3943
  6771  1D2F                     l3951:	
  6772  1D2F  0827               	movf	(___llmod@dividend+3)^(0+128),w
  6773  1D30  00A3               	movwf	(?___llmod+3)^(0+128)
  6774  1D31  0826               	movf	(___llmod@dividend+2)^(0+128),w
  6775  1D32  00A2               	movwf	(?___llmod+2)^(0+128)
  6776  1D33  0825               	movf	(___llmod@dividend+1)^(0+128),w
  6777  1D34  00A1               	movwf	(?___llmod+1)^(0+128)
  6778  1D35  0824               	movf	___llmod@dividend^(0+128),w
  6779  1D36  00A0               	movwf	?___llmod^(0+128)
  6780  1D37  0008               	return
  6781  1D38                     __end_of___llmod:	
  6782                           
  6783                           	psect	text16
  6784  1E48                     __ptext16:	
  6785 ;; *************** function ___lldiv *****************
  6786 ;; Defined at:
  6787 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  divisor         4   22[BANK0 ] unsigned long 
  6790 ;;  dividend        4   26[BANK0 ] unsigned long 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;  quotient        4   31[BANK0 ] unsigned long 
  6793 ;;  counter         1   35[BANK0 ] unsigned char 
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  4   22[BANK0 ] unsigned long 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6803 ;;      Params:         0       8       0       0       0
  6804 ;;      Locals:         0       5       0       0       0
  6805 ;;      Temps:          0       1       0       0       0
  6806 ;;      Totals:         0      14       0       0       0
  6807 ;;Total ram usage:       14 bytes
  6808 ;; Hardware stack levels used:    1
  6809 ;; Hardware stack levels required when called:    3
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_sprintf
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           
  6818                           ;psect for function ___lldiv
  6819  1E48                     ___lldiv:	
  6820                           
  6821                           ;incstack = 0
  6822                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6823  1E48  3000               	movlw	0
  6824  1E49  1283               	bcf	3,5	;RP0=0, select bank0
  6825  1E4A  1303               	bcf	3,6	;RP1=0, select bank0
  6826  1E4B  00C2               	movwf	___lldiv@quotient+3
  6827  1E4C  3000               	movlw	0
  6828  1E4D  00C1               	movwf	___lldiv@quotient+2
  6829  1E4E  3000               	movlw	0
  6830  1E4F  00C0               	movwf	___lldiv@quotient+1
  6831  1E50  3000               	movlw	0
  6832  1E51  00BF               	movwf	___lldiv@quotient
  6833  1E52  0839               	movf	___lldiv@divisor+3,w
  6834  1E53  0438               	iorwf	___lldiv@divisor+2,w
  6835  1E54  0437               	iorwf	___lldiv@divisor+1,w
  6836  1E55  0436               	iorwf	___lldiv@divisor,w
  6837  1E56  1903               	skipnz
  6838  1E57  2E9F               	goto	l3931
  6839  1E58  01C3               	clrf	___lldiv@counter
  6840  1E59  0AC3               	incf	___lldiv@counter,f
  6841  1E5A                     l3917:	
  6842  1E5A  1BB9               	btfsc	___lldiv@divisor+3,7
  6843  1E5B  2E6A               	goto	l3919
  6844  1E5C  3001               	movlw	1
  6845  1E5D  00BE               	movwf	??___lldiv
  6846  1E5E                     u5965:	
  6847  1E5E  1003               	clrc
  6848  1E5F  0DB6               	rlf	___lldiv@divisor,f
  6849  1E60  0DB7               	rlf	___lldiv@divisor+1,f
  6850  1E61  0DB8               	rlf	___lldiv@divisor+2,f
  6851  1E62  0DB9               	rlf	___lldiv@divisor+3,f
  6852  1E63  0BBE               	decfsz	??___lldiv,f
  6853  1E64  2E5E               	goto	u5965
  6854  1E65  3001               	movlw	1
  6855  1E66  00BE               	movwf	??___lldiv
  6856  1E67  083E               	movf	??___lldiv,w
  6857  1E68  07C3               	addwf	___lldiv@counter,f
  6858  1E69  2E5A               	goto	l3917
  6859  1E6A                     l3919:	
  6860  1E6A  3001               	movlw	1
  6861  1E6B  00BE               	movwf	??___lldiv
  6862  1E6C                     u5985:	
  6863  1E6C  1003               	clrc
  6864  1E6D  0DBF               	rlf	___lldiv@quotient,f
  6865  1E6E  0DC0               	rlf	___lldiv@quotient+1,f
  6866  1E6F  0DC1               	rlf	___lldiv@quotient+2,f
  6867  1E70  0DC2               	rlf	___lldiv@quotient+3,f
  6868  1E71  0BBE               	decfsz	??___lldiv,f
  6869  1E72  2E6C               	goto	u5985
  6870  1E73  0839               	movf	___lldiv@divisor+3,w
  6871  1E74  023D               	subwf	___lldiv@dividend+3,w
  6872  1E75  1D03               	skipz
  6873  1E76  2E81               	goto	u5995
  6874  1E77  0838               	movf	___lldiv@divisor+2,w
  6875  1E78  023C               	subwf	___lldiv@dividend+2,w
  6876  1E79  1D03               	skipz
  6877  1E7A  2E81               	goto	u5995
  6878  1E7B  0837               	movf	___lldiv@divisor+1,w
  6879  1E7C  023B               	subwf	___lldiv@dividend+1,w
  6880  1E7D  1D03               	skipz
  6881  1E7E  2E81               	goto	u5995
  6882  1E7F  0836               	movf	___lldiv@divisor,w
  6883  1E80  023A               	subwf	___lldiv@dividend,w
  6884  1E81                     u5995:	
  6885  1E81  1C03               	skipc
  6886  1E82  2E92               	goto	l3927
  6887  1E83  0836               	movf	___lldiv@divisor,w
  6888  1E84  02BA               	subwf	___lldiv@dividend,f
  6889  1E85  0837               	movf	___lldiv@divisor+1,w
  6890  1E86  1C03               	skipc
  6891  1E87  0F37               	incfsz	___lldiv@divisor+1,w
  6892  1E88  02BB               	subwf	___lldiv@dividend+1,f
  6893  1E89  0838               	movf	___lldiv@divisor+2,w
  6894  1E8A  1C03               	skipc
  6895  1E8B  0F38               	incfsz	___lldiv@divisor+2,w
  6896  1E8C  02BC               	subwf	___lldiv@dividend+2,f
  6897  1E8D  0839               	movf	___lldiv@divisor+3,w
  6898  1E8E  1C03               	skipc
  6899  1E8F  0F39               	incfsz	___lldiv@divisor+3,w
  6900  1E90  02BD               	subwf	___lldiv@dividend+3,f
  6901  1E91  143F               	bsf	___lldiv@quotient,0
  6902  1E92                     l3927:	
  6903  1E92  3001               	movlw	1
  6904  1E93                     u6005:	
  6905  1E93  1003               	clrc
  6906  1E94  0CB9               	rrf	___lldiv@divisor+3,f
  6907  1E95  0CB8               	rrf	___lldiv@divisor+2,f
  6908  1E96  0CB7               	rrf	___lldiv@divisor+1,f
  6909  1E97  0CB6               	rrf	___lldiv@divisor,f
  6910  1E98  3EFF               	addlw	-1
  6911  1E99  1D03               	skipz
  6912  1E9A  2E93               	goto	u6005
  6913  1E9B  3001               	movlw	1
  6914  1E9C  02C3               	subwf	___lldiv@counter,f
  6915  1E9D  1D03               	btfss	3,2
  6916  1E9E  2E6A               	goto	l3919
  6917  1E9F                     l3931:	
  6918  1E9F  0842               	movf	___lldiv@quotient+3,w
  6919  1EA0  00B9               	movwf	?___lldiv+3
  6920  1EA1  0841               	movf	___lldiv@quotient+2,w
  6921  1EA2  00B8               	movwf	?___lldiv+2
  6922  1EA3  0840               	movf	___lldiv@quotient+1,w
  6923  1EA4  00B7               	movwf	?___lldiv+1
  6924  1EA5  083F               	movf	___lldiv@quotient,w
  6925  1EA6  00B6               	movwf	?___lldiv
  6926  1EA7  0008               	return
  6927  1EA8                     __end_of___lldiv:	
  6928                           
  6929                           	psect	text17
  6930  10D5                     __ptext17:	
  6931 ;; *************** function ___fttol *****************
  6932 ;; Defined at:
  6933 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  f1              3   31[BANK1 ] float 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  lval            4   40[BANK1 ] unsigned long 
  6938 ;;  exp1            1   44[BANK1 ] unsigned char 
  6939 ;;  sign1           1   39[BANK1 ] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  4   31[BANK1 ] long 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6949 ;;      Params:         0       0       4       0       0
  6950 ;;      Locals:         0       0       6       0       0
  6951 ;;      Temps:          0       0       4       0       0
  6952 ;;      Totals:         0       0      14       0       0
  6953 ;;Total ram usage:       14 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    3
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_sprintf
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           
  6964                           ;psect for function ___fttol
  6965  10D5                     ___fttol:	
  6966                           
  6967                           ;incstack = 0
  6968                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6969  10D5  1683               	bsf	3,5	;RP0=1, select bank1
  6970  10D6  1303               	bcf	3,6	;RP1=0, select bank1
  6971  10D7  083F               	movf	___fttol@f1^(0+128),w
  6972  10D8  00C3               	movwf	??___fttol^(0+128)
  6973  10D9  0840               	movf	(___fttol@f1+1)^(0+128),w
  6974  10DA  00C4               	movwf	(??___fttol^(0+128)+1)
  6975  10DB  0841               	movf	(___fttol@f1+2)^(0+128),w
  6976  10DC  00C5               	movwf	(??___fttol^(0+128)+2)
  6977  10DD  1003               	clrc
  6978  10DE  0D44               	rlf	(??___fttol^(0+128)+1),w
  6979  10DF  0D45               	rlf	(??___fttol^(0+128)+2),w
  6980  10E0  00C6               	movwf	(??___fttol+3)^(0+128)
  6981  10E1  0846               	movf	(??___fttol+3)^(0+128),w
  6982  10E2  00CC               	movwf	___fttol@exp1^(0+128)
  6983  10E3  084C               	movf	___fttol@exp1^(0+128),w
  6984  10E4  1D03               	btfss	3,2
  6985  10E5  28EF               	goto	l3875
  6986  10E6  3000               	movlw	0
  6987  10E7  00C2               	movwf	(?___fttol+3)^(0+128)
  6988  10E8  3000               	movlw	0
  6989  10E9  00C1               	movwf	(?___fttol+2)^(0+128)
  6990  10EA  3000               	movlw	0
  6991  10EB  00C0               	movwf	(?___fttol+1)^(0+128)
  6992  10EC  3000               	movlw	0
  6993  10ED  00BF               	movwf	?___fttol^(0+128)
  6994  10EE  0008               	return
  6995  10EF                     l3875:	
  6996  10EF  083F               	movf	___fttol@f1^(0+128),w
  6997  10F0  00C3               	movwf	??___fttol^(0+128)
  6998  10F1  0840               	movf	(___fttol@f1+1)^(0+128),w
  6999  10F2  00C4               	movwf	(??___fttol^(0+128)+1)
  7000  10F3  0841               	movf	(___fttol@f1+2)^(0+128),w
  7001  10F4  00C5               	movwf	(??___fttol^(0+128)+2)
  7002  10F5  3017               	movlw	23
  7003  10F6                     u5865:	
  7004  10F6  1003               	clrc
  7005  10F7  0CC5               	rrf	(??___fttol^(0+128)+2),f
  7006  10F8  0CC4               	rrf	(??___fttol^(0+128)+1),f
  7007  10F9  0CC3               	rrf	??___fttol^(0+128),f
  7008  10FA  3EFF               	addlw	-1
  7009  10FB  1D03               	skipz
  7010  10FC  28F6               	goto	u5865
  7011  10FD  0843               	movf	??___fttol^(0+128),w
  7012  10FE  00C6               	movwf	(??___fttol+3)^(0+128)
  7013  10FF  0846               	movf	(??___fttol+3)^(0+128),w
  7014  1100  00C7               	movwf	___fttol@sign1^(0+128)
  7015  1101  17C0               	bsf	(___fttol@f1^(0+128)+1),7
  7016  1102  30FF               	movlw	255
  7017  1103  05BF               	andwf	___fttol@f1^(0+128),f
  7018  1104  30FF               	movlw	255
  7019  1105  05C0               	andwf	(___fttol@f1+1)^(0+128),f
  7020  1106  3000               	movlw	0
  7021  1107  05C1               	andwf	(___fttol@f1+2)^(0+128),f
  7022  1108  083F               	movf	___fttol@f1^(0+128),w
  7023  1109  00C8               	movwf	___fttol@lval^(0+128)
  7024  110A  0840               	movf	(___fttol@f1+1)^(0+128),w
  7025  110B  00C9               	movwf	(___fttol@lval^(0+128)+1)
  7026  110C  0841               	movf	(___fttol@f1+2)^(0+128),w
  7027  110D  00CA               	movwf	(___fttol@lval^(0+128)+2)
  7028  110E  01CB               	clrf	(___fttol@lval^(0+128)+3)
  7029  110F  308E               	movlw	142
  7030  1110  02CC               	subwf	___fttol@exp1^(0+128),f
  7031  1111  1FCC               	btfss	___fttol@exp1^(0+128),7
  7032  1112  2931               	goto	l3895
  7033  1113  084C               	movf	___fttol@exp1^(0+128),w
  7034  1114  3A80               	xorlw	128
  7035  1115  3E8F               	addlw	143
  7036  1116  1803               	skipnc
  7037  1117  2921               	goto	l3893
  7038  1118  3000               	movlw	0
  7039  1119  00C2               	movwf	(?___fttol+3)^(0+128)
  7040  111A  3000               	movlw	0
  7041  111B  00C1               	movwf	(?___fttol+2)^(0+128)
  7042  111C  3000               	movlw	0
  7043  111D  00C0               	movwf	(?___fttol+1)^(0+128)
  7044  111E  3000               	movlw	0
  7045  111F  00BF               	movwf	?___fttol^(0+128)
  7046  1120  0008               	return
  7047  1121                     l3893:	
  7048  1121  3001               	movlw	1
  7049  1122                     u5895:	
  7050  1122  1003               	clrc
  7051  1123  0CCB               	rrf	(___fttol@lval+3)^(0+128),f
  7052  1124  0CCA               	rrf	(___fttol@lval+2)^(0+128),f
  7053  1125  0CC9               	rrf	(___fttol@lval+1)^(0+128),f
  7054  1126  0CC8               	rrf	___fttol@lval^(0+128),f
  7055  1127  3EFF               	addlw	-1
  7056  1128  1D03               	skipz
  7057  1129  2922               	goto	u5895
  7058  112A  3001               	movlw	1
  7059  112B  00C3               	movwf	??___fttol^(0+128)
  7060  112C  0843               	movf	??___fttol^(0+128),w
  7061  112D  07CC               	addwf	___fttol@exp1^(0+128),f
  7062  112E  1903               	btfsc	3,2
  7063  112F  294C               	goto	l3903
  7064  1130  2921               	goto	l3893
  7065  1131                     l3895:	
  7066  1131  3018               	movlw	24
  7067  1132  024C               	subwf	___fttol@exp1^(0+128),w
  7068  1133  1C03               	skipc
  7069  1134  2949               	goto	l628
  7070  1135  3000               	movlw	0
  7071  1136  00C2               	movwf	(?___fttol+3)^(0+128)
  7072  1137  3000               	movlw	0
  7073  1138  00C1               	movwf	(?___fttol+2)^(0+128)
  7074  1139  3000               	movlw	0
  7075  113A  00C0               	movwf	(?___fttol+1)^(0+128)
  7076  113B  3000               	movlw	0
  7077  113C  00BF               	movwf	?___fttol^(0+128)
  7078  113D  0008               	return
  7079  113E                     l3901:	
  7080  113E  3001               	movlw	1
  7081  113F  00C3               	movwf	??___fttol^(0+128)
  7082  1140                     u5925:	
  7083  1140  1003               	clrc
  7084  1141  0DC8               	rlf	___fttol@lval^(0+128),f
  7085  1142  0DC9               	rlf	(___fttol@lval+1)^(0+128),f
  7086  1143  0DCA               	rlf	(___fttol@lval+2)^(0+128),f
  7087  1144  0DCB               	rlf	(___fttol@lval+3)^(0+128),f
  7088  1145  0BC3               	decfsz	??___fttol^(0+128),f
  7089  1146  2940               	goto	u5925
  7090  1147  3001               	movlw	1
  7091  1148  02CC               	subwf	___fttol@exp1^(0+128),f
  7092  1149                     l628:	
  7093  1149  084C               	movf	___fttol@exp1^(0+128),w
  7094  114A  1D03               	btfss	3,2
  7095  114B  293E               	goto	l3901
  7096  114C                     l3903:	
  7097  114C  0847               	movf	___fttol@sign1^(0+128),w
  7098  114D  1903               	btfsc	3,2
  7099  114E  295A               	goto	l3907
  7100  114F  09C8               	comf	___fttol@lval^(0+128),f
  7101  1150  09C9               	comf	(___fttol@lval+1)^(0+128),f
  7102  1151  09CA               	comf	(___fttol@lval+2)^(0+128),f
  7103  1152  09CB               	comf	(___fttol@lval+3)^(0+128),f
  7104  1153  0AC8               	incf	___fttol@lval^(0+128),f
  7105  1154  1903               	skipnz
  7106  1155  0AC9               	incf	(___fttol@lval+1)^(0+128),f
  7107  1156  1903               	skipnz
  7108  1157  0ACA               	incf	(___fttol@lval+2)^(0+128),f
  7109  1158  1903               	skipnz
  7110  1159  0ACB               	incf	(___fttol@lval+3)^(0+128),f
  7111  115A                     l3907:	
  7112  115A  084B               	movf	(___fttol@lval+3)^(0+128),w
  7113  115B  00C2               	movwf	(?___fttol+3)^(0+128)
  7114  115C  084A               	movf	(___fttol@lval+2)^(0+128),w
  7115  115D  00C1               	movwf	(?___fttol+2)^(0+128)
  7116  115E  0849               	movf	(___fttol@lval+1)^(0+128),w
  7117  115F  00C0               	movwf	(?___fttol+1)^(0+128)
  7118  1160  0848               	movf	___fttol@lval^(0+128),w
  7119  1161  00BF               	movwf	?___fttol^(0+128)
  7120  1162  0008               	return
  7121  1163                     __end_of___fttol:	
  7122                           
  7123                           	psect	text18
  7124  1B9E                     __ptext18:	
  7125 ;; *************** function ___ftsub *****************
  7126 ;; Defined at:
  7127 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  f2              3   51[BANK1 ] float 
  7130 ;;  f1              3   54[BANK1 ] float 
  7131 ;; Auto vars:     Size  Location     Type
  7132 ;;		None
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  3   51[BANK1 ] float 
  7135 ;; Registers used:
  7136 ;;		wreg, status,2, status,0, pclath, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7142 ;;      Params:         0       0       6       0       0
  7143 ;;      Locals:         0       0       0       0       0
  7144 ;;      Temps:          0       0       0       0       0
  7145 ;;      Totals:         0       0       6       0       0
  7146 ;;Total ram usage:        6 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    5
  7149 ;; This function calls:
  7150 ;;		___ftadd
  7151 ;; This function is called by:
  7152 ;;		_sprintf
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           
  7157                           ;psect for function ___ftsub
  7158  1B9E                     ___ftsub:	
  7159                           
  7160                           ;incstack = 0
  7161                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  7162  1B9E  1683               	bsf	3,5	;RP0=1, select bank1
  7163  1B9F  1303               	bcf	3,6	;RP1=0, select bank1
  7164  1BA0  0855               	movf	(___ftsub@f2+2)^(0+128),w
  7165  1BA1  0454               	iorwf	(___ftsub@f2+1)^(0+128),w
  7166  1BA2  0453               	iorwf	___ftsub@f2^(0+128),w
  7167  1BA3  1903               	skipnz
  7168  1BA4  2BA7               	goto	l3865
  7169  1BA5  3080               	movlw	128
  7170  1BA6  06D5               	xorwf	(___ftsub@f2+2)^(0+128),f
  7171  1BA7                     l3865:	
  7172  1BA7  0856               	movf	___ftsub@f1^(0+128),w
  7173  1BA8  00C6               	movwf	___ftadd@f1^(0+128)
  7174  1BA9  0857               	movf	(___ftsub@f1+1)^(0+128),w
  7175  1BAA  00C7               	movwf	(___ftadd@f1+1)^(0+128)
  7176  1BAB  0858               	movf	(___ftsub@f1+2)^(0+128),w
  7177  1BAC  00C8               	movwf	(___ftadd@f1+2)^(0+128)
  7178  1BAD  0853               	movf	___ftsub@f2^(0+128),w
  7179  1BAE  00C9               	movwf	___ftadd@f2^(0+128)
  7180  1BAF  0854               	movf	(___ftsub@f2+1)^(0+128),w
  7181  1BB0  00CA               	movwf	(___ftadd@f2+1)^(0+128)
  7182  1BB1  0855               	movf	(___ftsub@f2+2)^(0+128),w
  7183  1BB2  00CB               	movwf	(___ftadd@f2+2)^(0+128)
  7184  1BB3  160A  118A  2429   	fcall	___ftadd
  7185  1BB6  1683               	bsf	3,5	;RP0=1, select bank1
  7186  1BB7  1303               	bcf	3,6	;RP1=0, select bank1
  7187  1BB8  0846               	movf	?___ftadd^(0+128),w
  7188  1BB9  00D3               	movwf	?___ftsub^(0+128)
  7189  1BBA  0847               	movf	(?___ftadd+1)^(0+128),w
  7190  1BBB  00D4               	movwf	(?___ftsub+1)^(0+128)
  7191  1BBC  0848               	movf	(?___ftadd+2)^(0+128),w
  7192  1BBD  00D5               	movwf	(?___ftsub+2)^(0+128)
  7193  1BBE  0008               	return
  7194  1BBF                     __end_of___ftsub:	
  7195                           
  7196                           	psect	text19
  7197  1429                     __ptext19:	
  7198 ;; *************** function ___ftadd *****************
  7199 ;; Defined at:
  7200 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  f1              3   38[BANK1 ] float 
  7203 ;;  f2              3   41[BANK1 ] float 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  exp1            1   50[BANK1 ] unsigned char 
  7206 ;;  exp2            1   49[BANK1 ] unsigned char 
  7207 ;;  sign            1   48[BANK1 ] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  3   38[BANK1 ] float 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0, pclath, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7217 ;;      Params:         0       0       6       0       0
  7218 ;;      Locals:         0       0       3       0       0
  7219 ;;      Temps:          0       0       4       0       0
  7220 ;;      Totals:         0       0      13       0       0
  7221 ;;Total ram usage:       13 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    4
  7224 ;; This function calls:
  7225 ;;		___ftpack
  7226 ;; This function is called by:
  7227 ;;		_sprintf
  7228 ;;		___ftsub
  7229 ;; This function uses a non-reentrant model
  7230 ;;
  7231                           
  7232                           
  7233                           ;psect for function ___ftadd
  7234  1429                     ___ftadd:	
  7235                           
  7236                           ;incstack = 0
  7237                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7238  1429  1683               	bsf	3,5	;RP0=1, select bank1
  7239  142A  1303               	bcf	3,6	;RP1=0, select bank1
  7240  142B  0846               	movf	___ftadd@f1^(0+128),w
  7241  142C  00CC               	movwf	??___ftadd^(0+128)
  7242  142D  0847               	movf	(___ftadd@f1+1)^(0+128),w
  7243  142E  00CD               	movwf	(??___ftadd^(0+128)+1)
  7244  142F  0848               	movf	(___ftadd@f1+2)^(0+128),w
  7245  1430  00CE               	movwf	(??___ftadd^(0+128)+2)
  7246  1431  1003               	clrc
  7247  1432  0D4D               	rlf	(??___ftadd^(0+128)+1),w
  7248  1433  0D4E               	rlf	(??___ftadd^(0+128)+2),w
  7249  1434  00CF               	movwf	(??___ftadd+3)^(0+128)
  7250  1435  084F               	movf	(??___ftadd+3)^(0+128),w
  7251  1436  00D2               	movwf	___ftadd@exp1^(0+128)
  7252  1437  0849               	movf	___ftadd@f2^(0+128),w
  7253  1438  00CC               	movwf	??___ftadd^(0+128)
  7254  1439  084A               	movf	(___ftadd@f2+1)^(0+128),w
  7255  143A  00CD               	movwf	(??___ftadd^(0+128)+1)
  7256  143B  084B               	movf	(___ftadd@f2+2)^(0+128),w
  7257  143C  00CE               	movwf	(??___ftadd^(0+128)+2)
  7258  143D  1003               	clrc
  7259  143E  0D4D               	rlf	(??___ftadd^(0+128)+1),w
  7260  143F  0D4E               	rlf	(??___ftadd^(0+128)+2),w
  7261  1440  00CF               	movwf	(??___ftadd+3)^(0+128)
  7262  1441  084F               	movf	(??___ftadd+3)^(0+128),w
  7263  1442  00D1               	movwf	___ftadd@exp2^(0+128)
  7264  1443  0852               	movf	___ftadd@exp1^(0+128),w
  7265  1444  1903               	btfsc	3,2
  7266  1445  2C52               	goto	l3527
  7267  1446  0851               	movf	___ftadd@exp2^(0+128),w
  7268  1447  0252               	subwf	___ftadd@exp1^(0+128),w
  7269  1448  1803               	skipnc
  7270  1449  2C59               	goto	l3531
  7271  144A  0352               	decf	___ftadd@exp1^(0+128),w
  7272  144B  3AFF               	xorlw	255
  7273  144C  0751               	addwf	___ftadd@exp2^(0+128),w
  7274  144D  00CC               	movwf	??___ftadd^(0+128)
  7275  144E  3019               	movlw	25
  7276  144F  024C               	subwf	??___ftadd^(0+128),w
  7277  1450  1C03               	skipc
  7278  1451  2C59               	goto	l3531
  7279  1452                     l3527:	
  7280  1452  0849               	movf	___ftadd@f2^(0+128),w
  7281  1453  00C6               	movwf	?___ftadd^(0+128)
  7282  1454  084A               	movf	(___ftadd@f2+1)^(0+128),w
  7283  1455  00C7               	movwf	(?___ftadd+1)^(0+128)
  7284  1456  084B               	movf	(___ftadd@f2+2)^(0+128),w
  7285  1457  00C8               	movwf	(?___ftadd+2)^(0+128)
  7286  1458  0008               	return
  7287  1459                     l3531:	
  7288  1459  0851               	movf	___ftadd@exp2^(0+128),w
  7289  145A  1903               	btfsc	3,2
  7290  145B  0008               	return
  7291  145C  0852               	movf	___ftadd@exp1^(0+128),w
  7292  145D  0251               	subwf	___ftadd@exp2^(0+128),w
  7293  145E  1803               	skipnc
  7294  145F  2C68               	goto	l3537
  7295  1460  0351               	decf	___ftadd@exp2^(0+128),w
  7296  1461  3AFF               	xorlw	255
  7297  1462  0752               	addwf	___ftadd@exp1^(0+128),w
  7298  1463  00CC               	movwf	??___ftadd^(0+128)
  7299  1464  3019               	movlw	25
  7300  1465  024C               	subwf	??___ftadd^(0+128),w
  7301  1466  1803               	btfsc	3,0
  7302  1467  0008               	return
  7303  1468                     l3537:	
  7304  1468  3006               	movlw	6
  7305  1469  00CC               	movwf	??___ftadd^(0+128)
  7306  146A  084C               	movf	??___ftadd^(0+128),w
  7307  146B  00D0               	movwf	___ftadd@sign^(0+128)
  7308  146C  1BC8               	btfsc	(___ftadd@f1+2)^(0+128),7
  7309  146D  17D0               	bsf	___ftadd@sign^(0+128),7
  7310  146E  1BCB               	btfsc	(___ftadd@f2+2)^(0+128),7
  7311  146F  1750               	bsf	___ftadd@sign^(0+128),6
  7312  1470  17C7               	bsf	(___ftadd@f1^(0+128)+1),7
  7313  1471  30FF               	movlw	255
  7314  1472  05C6               	andwf	___ftadd@f1^(0+128),f
  7315  1473  30FF               	movlw	255
  7316  1474  05C7               	andwf	(___ftadd@f1+1)^(0+128),f
  7317  1475  3000               	movlw	0
  7318  1476  05C8               	andwf	(___ftadd@f1+2)^(0+128),f
  7319  1477  17CA               	bsf	(___ftadd@f2^(0+128)+1),7
  7320  1478  30FF               	movlw	255
  7321  1479  05C9               	andwf	___ftadd@f2^(0+128),f
  7322  147A  30FF               	movlw	255
  7323  147B  05CA               	andwf	(___ftadd@f2+1)^(0+128),f
  7324  147C  3000               	movlw	0
  7325  147D  05CB               	andwf	(___ftadd@f2+2)^(0+128),f
  7326  147E  0851               	movf	___ftadd@exp2^(0+128),w
  7327  147F  0252               	subwf	___ftadd@exp1^(0+128),w
  7328  1480  1803               	skipnc
  7329  1481  2CA8               	goto	l3559
  7330  1482                     l3549:	
  7331  1482  3001               	movlw	1
  7332  1483                     u5115:	
  7333  1483  1003               	clrc
  7334  1484  0DC9               	rlf	___ftadd@f2^(0+128),f
  7335  1485  0DCA               	rlf	(___ftadd@f2+1)^(0+128),f
  7336  1486  0DCB               	rlf	(___ftadd@f2+2)^(0+128),f
  7337  1487  3EFF               	addlw	-1
  7338  1488  1D03               	skipz
  7339  1489  2C83               	goto	u5115
  7340  148A  3001               	movlw	1
  7341  148B  02D1               	subwf	___ftadd@exp2^(0+128),f
  7342  148C  0851               	movf	___ftadd@exp2^(0+128),w
  7343  148D  0652               	xorwf	___ftadd@exp1^(0+128),w
  7344  148E  1903               	skipnz
  7345  148F  2CA3               	goto	l3557
  7346  1490  3001               	movlw	1
  7347  1491  02D0               	subwf	___ftadd@sign^(0+128),f
  7348  1492  0850               	movf	___ftadd@sign^(0+128),w
  7349  1493  3907               	andlw	7
  7350  1494  1903               	btfsc	3,2
  7351  1495  2CA3               	goto	l3557
  7352  1496  2C82               	goto	l3549
  7353  1497                     l3555:	
  7354  1497  3001               	movlw	1
  7355  1498                     u5145:	
  7356  1498  1003               	clrc
  7357  1499  0CC8               	rrf	(___ftadd@f1+2)^(0+128),f
  7358  149A  0CC7               	rrf	(___ftadd@f1+1)^(0+128),f
  7359  149B  0CC6               	rrf	___ftadd@f1^(0+128),f
  7360  149C  3EFF               	addlw	-1
  7361  149D  1D03               	skipz
  7362  149E  2C98               	goto	u5145
  7363  149F  3001               	movlw	1
  7364  14A0  00CC               	movwf	??___ftadd^(0+128)
  7365  14A1  084C               	movf	??___ftadd^(0+128),w
  7366  14A2  07D2               	addwf	___ftadd@exp1^(0+128),f
  7367  14A3                     l3557:	
  7368  14A3  0852               	movf	___ftadd@exp1^(0+128),w
  7369  14A4  0651               	xorwf	___ftadd@exp2^(0+128),w
  7370  14A5  1903               	btfsc	3,2
  7371  14A6  2CD1               	goto	l551
  7372  14A7  2C97               	goto	l3555
  7373  14A8                     l3559:	
  7374  14A8  0852               	movf	___ftadd@exp1^(0+128),w
  7375  14A9  0251               	subwf	___ftadd@exp2^(0+128),w
  7376  14AA  1803               	skipnc
  7377  14AB  2CD1               	goto	l551
  7378  14AC                     l3561:	
  7379  14AC  3001               	movlw	1
  7380  14AD                     u5175:	
  7381  14AD  1003               	clrc
  7382  14AE  0DC6               	rlf	___ftadd@f1^(0+128),f
  7383  14AF  0DC7               	rlf	(___ftadd@f1+1)^(0+128),f
  7384  14B0  0DC8               	rlf	(___ftadd@f1+2)^(0+128),f
  7385  14B1  3EFF               	addlw	-1
  7386  14B2  1D03               	skipz
  7387  14B3  2CAD               	goto	u5175
  7388  14B4  3001               	movlw	1
  7389  14B5  02D2               	subwf	___ftadd@exp1^(0+128),f
  7390  14B6  0851               	movf	___ftadd@exp2^(0+128),w
  7391  14B7  0652               	xorwf	___ftadd@exp1^(0+128),w
  7392  14B8  1903               	skipnz
  7393  14B9  2CCD               	goto	l3569
  7394  14BA  3001               	movlw	1
  7395  14BB  02D0               	subwf	___ftadd@sign^(0+128),f
  7396  14BC  0850               	movf	___ftadd@sign^(0+128),w
  7397  14BD  3907               	andlw	7
  7398  14BE  1903               	btfsc	3,2
  7399  14BF  2CCD               	goto	l3569
  7400  14C0  2CAC               	goto	l3561
  7401  14C1                     l3567:	
  7402  14C1  3001               	movlw	1
  7403  14C2                     u5205:	
  7404  14C2  1003               	clrc
  7405  14C3  0CCB               	rrf	(___ftadd@f2+2)^(0+128),f
  7406  14C4  0CCA               	rrf	(___ftadd@f2+1)^(0+128),f
  7407  14C5  0CC9               	rrf	___ftadd@f2^(0+128),f
  7408  14C6  3EFF               	addlw	-1
  7409  14C7  1D03               	skipz
  7410  14C8  2CC2               	goto	u5205
  7411  14C9  3001               	movlw	1
  7412  14CA  00CC               	movwf	??___ftadd^(0+128)
  7413  14CB  084C               	movf	??___ftadd^(0+128),w
  7414  14CC  07D1               	addwf	___ftadd@exp2^(0+128),f
  7415  14CD                     l3569:	
  7416  14CD  0852               	movf	___ftadd@exp1^(0+128),w
  7417  14CE  0651               	xorwf	___ftadd@exp2^(0+128),w
  7418  14CF  1D03               	skipz
  7419  14D0  2CC1               	goto	l3567
  7420  14D1                     l551:	
  7421  14D1  1FD0               	btfss	___ftadd@sign^(0+128),7
  7422  14D2  2CE3               	goto	l3573
  7423  14D3  30FF               	movlw	255
  7424  14D4  06C6               	xorwf	___ftadd@f1^(0+128),f
  7425  14D5  30FF               	movlw	255
  7426  14D6  06C7               	xorwf	(___ftadd@f1+1)^(0+128),f
  7427  14D7  30FF               	movlw	255
  7428  14D8  06C8               	xorwf	(___ftadd@f1+2)^(0+128),f
  7429  14D9  3001               	movlw	1
  7430  14DA  07C6               	addwf	___ftadd@f1^(0+128),f
  7431  14DB  3000               	movlw	0
  7432  14DC  1803               	skipnc
  7433  14DD  3001               	movlw	1
  7434  14DE  07C7               	addwf	(___ftadd@f1+1)^(0+128),f
  7435  14DF  3000               	movlw	0
  7436  14E0  1803               	skipnc
  7437  14E1  3001               	movlw	1
  7438  14E2  07C8               	addwf	(___ftadd@f1+2)^(0+128),f
  7439  14E3                     l3573:	
  7440  14E3  1F50               	btfss	___ftadd@sign^(0+128),6
  7441  14E4  2CF5               	goto	l3577
  7442  14E5  30FF               	movlw	255
  7443  14E6  06C9               	xorwf	___ftadd@f2^(0+128),f
  7444  14E7  30FF               	movlw	255
  7445  14E8  06CA               	xorwf	(___ftadd@f2+1)^(0+128),f
  7446  14E9  30FF               	movlw	255
  7447  14EA  06CB               	xorwf	(___ftadd@f2+2)^(0+128),f
  7448  14EB  3001               	movlw	1
  7449  14EC  07C9               	addwf	___ftadd@f2^(0+128),f
  7450  14ED  3000               	movlw	0
  7451  14EE  1803               	skipnc
  7452  14EF  3001               	movlw	1
  7453  14F0  07CA               	addwf	(___ftadd@f2+1)^(0+128),f
  7454  14F1  3000               	movlw	0
  7455  14F2  1803               	skipnc
  7456  14F3  3001               	movlw	1
  7457  14F4  07CB               	addwf	(___ftadd@f2+2)^(0+128),f
  7458  14F5                     l3577:	
  7459  14F5  01D0               	clrf	___ftadd@sign^(0+128)
  7460  14F6  0846               	movf	___ftadd@f1^(0+128),w
  7461  14F7  07C9               	addwf	___ftadd@f2^(0+128),f
  7462  14F8  0847               	movf	(___ftadd@f1+1)^(0+128),w
  7463  14F9  1103               	clrz
  7464  14FA  1803               	skipnc
  7465  14FB  0A47               	incf	(___ftadd@f1+1)^(0+128),w
  7466  14FC  1D03               	btfss	3,2
  7467  14FD  07CA               	addwf	(___ftadd@f2+1)^(0+128),f
  7468  14FE  0848               	movf	(___ftadd@f1+2)^(0+128),w
  7469  14FF  1103               	clrz
  7470  1500  1803               	skipnc
  7471  1501  0A48               	incf	(___ftadd@f1+2)^(0+128),w
  7472  1502  1D03               	btfss	3,2
  7473  1503  07CB               	addwf	(___ftadd@f2+2)^(0+128),f
  7474  1504  1FCB               	btfss	(___ftadd@f2+2)^(0+128),7
  7475  1505  2D18               	goto	l3587
  7476  1506  30FF               	movlw	255
  7477  1507  06C9               	xorwf	___ftadd@f2^(0+128),f
  7478  1508  30FF               	movlw	255
  7479  1509  06CA               	xorwf	(___ftadd@f2+1)^(0+128),f
  7480  150A  30FF               	movlw	255
  7481  150B  06CB               	xorwf	(___ftadd@f2+2)^(0+128),f
  7482  150C  3001               	movlw	1
  7483  150D  07C9               	addwf	___ftadd@f2^(0+128),f
  7484  150E  3000               	movlw	0
  7485  150F  1803               	skipnc
  7486  1510  3001               	movlw	1
  7487  1511  07CA               	addwf	(___ftadd@f2+1)^(0+128),f
  7488  1512  3000               	movlw	0
  7489  1513  1803               	skipnc
  7490  1514  3001               	movlw	1
  7491  1515  07CB               	addwf	(___ftadd@f2+2)^(0+128),f
  7492  1516  01D0               	clrf	___ftadd@sign^(0+128)
  7493  1517  0AD0               	incf	___ftadd@sign^(0+128),f
  7494  1518                     l3587:	
  7495  1518  0849               	movf	___ftadd@f2^(0+128),w
  7496  1519  1283               	bcf	3,5	;RP0=0, select bank0
  7497  151A  1303               	bcf	3,6	;RP1=0, select bank0
  7498  151B  00B6               	movwf	___ftpack@arg
  7499  151C  1683               	bsf	3,5	;RP0=1, select bank1
  7500  151D  1303               	bcf	3,6	;RP1=0, select bank1
  7501  151E  084A               	movf	(___ftadd@f2+1)^(0+128),w
  7502  151F  1283               	bcf	3,5	;RP0=0, select bank0
  7503  1520  1303               	bcf	3,6	;RP1=0, select bank0
  7504  1521  00B7               	movwf	___ftpack@arg+1
  7505  1522  1683               	bsf	3,5	;RP0=1, select bank1
  7506  1523  1303               	bcf	3,6	;RP1=0, select bank1
  7507  1524  084B               	movf	(___ftadd@f2+2)^(0+128),w
  7508  1525  1283               	bcf	3,5	;RP0=0, select bank0
  7509  1526  1303               	bcf	3,6	;RP1=0, select bank0
  7510  1527  00B8               	movwf	___ftpack@arg+2
  7511  1528  1683               	bsf	3,5	;RP0=1, select bank1
  7512  1529  1303               	bcf	3,6	;RP1=0, select bank1
  7513  152A  0852               	movf	___ftadd@exp1^(0+128),w
  7514  152B  00CC               	movwf	??___ftadd^(0+128)
  7515  152C  084C               	movf	??___ftadd^(0+128),w
  7516  152D  1283               	bcf	3,5	;RP0=0, select bank0
  7517  152E  1303               	bcf	3,6	;RP1=0, select bank0
  7518  152F  00B9               	movwf	___ftpack@exp
  7519  1530  1683               	bsf	3,5	;RP0=1, select bank1
  7520  1531  1303               	bcf	3,6	;RP1=0, select bank1
  7521  1532  0850               	movf	___ftadd@sign^(0+128),w
  7522  1533  00CD               	movwf	(??___ftadd+1)^(0+128)
  7523  1534  084D               	movf	(??___ftadd+1)^(0+128),w
  7524  1535  1283               	bcf	3,5	;RP0=0, select bank0
  7525  1536  1303               	bcf	3,6	;RP1=0, select bank0
  7526  1537  00BA               	movwf	___ftpack@sign
  7527  1538  160A  158A  2714   	fcall	___ftpack
  7528  153B  1283               	bcf	3,5	;RP0=0, select bank0
  7529  153C  1303               	bcf	3,6	;RP1=0, select bank0
  7530  153D  0836               	movf	?___ftpack,w
  7531  153E  1683               	bsf	3,5	;RP0=1, select bank1
  7532  153F  1303               	bcf	3,6	;RP1=0, select bank1
  7533  1540  00C6               	movwf	?___ftadd^(0+128)
  7534  1541  1283               	bcf	3,5	;RP0=0, select bank0
  7535  1542  1303               	bcf	3,6	;RP1=0, select bank0
  7536  1543  0837               	movf	?___ftpack+1,w
  7537  1544  1683               	bsf	3,5	;RP0=1, select bank1
  7538  1545  1303               	bcf	3,6	;RP1=0, select bank1
  7539  1546  00C7               	movwf	(?___ftadd+1)^(0+128)
  7540  1547  1283               	bcf	3,5	;RP0=0, select bank0
  7541  1548  1303               	bcf	3,6	;RP1=0, select bank0
  7542  1549  0838               	movf	?___ftpack+2,w
  7543  154A  1683               	bsf	3,5	;RP0=1, select bank1
  7544  154B  1303               	bcf	3,6	;RP1=0, select bank1
  7545  154C  00C8               	movwf	(?___ftadd+2)^(0+128)
  7546  154D  0008               	return
  7547  154E                     __end_of___ftadd:	
  7548                           
  7549                           	psect	text20
  7550  1F14                     __ptext20:	
  7551 ;; *************** function ___ftpack *****************
  7552 ;; Defined at:
  7553 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  arg             3   22[BANK0 ] unsigned um
  7556 ;;  exp             1   25[BANK0 ] unsigned char 
  7557 ;;  sign            1   26[BANK0 ] unsigned char 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  3   22[BANK0 ] float 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         0       5       0       0       0
  7570 ;;      Locals:         0       0       0       0       0
  7571 ;;      Temps:          0       3       0       0       0
  7572 ;;      Totals:         0       8       0       0       0
  7573 ;;Total ram usage:        8 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    3
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		___ftadd
  7580 ;;		___ftmul
  7581 ;;		___lltoft
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           
  7586                           ;psect for function ___ftpack
  7587  1F14                     ___ftpack:	
  7588                           
  7589                           ;incstack = 0
  7590                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7591  1F14  1283               	bcf	3,5	;RP0=0, select bank0
  7592  1F15  1303               	bcf	3,6	;RP1=0, select bank0
  7593  1F16  0839               	movf	___ftpack@exp,w
  7594  1F17  1903               	btfsc	3,2
  7595  1F18  2F1E               	goto	l3397
  7596  1F19  0838               	movf	___ftpack@arg+2,w
  7597  1F1A  0437               	iorwf	___ftpack@arg+1,w
  7598  1F1B  0436               	iorwf	___ftpack@arg,w
  7599  1F1C  1D03               	skipz
  7600  1F1D  2F31               	goto	l3403
  7601  1F1E                     l3397:	
  7602  1F1E  3000               	movlw	0
  7603  1F1F  00B6               	movwf	?___ftpack
  7604  1F20  3000               	movlw	0
  7605  1F21  00B7               	movwf	?___ftpack+1
  7606  1F22  3000               	movlw	0
  7607  1F23  00B8               	movwf	?___ftpack+2
  7608  1F24  0008               	return
  7609  1F25                     l3401:	
  7610  1F25  3001               	movlw	1
  7611  1F26  00BB               	movwf	??___ftpack
  7612  1F27  083B               	movf	??___ftpack,w
  7613  1F28  07B9               	addwf	___ftpack@exp,f
  7614  1F29  3001               	movlw	1
  7615  1F2A                     u4715:	
  7616  1F2A  1003               	clrc
  7617  1F2B  0CB8               	rrf	___ftpack@arg+2,f
  7618  1F2C  0CB7               	rrf	___ftpack@arg+1,f
  7619  1F2D  0CB6               	rrf	___ftpack@arg,f
  7620  1F2E  3EFF               	addlw	-1
  7621  1F2F  1D03               	skipz
  7622  1F30  2F2A               	goto	u4715
  7623  1F31                     l3403:	
  7624  1F31  30FE               	movlw	254
  7625  1F32  0538               	andwf	___ftpack@arg+2,w
  7626  1F33  1903               	btfsc	3,2
  7627  1F34  2F4C               	goto	l520
  7628  1F35  2F25               	goto	l3401
  7629  1F36                     l3405:	
  7630  1F36  3001               	movlw	1
  7631  1F37  00BB               	movwf	??___ftpack
  7632  1F38  083B               	movf	??___ftpack,w
  7633  1F39  07B9               	addwf	___ftpack@exp,f
  7634  1F3A  3001               	movlw	1
  7635  1F3B  07B6               	addwf	___ftpack@arg,f
  7636  1F3C  3000               	movlw	0
  7637  1F3D  1803               	skipnc
  7638  1F3E  3001               	movlw	1
  7639  1F3F  07B7               	addwf	___ftpack@arg+1,f
  7640  1F40  3000               	movlw	0
  7641  1F41  1803               	skipnc
  7642  1F42  3001               	movlw	1
  7643  1F43  07B8               	addwf	___ftpack@arg+2,f
  7644  1F44  3001               	movlw	1
  7645  1F45                     u4735:	
  7646  1F45  1003               	clrc
  7647  1F46  0CB8               	rrf	___ftpack@arg+2,f
  7648  1F47  0CB7               	rrf	___ftpack@arg+1,f
  7649  1F48  0CB6               	rrf	___ftpack@arg,f
  7650  1F49  3EFF               	addlw	-1
  7651  1F4A  1D03               	skipz
  7652  1F4B  2F45               	goto	u4735
  7653  1F4C                     l520:	
  7654  1F4C  30FF               	movlw	255
  7655  1F4D  0538               	andwf	___ftpack@arg+2,w
  7656  1F4E  1903               	btfsc	3,2
  7657  1F4F  2F5B               	goto	l3413
  7658  1F50  2F36               	goto	l3405
  7659  1F51                     l3411:	
  7660  1F51  3001               	movlw	1
  7661  1F52  02B9               	subwf	___ftpack@exp,f
  7662  1F53  3001               	movlw	1
  7663  1F54                     u4755:	
  7664  1F54  1003               	clrc
  7665  1F55  0DB6               	rlf	___ftpack@arg,f
  7666  1F56  0DB7               	rlf	___ftpack@arg+1,f
  7667  1F57  0DB8               	rlf	___ftpack@arg+2,f
  7668  1F58  3EFF               	addlw	-1
  7669  1F59  1D03               	skipz
  7670  1F5A  2F54               	goto	u4755
  7671  1F5B                     l3413:	
  7672  1F5B  1BB7               	btfsc	___ftpack@arg+1,7
  7673  1F5C  2F61               	goto	l527
  7674  1F5D  3002               	movlw	2
  7675  1F5E  0239               	subwf	___ftpack@exp,w
  7676  1F5F  1803               	skipnc
  7677  1F60  2F51               	goto	l3411
  7678  1F61                     l527:	
  7679  1F61  1839               	btfsc	___ftpack@exp,0
  7680  1F62  2F69               	goto	l528
  7681  1F63  30FF               	movlw	255
  7682  1F64  05B6               	andwf	___ftpack@arg,f
  7683  1F65  307F               	movlw	127
  7684  1F66  05B7               	andwf	___ftpack@arg+1,f
  7685  1F67  30FF               	movlw	255
  7686  1F68  05B8               	andwf	___ftpack@arg+2,f
  7687  1F69                     l528:	
  7688  1F69  1003               	clrc
  7689  1F6A  0CB9               	rrf	___ftpack@exp,f
  7690  1F6B  0839               	movf	___ftpack@exp,w
  7691  1F6C  00BB               	movwf	??___ftpack
  7692  1F6D  01BC               	clrf	??___ftpack+1
  7693  1F6E  01BD               	clrf	??___ftpack+2
  7694  1F6F  3010               	movlw	16
  7695  1F70                     u4795:	
  7696  1F70  1003               	clrc
  7697  1F71  0DBB               	rlf	??___ftpack,f
  7698  1F72  0DBC               	rlf	??___ftpack+1,f
  7699  1F73  0DBD               	rlf	??___ftpack+2,f
  7700  1F74  3EFF               	addlw	-1
  7701  1F75  1D03               	skipz
  7702  1F76  2F70               	goto	u4795
  7703  1F77  083B               	movf	??___ftpack,w
  7704  1F78  04B6               	iorwf	___ftpack@arg,f
  7705  1F79  083C               	movf	??___ftpack+1,w
  7706  1F7A  04B7               	iorwf	___ftpack@arg+1,f
  7707  1F7B  083D               	movf	??___ftpack+2,w
  7708  1F7C  04B8               	iorwf	___ftpack@arg+2,f
  7709  1F7D  083A               	movf	___ftpack@sign,w
  7710  1F7E  1903               	btfsc	3,2
  7711  1F7F  0008               	return
  7712  1F80  17B8               	bsf	___ftpack@arg+2,7
  7713  1F81  0008               	return
  7714  1F82                     __end_of___ftpack:	
  7715                           
  7716                           	psect	text21
  7717  109C                     __ptext21:	
  7718 ;; *************** function ___ftneg *****************
  7719 ;; Defined at:
  7720 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  f1              3   22[BANK0 ] float 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;		None
  7725 ;; Return value:  Size  Location     Type
  7726 ;;                  3   22[BANK0 ] float 
  7727 ;; Registers used:
  7728 ;;		wreg
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7734 ;;      Params:         0       3       0       0       0
  7735 ;;      Locals:         0       0       0       0       0
  7736 ;;      Temps:          0       0       0       0       0
  7737 ;;      Totals:         0       3       0       0       0
  7738 ;;Total ram usage:        3 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    3
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_sprintf
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           
  7749                           ;psect for function ___ftneg
  7750  109C                     ___ftneg:	
  7751                           
  7752                           ;incstack = 0
  7753                           ; Regs used in ___ftneg: [wreg]
  7754  109C  1283               	bcf	3,5	;RP0=0, select bank0
  7755  109D  1303               	bcf	3,6	;RP1=0, select bank0
  7756  109E  0838               	movf	___ftneg@f1+2,w
  7757  109F  0437               	iorwf	___ftneg@f1+1,w
  7758  10A0  0436               	iorwf	___ftneg@f1,w
  7759  10A1  1903               	skipnz
  7760  10A2  0008               	return
  7761  10A3  3080               	movlw	128
  7762  10A4  06B8               	xorwf	___ftneg@f1+2,f
  7763  10A5  0008               	return
  7764  10A6                     __end_of___ftneg:	
  7765                           
  7766                           	psect	text22
  7767  1D89                     __ptext22:	
  7768 ;; *************** function ___ftge *****************
  7769 ;; Defined at:
  7770 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  ff1             3   22[BANK0 ] float 
  7773 ;;  ff2             3   25[BANK0 ] float 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;		None               void
  7778 ;; Registers used:
  7779 ;;		wreg, status,2, status,0
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7785 ;;      Params:         0       6       0       0       0
  7786 ;;      Locals:         0       0       0       0       0
  7787 ;;      Temps:          0       6       0       0       0
  7788 ;;      Totals:         0      12       0       0       0
  7789 ;;Total ram usage:       12 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:    3
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_sprintf
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function ___ftge
  7801  1D89                     ___ftge:	
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  7805  1D89  1283               	bcf	3,5	;RP0=0, select bank0
  7806  1D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7807  1D8B  1FB8               	btfss	___ftge@ff1+2,7
  7808  1D8C  2DB2               	goto	l3837
  7809  1D8D  3000               	movlw	0
  7810  1D8E  00BC               	movwf	??___ftge
  7811  1D8F  3000               	movlw	0
  7812  1D90  00BD               	movwf	??___ftge+1
  7813  1D91  3080               	movlw	128
  7814  1D92  00BE               	movwf	??___ftge+2
  7815  1D93  0936               	comf	___ftge@ff1,w
  7816  1D94  00BF               	movwf	??___ftge+3
  7817  1D95  0937               	comf	___ftge@ff1+1,w
  7818  1D96  00C0               	movwf	??___ftge+4
  7819  1D97  0938               	comf	___ftge@ff1+2,w
  7820  1D98  00C1               	movwf	??___ftge+5
  7821  1D99  0ABF               	incf	??___ftge+3,f
  7822  1D9A  1903               	skipnz
  7823  1D9B  0AC0               	incf	??___ftge+4,f
  7824  1D9C  1903               	skipnz
  7825  1D9D  0AC1               	incf	??___ftge+5,f
  7826  1D9E  083F               	movf	??___ftge+3,w
  7827  1D9F  07BC               	addwf	??___ftge,f
  7828  1DA0  0840               	movf	??___ftge+4,w
  7829  1DA1  1803               	skipnc
  7830  1DA2  0F40               	incfsz	??___ftge+4,w
  7831  1DA3  2DA5               	goto	u5791
  7832  1DA4  2DA6               	goto	u5792
  7833  1DA5                     u5791:	
  7834  1DA5  07BD               	addwf	??___ftge+1,f
  7835  1DA6                     u5792:	
  7836  1DA6  0841               	movf	??___ftge+5,w
  7837  1DA7  1803               	skipnc
  7838  1DA8  0F41               	incfsz	??___ftge+5,w
  7839  1DA9  2DAB               	goto	u5793
  7840  1DAA  2DAC               	goto	u5794
  7841  1DAB                     u5793:	
  7842  1DAB  07BE               	addwf	??___ftge+2,f
  7843  1DAC                     u5794:	
  7844  1DAC  083C               	movf	??___ftge,w
  7845  1DAD  00B6               	movwf	___ftge@ff1
  7846  1DAE  083D               	movf	??___ftge+1,w
  7847  1DAF  00B7               	movwf	___ftge@ff1+1
  7848  1DB0  083E               	movf	??___ftge+2,w
  7849  1DB1  00B8               	movwf	___ftge@ff1+2
  7850  1DB2                     l3837:	
  7851  1DB2  1FBB               	btfss	___ftge@ff2+2,7
  7852  1DB3  2DD9               	goto	l3841
  7853  1DB4  3000               	movlw	0
  7854  1DB5  00BC               	movwf	??___ftge
  7855  1DB6  3000               	movlw	0
  7856  1DB7  00BD               	movwf	??___ftge+1
  7857  1DB8  3080               	movlw	128
  7858  1DB9  00BE               	movwf	??___ftge+2
  7859  1DBA  0939               	comf	___ftge@ff2,w
  7860  1DBB  00BF               	movwf	??___ftge+3
  7861  1DBC  093A               	comf	___ftge@ff2+1,w
  7862  1DBD  00C0               	movwf	??___ftge+4
  7863  1DBE  093B               	comf	___ftge@ff2+2,w
  7864  1DBF  00C1               	movwf	??___ftge+5
  7865  1DC0  0ABF               	incf	??___ftge+3,f
  7866  1DC1  1903               	skipnz
  7867  1DC2  0AC0               	incf	??___ftge+4,f
  7868  1DC3  1903               	skipnz
  7869  1DC4  0AC1               	incf	??___ftge+5,f
  7870  1DC5  083F               	movf	??___ftge+3,w
  7871  1DC6  07BC               	addwf	??___ftge,f
  7872  1DC7  0840               	movf	??___ftge+4,w
  7873  1DC8  1803               	skipnc
  7874  1DC9  0F40               	incfsz	??___ftge+4,w
  7875  1DCA  2DCC               	goto	u5811
  7876  1DCB  2DCD               	goto	u5812
  7877  1DCC                     u5811:	
  7878  1DCC  07BD               	addwf	??___ftge+1,f
  7879  1DCD                     u5812:	
  7880  1DCD  0841               	movf	??___ftge+5,w
  7881  1DCE  1803               	skipnc
  7882  1DCF  0F41               	incfsz	??___ftge+5,w
  7883  1DD0  2DD2               	goto	u5813
  7884  1DD1  2DD3               	goto	u5814
  7885  1DD2                     u5813:	
  7886  1DD2  07BE               	addwf	??___ftge+2,f
  7887  1DD3                     u5814:	
  7888  1DD3  083C               	movf	??___ftge,w
  7889  1DD4  00B9               	movwf	___ftge@ff2
  7890  1DD5  083D               	movf	??___ftge+1,w
  7891  1DD6  00BA               	movwf	___ftge@ff2+1
  7892  1DD7  083E               	movf	??___ftge+2,w
  7893  1DD8  00BB               	movwf	___ftge@ff2+2
  7894  1DD9                     l3841:	
  7895  1DD9  3080               	movlw	128
  7896  1DDA  06B8               	xorwf	___ftge@ff1+2,f
  7897  1DDB  3080               	movlw	128
  7898  1DDC  06BB               	xorwf	___ftge@ff2+2,f
  7899  1DDD  083B               	movf	___ftge@ff2+2,w
  7900  1DDE  0238               	subwf	___ftge@ff1+2,w
  7901  1DDF  1D03               	skipz
  7902  1DE0  0008               	return
  7903  1DE1  083A               	movf	___ftge@ff2+1,w
  7904  1DE2  0237               	subwf	___ftge@ff1+1,w
  7905  1DE3  1D03               	skipz
  7906  1DE4  0008               	return
  7907  1DE5  0839               	movf	___ftge@ff2,w
  7908  1DE6  0236               	subwf	___ftge@ff1,w
  7909  1DE7  0008               	return
  7910  1DE8                     __end_of___ftge:	
  7911                           
  7912                           	psect	text23
  7913  1D38                     __ptext23:	
  7914 ;; *************** function _LCD2 *****************
  7915 ;; Defined at:
  7916 ;;		line 155 in file "lab3ej2.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;		None
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7930 ;;      Params:         0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0
  7932 ;;      Temps:          0       2       0       0       0
  7933 ;;      Totals:         0       2       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    4
  7937 ;; This function calls:
  7938 ;;		_bajar
  7939 ;;		_envio
  7940 ;;		_invertir
  7941 ;;		_subir
  7942 ;; This function is called by:
  7943 ;;		_main
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           
  7948                           ;psect for function _LCD2
  7949  1D38                     _LCD2:	
  7950                           
  7951                           ;lab3ej2.c: 157: bajar();
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _LCD2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7955  1D38  160A  158A  23BF  160A  158A  	fcall	_bajar
  7956  1D3D                     l3303:	
  7957                           ;lab3ej2.c: 158: while(*p2!=0)
  7958                           
  7959  1D3D  1683               	bsf	3,5	;RP0=1, select bank1
  7960  1D3E  1303               	bcf	3,6	;RP1=0, select bank1
  7961  1D3F  086B               	movf	_p2^(0+128),w
  7962  1D40  0084               	movwf	4
  7963  1D41  1783               	bsf	3,7	;select IRP bank2
  7964  1D42  0800               	movf	0,w
  7965  1D43  1903               	btfsc	3,2
  7966  1D44  2D85               	goto	l3305
  7967                           
  7968                           ;lab3ej2.c: 159: {
  7969                           ;lab3ej2.c: 160: letraenvio = *p2;
  7970  1D45  1683               	bsf	3,5	;RP0=1, select bank1
  7971  1D46  1303               	bcf	3,6	;RP1=0, select bank1
  7972  1D47  086B               	movf	_p2^(0+128),w
  7973  1D48  0084               	movwf	4
  7974  1D49  1783               	bsf	3,7	;select IRP bank2
  7975  1D4A  0800               	movf	0,w
  7976  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  7977  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  7978  1D4D  00B8               	movwf	??_LCD2
  7979  1D4E  0838               	movf	??_LCD2,w
  7980  1D4F  00FC               	movwf	_letraenvio
  7981                           
  7982                           ;lab3ej2.c: 161: letraenvio= letraenvio>>4;
  7983  1D50  087C               	movf	_letraenvio,w
  7984  1D51  00B8               	movwf	??_LCD2
  7985  1D52  3004               	movlw	4
  7986  1D53                     u4505:	
  7987  1D53  1003               	clrc
  7988  1D54  0CB8               	rrf	??_LCD2,f
  7989  1D55  3EFF               	addlw	-1
  7990  1D56  1D03               	skipz
  7991  1D57  2D53               	goto	u4505
  7992  1D58  0838               	movf	??_LCD2,w
  7993  1D59  00B9               	movwf	??_LCD2+1
  7994  1D5A  0839               	movf	??_LCD2+1,w
  7995  1D5B  00FC               	movwf	_letraenvio
  7996                           
  7997                           ;lab3ej2.c: 162: invertir();
  7998  1D5C  160A  158A  2419  160A  158A  	fcall	_invertir
  7999                           
  8000                           ;lab3ej2.c: 163: envio();
  8001  1D61  160A  158A  2361  160A  158A  	fcall	_envio
  8002                           
  8003                           ;lab3ej2.c: 164: letraenvio= *p2 & 0x0F;
  8004  1D66  1683               	bsf	3,5	;RP0=1, select bank1
  8005  1D67  1303               	bcf	3,6	;RP1=0, select bank1
  8006  1D68  086B               	movf	_p2^(0+128),w
  8007  1D69  0084               	movwf	4
  8008  1D6A  1783               	bsf	3,7	;select IRP bank2
  8009  1D6B  0800               	movf	0,w
  8010  1D6C  390F               	andlw	15
  8011  1D6D  1283               	bcf	3,5	;RP0=0, select bank0
  8012  1D6E  1303               	bcf	3,6	;RP1=0, select bank0
  8013  1D6F  00B8               	movwf	??_LCD2
  8014  1D70  0838               	movf	??_LCD2,w
  8015  1D71  00FC               	movwf	_letraenvio
  8016                           
  8017                           ;lab3ej2.c: 165: invertir();
  8018  1D72  160A  158A  2419  160A  158A  	fcall	_invertir
  8019                           
  8020                           ;lab3ej2.c: 166: envio();
  8021  1D77  160A  158A  2361  160A  158A  	fcall	_envio
  8022                           
  8023                           ;lab3ej2.c: 167: p2++;
  8024  1D7C  3001               	movlw	1
  8025  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  8026  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  8027  1D7F  00B8               	movwf	??_LCD2
  8028  1D80  0838               	movf	??_LCD2,w
  8029  1D81  1683               	bsf	3,5	;RP0=1, select bank1
  8030  1D82  1303               	bcf	3,6	;RP1=0, select bank1
  8031  1D83  07EB               	addwf	_p2^(0+128),f
  8032  1D84  2D3D               	goto	l3303
  8033  1D85                     l3305:	
  8034                           
  8035                           ;lab3ej2.c: 168: }
  8036                           ;lab3ej2.c: 169: subir();
  8037  1D85  160A  158A  23EC   	fcall	_subir
  8038  1D88  0008               	return
  8039  1D89                     __end_of_LCD2:	
  8040                           
  8041                           	psect	text24
  8042  1BEC                     __ptext24:	
  8043 ;; *************** function _subir *****************
  8044 ;; Defined at:
  8045 ;;		line 226 in file "lab3ej2.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8059 ;;      Params:         0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0
  8061 ;;      Temps:          0       2       0       0       0
  8062 ;;      Totals:         0       2       0       0       0
  8063 ;;Total ram usage:        2 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    3
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_LCD2
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _subir
  8075  1BEC                     _subir:	
  8076                           
  8077                           ;lab3ej2.c: 228: PORTBbits.RB5=0;
  8078                           
  8079                           ;incstack = 0
  8080                           ; Regs used in _subir: [wreg]
  8081  1BEC  1283               	bcf	3,5	;RP0=0, select bank0
  8082  1BED  1303               	bcf	3,6	;RP1=0, select bank0
  8083  1BEE  1286               	bcf	6,5	;volatile
  8084                           
  8085                           ;lab3ej2.c: 229: PORTBbits.RB6=0;
  8086  1BEF  1306               	bcf	6,6	;volatile
  8087                           
  8088                           ;lab3ej2.c: 230: PORTBbits.RB0=1;
  8089  1BF0  1406               	bsf	6,0	;volatile
  8090                           
  8091                           ;lab3ej2.c: 231: PORTBbits.RB1=0;
  8092  1BF1  1086               	bcf	6,1	;volatile
  8093                           
  8094                           ;lab3ej2.c: 232: PORTBbits.RB2=0;
  8095  1BF2  1106               	bcf	6,2	;volatile
  8096                           
  8097                           ;lab3ej2.c: 233: PORTBbits.RB3=0;
  8098  1BF3  1186               	bcf	6,3	;volatile
  8099                           
  8100                           ;lab3ej2.c: 234: PORTBbits.RB4=1;
  8101  1BF4  1606               	bsf	6,4	;volatile
  8102                           
  8103                           ;lab3ej2.c: 235: _delay((unsigned long)((5)*(20000000/4000.0)));
  8104  1BF5  3021               	movlw	33
  8105  1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  8106  1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  8107  1BF8  00B7               	movwf	??_subir+1
  8108  1BF9  3075               	movlw	117
  8109  1BFA  00B6               	movwf	??_subir
  8110  1BFB                     u6867:	
  8111  1BFB  0BB6               	decfsz	??_subir,f
  8112  1BFC  2BFB               	goto	u6867
  8113  1BFD  0BB7               	decfsz	??_subir+1,f
  8114  1BFE  2BFB               	goto	u6867
  8115  1BFF  2C00               	nop2
  8116                           
  8117                           ;lab3ej2.c: 236: PORTBbits.RB4=0;
  8118  1C00  1283               	bcf	3,5	;RP0=0, select bank0
  8119  1C01  1303               	bcf	3,6	;RP1=0, select bank0
  8120  1C02  1206               	bcf	6,4	;volatile
  8121                           
  8122                           ;lab3ej2.c: 237: PORTBbits.RB5=0;
  8123  1C03  1286               	bcf	6,5	;volatile
  8124                           
  8125                           ;lab3ej2.c: 238: PORTBbits.RB6=0;
  8126  1C04  1306               	bcf	6,6	;volatile
  8127                           
  8128                           ;lab3ej2.c: 239: PORTBbits.RB0=0;
  8129  1C05  1006               	bcf	6,0	;volatile
  8130                           
  8131                           ;lab3ej2.c: 240: PORTBbits.RB1=0;
  8132  1C06  1086               	bcf	6,1	;volatile
  8133                           
  8134                           ;lab3ej2.c: 241: PORTBbits.RB2=0;
  8135  1C07  1106               	bcf	6,2	;volatile
  8136                           
  8137                           ;lab3ej2.c: 242: PORTBbits.RB3=0;
  8138  1C08  1186               	bcf	6,3	;volatile
  8139                           
  8140                           ;lab3ej2.c: 243: PORTBbits.RB4=1;
  8141  1C09  1606               	bsf	6,4	;volatile
  8142                           
  8143                           ;lab3ej2.c: 244: _delay((unsigned long)((5)*(20000000/4000.0)));
  8144  1C0A  3021               	movlw	33
  8145  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
  8146  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
  8147  1C0D  00B7               	movwf	??_subir+1
  8148  1C0E  3075               	movlw	117
  8149  1C0F  00B6               	movwf	??_subir
  8150  1C10                     u6877:	
  8151  1C10  0BB6               	decfsz	??_subir,f
  8152  1C11  2C10               	goto	u6877
  8153  1C12  0BB7               	decfsz	??_subir+1,f
  8154  1C13  2C10               	goto	u6877
  8155  1C14  2C15               	nop2
  8156                           
  8157                           ;lab3ej2.c: 245: PORTBbits.RB4=0;
  8158  1C15  1283               	bcf	3,5	;RP0=0, select bank0
  8159  1C16  1303               	bcf	3,6	;RP1=0, select bank0
  8160  1C17  1206               	bcf	6,4	;volatile
  8161  1C18  0008               	return
  8162  1C19                     __end_of_subir:	
  8163                           
  8164                           	psect	text25
  8165  1BBF                     __ptext25:	
  8166 ;; *************** function _bajar *****************
  8167 ;; Defined at:
  8168 ;;		line 205 in file "lab3ej2.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8182 ;;      Params:         0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0
  8184 ;;      Temps:          0       2       0       0       0
  8185 ;;      Totals:         0       2       0       0       0
  8186 ;;Total ram usage:        2 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    3
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_LCD2
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function _bajar
  8198  1BBF                     _bajar:	
  8199                           
  8200                           ;lab3ej2.c: 207: PORTBbits.RB5=0;
  8201                           
  8202                           ;incstack = 0
  8203                           ; Regs used in _bajar: [wreg]
  8204  1BBF  1283               	bcf	3,5	;RP0=0, select bank0
  8205  1BC0  1303               	bcf	3,6	;RP1=0, select bank0
  8206  1BC1  1286               	bcf	6,5	;volatile
  8207                           
  8208                           ;lab3ej2.c: 208: PORTBbits.RB6=0;
  8209  1BC2  1306               	bcf	6,6	;volatile
  8210                           
  8211                           ;lab3ej2.c: 209: PORTBbits.RB0=1;
  8212  1BC3  1406               	bsf	6,0	;volatile
  8213                           
  8214                           ;lab3ej2.c: 210: PORTBbits.RB1=1;
  8215  1BC4  1486               	bsf	6,1	;volatile
  8216                           
  8217                           ;lab3ej2.c: 211: PORTBbits.RB2=0;
  8218  1BC5  1106               	bcf	6,2	;volatile
  8219                           
  8220                           ;lab3ej2.c: 212: PORTBbits.RB3=0;
  8221  1BC6  1186               	bcf	6,3	;volatile
  8222                           
  8223                           ;lab3ej2.c: 213: PORTBbits.RB4=1;
  8224  1BC7  1606               	bsf	6,4	;volatile
  8225                           
  8226                           ;lab3ej2.c: 214: _delay((unsigned long)((5)*(20000000/4000.0)));
  8227  1BC8  3021               	movlw	33
  8228  1BC9  1283               	bcf	3,5	;RP0=0, select bank0
  8229  1BCA  1303               	bcf	3,6	;RP1=0, select bank0
  8230  1BCB  00B7               	movwf	??_bajar+1
  8231  1BCC  3075               	movlw	117
  8232  1BCD  00B6               	movwf	??_bajar
  8233  1BCE                     u6887:	
  8234  1BCE  0BB6               	decfsz	??_bajar,f
  8235  1BCF  2BCE               	goto	u6887
  8236  1BD0  0BB7               	decfsz	??_bajar+1,f
  8237  1BD1  2BCE               	goto	u6887
  8238  1BD2  2BD3               	nop2
  8239                           
  8240                           ;lab3ej2.c: 215: PORTBbits.RB4=0;
  8241  1BD3  1283               	bcf	3,5	;RP0=0, select bank0
  8242  1BD4  1303               	bcf	3,6	;RP1=0, select bank0
  8243  1BD5  1206               	bcf	6,4	;volatile
  8244                           
  8245                           ;lab3ej2.c: 216: PORTBbits.RB5=0;
  8246  1BD6  1286               	bcf	6,5	;volatile
  8247                           
  8248                           ;lab3ej2.c: 217: PORTBbits.RB6=0;
  8249  1BD7  1306               	bcf	6,6	;volatile
  8250                           
  8251                           ;lab3ej2.c: 218: PORTBbits.RB0=0;
  8252  1BD8  1006               	bcf	6,0	;volatile
  8253                           
  8254                           ;lab3ej2.c: 219: PORTBbits.RB1=0;
  8255  1BD9  1086               	bcf	6,1	;volatile
  8256                           
  8257                           ;lab3ej2.c: 220: PORTBbits.RB2=0;
  8258  1BDA  1106               	bcf	6,2	;volatile
  8259                           
  8260                           ;lab3ej2.c: 221: PORTBbits.RB3=0;
  8261  1BDB  1186               	bcf	6,3	;volatile
  8262                           
  8263                           ;lab3ej2.c: 222: PORTBbits.RB4=1;
  8264  1BDC  1606               	bsf	6,4	;volatile
  8265                           
  8266                           ;lab3ej2.c: 223: _delay((unsigned long)((5)*(20000000/4000.0)));
  8267  1BDD  3021               	movlw	33
  8268  1BDE  1283               	bcf	3,5	;RP0=0, select bank0
  8269  1BDF  1303               	bcf	3,6	;RP1=0, select bank0
  8270  1BE0  00B7               	movwf	??_bajar+1
  8271  1BE1  3075               	movlw	117
  8272  1BE2  00B6               	movwf	??_bajar
  8273  1BE3                     u6897:	
  8274  1BE3  0BB6               	decfsz	??_bajar,f
  8275  1BE4  2BE3               	goto	u6897
  8276  1BE5  0BB7               	decfsz	??_bajar+1,f
  8277  1BE6  2BE3               	goto	u6897
  8278  1BE7  2BE8               	nop2
  8279                           
  8280                           ;lab3ej2.c: 224: PORTBbits.RB4=0;
  8281  1BE8  1283               	bcf	3,5	;RP0=0, select bank0
  8282  1BE9  1303               	bcf	3,6	;RP1=0, select bank0
  8283  1BEA  1206               	bcf	6,4	;volatile
  8284  1BEB  0008               	return
  8285  1BEC                     __end_of_bajar:	
  8286                           
  8287                           	psect	text26
  8288  1C55                     __ptext26:	
  8289 ;; *************** function _LCD *****************
  8290 ;; Defined at:
  8291 ;;		line 139 in file "lab3ej2.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8305 ;;      Params:         0       0       0       0       0
  8306 ;;      Locals:         0       0       0       0       0
  8307 ;;      Temps:          0       2       0       0       0
  8308 ;;      Totals:         0       2       0       0       0
  8309 ;;Total ram usage:        2 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    4
  8312 ;; This function calls:
  8313 ;;		_envio
  8314 ;;		_invertir
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _LCD
  8322  1C55                     _LCD:	
  8323  1C55                     l3283:	
  8324                           ;lab3ej2.c: 142: while(*p1!=0)
  8325                           
  8326                           ;incstack = 0
  8327                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8328                           
  8329  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  8330  1C56  1303               	bcf	3,6	;RP1=0, select bank1
  8331  1C57  086C               	movf	_p1^(0+128),w
  8332  1C58  0084               	movwf	4
  8333  1C59  1383               	bcf	3,7	;select IRP bank0
  8334  1C5A  0800               	movf	0,w
  8335  1C5B  1903               	btfsc	3,2
  8336  1C5C  0008               	return
  8337                           
  8338                           ;lab3ej2.c: 143: {
  8339                           ;lab3ej2.c: 144: letraenvio = *p1;
  8340  1C5D  1683               	bsf	3,5	;RP0=1, select bank1
  8341  1C5E  1303               	bcf	3,6	;RP1=0, select bank1
  8342  1C5F  086C               	movf	_p1^(0+128),w
  8343  1C60  0084               	movwf	4
  8344  1C61  1383               	bcf	3,7	;select IRP bank0
  8345  1C62  0800               	movf	0,w
  8346  1C63  1283               	bcf	3,5	;RP0=0, select bank0
  8347  1C64  1303               	bcf	3,6	;RP1=0, select bank0
  8348  1C65  00B8               	movwf	??_LCD
  8349  1C66  0838               	movf	??_LCD,w
  8350  1C67  00FC               	movwf	_letraenvio
  8351                           
  8352                           ;lab3ej2.c: 145: letraenvio= letraenvio>>4;
  8353  1C68  087C               	movf	_letraenvio,w
  8354  1C69  00B8               	movwf	??_LCD
  8355  1C6A  3004               	movlw	4
  8356  1C6B                     u4485:	
  8357  1C6B  1003               	clrc
  8358  1C6C  0CB8               	rrf	??_LCD,f
  8359  1C6D  3EFF               	addlw	-1
  8360  1C6E  1D03               	skipz
  8361  1C6F  2C6B               	goto	u4485
  8362  1C70  0838               	movf	??_LCD,w
  8363  1C71  00B9               	movwf	??_LCD+1
  8364  1C72  0839               	movf	??_LCD+1,w
  8365  1C73  00FC               	movwf	_letraenvio
  8366                           
  8367                           ;lab3ej2.c: 146: invertir();
  8368  1C74  160A  158A  2419  160A  158A  	fcall	_invertir
  8369                           
  8370                           ;lab3ej2.c: 147: envio();
  8371  1C79  160A  158A  2361  160A  158A  	fcall	_envio
  8372                           
  8373                           ;lab3ej2.c: 148: letraenvio= *p1 & 0x0F;
  8374  1C7E  1683               	bsf	3,5	;RP0=1, select bank1
  8375  1C7F  1303               	bcf	3,6	;RP1=0, select bank1
  8376  1C80  086C               	movf	_p1^(0+128),w
  8377  1C81  0084               	movwf	4
  8378  1C82  1383               	bcf	3,7	;select IRP bank0
  8379  1C83  0800               	movf	0,w
  8380  1C84  390F               	andlw	15
  8381  1C85  1283               	bcf	3,5	;RP0=0, select bank0
  8382  1C86  1303               	bcf	3,6	;RP1=0, select bank0
  8383  1C87  00B8               	movwf	??_LCD
  8384  1C88  0838               	movf	??_LCD,w
  8385  1C89  00FC               	movwf	_letraenvio
  8386                           
  8387                           ;lab3ej2.c: 149: invertir();
  8388  1C8A  160A  158A  2419  160A  158A  	fcall	_invertir
  8389                           
  8390                           ;lab3ej2.c: 150: envio();
  8391  1C8F  160A  158A  2361  160A  158A  	fcall	_envio
  8392                           
  8393                           ;lab3ej2.c: 151: p1++;
  8394  1C94  3001               	movlw	1
  8395  1C95  1283               	bcf	3,5	;RP0=0, select bank0
  8396  1C96  1303               	bcf	3,6	;RP1=0, select bank0
  8397  1C97  00B8               	movwf	??_LCD
  8398  1C98  0838               	movf	??_LCD,w
  8399  1C99  1683               	bsf	3,5	;RP0=1, select bank1
  8400  1C9A  1303               	bcf	3,6	;RP1=0, select bank1
  8401  1C9B  07EC               	addwf	_p1^(0+128),f
  8402  1C9C  2C55               	goto	l3283
  8403  1C9D                     __end_of_LCD:	
  8404                           
  8405                           	psect	text27
  8406  1C19                     __ptext27:	
  8407 ;; *************** function _invertir *****************
  8408 ;; Defined at:
  8409 ;;		line 172 in file "lab3ej2.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;		None
  8414 ;; Return value:  Size  Location     Type
  8415 ;;                  1    wreg      void 
  8416 ;; Registers used:
  8417 ;;		wreg, status,2, status,0
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         0       0       0       0       0
  8424 ;;      Locals:         0       0       0       0       0
  8425 ;;      Temps:          0       2       0       0       0
  8426 ;;      Totals:         0       2       0       0       0
  8427 ;;Total ram usage:        2 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    3
  8430 ;; This function calls:
  8431 ;;		Nothing
  8432 ;; This function is called by:
  8433 ;;		_LCD
  8434 ;;		_LCD2
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           
  8439                           ;psect for function _invertir
  8440  1C19                     _invertir:	
  8441                           
  8442                           ;lab3ej2.c: 174: PORTBbits.RB3= letraenvio & 0b00000001;
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _invertir: [wreg+status,2+status,0]
  8446  1C19  087C               	movf	_letraenvio,w
  8447  1C1A  3901               	andlw	1
  8448  1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  8449  1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  8450  1C1D  00B6               	movwf	??_invertir
  8451  1C1E  0DB6               	rlf	??_invertir,f
  8452  1C1F  0DB6               	rlf	??_invertir,f
  8453  1C20  0DB6               	rlf	??_invertir,f
  8454  1C21  0806               	movf	6,w	;volatile
  8455  1C22  0636               	xorwf	??_invertir,w
  8456  1C23  39F7               	andlw	-9
  8457  1C24  0636               	xorwf	??_invertir,w
  8458  1C25  0086               	movwf	6	;volatile
  8459                           
  8460                           ;lab3ej2.c: 175: PORTBbits.RB2= (letraenvio & 0b00000010)>>1;
  8461  1C26  087C               	movf	_letraenvio,w
  8462  1C27  00B6               	movwf	??_invertir
  8463  1C28  1003               	clrc
  8464  1C29  0C36               	rrf	??_invertir,w
  8465  1C2A  3901               	andlw	1
  8466  1C2B  00B7               	movwf	??_invertir+1
  8467  1C2C  0DB7               	rlf	??_invertir+1,f
  8468  1C2D  0DB7               	rlf	??_invertir+1,f
  8469  1C2E  0806               	movf	6,w	;volatile
  8470  1C2F  0637               	xorwf	??_invertir+1,w
  8471  1C30  39FB               	andlw	-5
  8472  1C31  0637               	xorwf	??_invertir+1,w
  8473  1C32  0086               	movwf	6	;volatile
  8474                           
  8475                           ;lab3ej2.c: 176: PORTBbits.RB1= (letraenvio & 0b00000100)>>2;
  8476  1C33  087C               	movf	_letraenvio,w
  8477  1C34  00B6               	movwf	??_invertir
  8478  1C35  3002               	movlw	2
  8479  1C36                     u4335:	
  8480  1C36  1003               	clrc
  8481  1C37  0CB6               	rrf	??_invertir,f
  8482  1C38  3EFF               	addlw	-1
  8483  1C39  1D03               	skipz
  8484  1C3A  2C36               	goto	u4335
  8485  1C3B  0836               	movf	??_invertir,w
  8486  1C3C  3901               	andlw	1
  8487  1C3D  00B7               	movwf	??_invertir+1
  8488  1C3E  0DB7               	rlf	??_invertir+1,f
  8489  1C3F  0806               	movf	6,w	;volatile
  8490  1C40  0637               	xorwf	??_invertir+1,w
  8491  1C41  39FD               	andlw	-3
  8492  1C42  0637               	xorwf	??_invertir+1,w
  8493  1C43  0086               	movwf	6	;volatile
  8494                           
  8495                           ;lab3ej2.c: 177: PORTBbits.RB0= (letraenvio & 0b00001000)>>3;
  8496  1C44  087C               	movf	_letraenvio,w
  8497  1C45  00B6               	movwf	??_invertir
  8498  1C46  3003               	movlw	3
  8499  1C47                     u4345:	
  8500  1C47  1003               	clrc
  8501  1C48  0CB6               	rrf	??_invertir,f
  8502  1C49  3EFF               	addlw	-1
  8503  1C4A  1D03               	skipz
  8504  1C4B  2C47               	goto	u4345
  8505  1C4C  3001               	movlw	1
  8506  1C4D  0536               	andwf	??_invertir,w
  8507  1C4E  00B7               	movwf	??_invertir+1
  8508  1C4F  0806               	movf	6,w	;volatile
  8509  1C50  0637               	xorwf	??_invertir+1,w
  8510  1C51  39FE               	andlw	-2
  8511  1C52  0637               	xorwf	??_invertir+1,w
  8512  1C53  0086               	movwf	6	;volatile
  8513  1C54  0008               	return
  8514  1C55                     __end_of_invertir:	
  8515                           
  8516                           	psect	text28
  8517  1B61                     __ptext28:	
  8518 ;; *************** function _envio *****************
  8519 ;; Defined at:
  8520 ;;		line 180 in file "lab3ej2.c"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;		None
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8534 ;;      Params:         0       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0
  8536 ;;      Temps:          0       2       0       0       0
  8537 ;;      Totals:         0       2       0       0       0
  8538 ;;Total ram usage:        2 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; Hardware stack levels required when called:    3
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_LCD
  8545 ;;		_LCD2
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           
  8550                           ;psect for function _envio
  8551  1B61                     _envio:	
  8552                           
  8553                           ;lab3ej2.c: 182: PORTBbits.RB6=1;
  8554                           
  8555                           ;incstack = 0
  8556                           ; Regs used in _envio: [wreg]
  8557  1B61  1283               	bcf	3,5	;RP0=0, select bank0
  8558  1B62  1303               	bcf	3,6	;RP1=0, select bank0
  8559  1B63  1706               	bsf	6,6	;volatile
  8560                           
  8561                           ;lab3ej2.c: 183: PORTBbits.RB5=0;
  8562  1B64  1286               	bcf	6,5	;volatile
  8563                           
  8564                           ;lab3ej2.c: 184: PORTBbits.RB4=1;
  8565  1B65  1606               	bsf	6,4	;volatile
  8566                           
  8567                           ;lab3ej2.c: 185: _delay((unsigned long)((5)*(20000000/4000.0)));
  8568  1B66  3021               	movlw	33
  8569  1B67  1283               	bcf	3,5	;RP0=0, select bank0
  8570  1B68  1303               	bcf	3,6	;RP1=0, select bank0
  8571  1B69  00B7               	movwf	??_envio+1
  8572  1B6A  3075               	movlw	117
  8573  1B6B  00B6               	movwf	??_envio
  8574  1B6C                     u6907:	
  8575  1B6C  0BB6               	decfsz	??_envio,f
  8576  1B6D  2B6C               	goto	u6907
  8577  1B6E  0BB7               	decfsz	??_envio+1,f
  8578  1B6F  2B6C               	goto	u6907
  8579  1B70  2B71               	nop2
  8580                           
  8581                           ;lab3ej2.c: 186: PORTBbits.RB4=0;
  8582  1B71  1283               	bcf	3,5	;RP0=0, select bank0
  8583  1B72  1303               	bcf	3,6	;RP1=0, select bank0
  8584  1B73  1206               	bcf	6,4	;volatile
  8585                           
  8586                           ;lab3ej2.c: 187: _delay((unsigned long)((20)*(20000000/4000.0)));
  8587  1B74  3082               	movlw	130
  8588  1B75  1283               	bcf	3,5	;RP0=0, select bank0
  8589  1B76  1303               	bcf	3,6	;RP1=0, select bank0
  8590  1B77  00B7               	movwf	??_envio+1
  8591  1B78  30DD               	movlw	221
  8592  1B79  00B6               	movwf	??_envio
  8593  1B7A                     u6917:	
  8594  1B7A  0BB6               	decfsz	??_envio,f
  8595  1B7B  2B7A               	goto	u6917
  8596  1B7C  0BB7               	decfsz	??_envio+1,f
  8597  1B7D  2B7A               	goto	u6917
  8598  1B7E  0008               	return
  8599  1B7F                     __end_of_envio:	
  8600                           
  8601                           	psect	text29
  8602  1B2E                     __ptext29:	
  8603 ;; *************** function _InitTMR1 *****************
  8604 ;; Defined at:
  8605 ;;		line 190 in file "lab3ej2.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8619 ;;      Params:         0       0       0       0       0
  8620 ;;      Locals:         0       0       0       0       0
  8621 ;;      Temps:          0       0       0       0       0
  8622 ;;      Totals:         0       0       0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used:    1
  8625 ;; Hardware stack levels required when called:    3
  8626 ;; This function calls:
  8627 ;;		Nothing
  8628 ;; This function is called by:
  8629 ;;		_main
  8630 ;; This function uses a non-reentrant model
  8631 ;;
  8632                           
  8633                           
  8634                           ;psect for function _InitTMR1
  8635  1B2E                     _InitTMR1:	
  8636                           
  8637                           ;lab3ej2.c: 192: T1CON=T1CON | 0x30;
  8638                           
  8639                           ;incstack = 0
  8640                           ; Regs used in _InitTMR1: [wreg+status,2]
  8641  1B2E  1283               	bcf	3,5	;RP0=0, select bank0
  8642  1B2F  1303               	bcf	3,6	;RP1=0, select bank0
  8643  1B30  0810               	movf	16,w	;volatile
  8644  1B31  3830               	iorlw	48
  8645  1B32  0090               	movwf	16	;volatile
  8646                           
  8647                           ;lab3ej2.c: 193: T1CONbits.TMR1CS = 0;
  8648  1B33  1090               	bcf	16,1	;volatile
  8649                           
  8650                           ;lab3ej2.c: 194: T1CONbits.TMR1GE = 0;
  8651  1B34  1310               	bcf	16,6	;volatile
  8652                           
  8653                           ;lab3ej2.c: 195: TMR1H = 0x0B;
  8654  1B35  300B               	movlw	11
  8655  1B36  008F               	movwf	15	;volatile
  8656                           
  8657                           ;lab3ej2.c: 196: TMR1L = 0xDC;
  8658  1B37  30DC               	movlw	220
  8659  1B38  008E               	movwf	14	;volatile
  8660                           
  8661                           ;lab3ej2.c: 197: PIR1bits.TMR1IF = 0;
  8662  1B39  100C               	bcf	12,0	;volatile
  8663                           
  8664                           ;lab3ej2.c: 198: INTCONbits.GIE = 1;
  8665  1B3A  178B               	bsf	11,7	;volatile
  8666                           
  8667                           ;lab3ej2.c: 199: INTCONbits.PEIE = 1;
  8668  1B3B  170B               	bsf	11,6	;volatile
  8669                           
  8670                           ;lab3ej2.c: 200: PIE1bits.TMR1IE = 1;
  8671  1B3C  1683               	bsf	3,5	;RP0=1, select bank1
  8672  1B3D  1303               	bcf	3,6	;RP1=0, select bank1
  8673  1B3E  140C               	bsf	12,0	;volatile
  8674                           
  8675                           ;lab3ej2.c: 201: T1CONbits.TMR1ON = 1;
  8676  1B3F  1283               	bcf	3,5	;RP0=0, select bank0
  8677  1B40  1303               	bcf	3,6	;RP1=0, select bank0
  8678  1B41  1410               	bsf	16,0	;volatile
  8679                           
  8680                           ;lab3ej2.c: 202: PIE1bits.ADIE=1;
  8681  1B42  1683               	bsf	3,5	;RP0=1, select bank1
  8682  1B43  1303               	bcf	3,6	;RP1=0, select bank1
  8683  1B44  170C               	bsf	12,6	;volatile
  8684  1B45  0008               	return
  8685  1B46                     __end_of_InitTMR1:	
  8686                           
  8687                           	psect	text30
  8688  1B19                     __ptext30:	
  8689 ;; *************** function _InitES *****************
  8690 ;; Defined at:
  8691 ;;		line 103 in file "lab3ej2.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8705 ;;      Params:         0       0       0       0       0
  8706 ;;      Locals:         0       0       0       0       0
  8707 ;;      Temps:          0       0       0       0       0
  8708 ;;      Totals:         0       0       0       0       0
  8709 ;;Total ram usage:        0 bytes
  8710 ;; Hardware stack levels used:    1
  8711 ;; Hardware stack levels required when called:    3
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_main
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           
  8720                           ;psect for function _InitES
  8721  1B19                     _InitES:	
  8722                           
  8723                           ;lab3ej2.c: 105: ANSEL=0b00000011;
  8724                           
  8725                           ;incstack = 0
  8726                           ; Regs used in _InitES: [wreg+status,2]
  8727  1B19  3003               	movlw	3
  8728  1B1A  1683               	bsf	3,5	;RP0=1, select bank3
  8729  1B1B  1703               	bsf	3,6	;RP1=1, select bank3
  8730  1B1C  0088               	movwf	8	;volatile
  8731                           
  8732                           ;lab3ej2.c: 106: ANSELH=0;
  8733  1B1D  0189               	clrf	9	;volatile
  8734                           
  8735                           ;lab3ej2.c: 107: TRISA=0b00000011;
  8736  1B1E  3003               	movlw	3
  8737  1B1F  1683               	bsf	3,5	;RP0=1, select bank1
  8738  1B20  1303               	bcf	3,6	;RP1=0, select bank1
  8739  1B21  0085               	movwf	5	;volatile
  8740                           
  8741                           ;lab3ej2.c: 108: TRISB=0b10000000;
  8742  1B22  3080               	movlw	128
  8743  1B23  0086               	movwf	6	;volatile
  8744                           
  8745                           ;lab3ej2.c: 109: ADCON1bits.VCFG0=0;
  8746  1B24  121F               	bcf	31,4	;volatile
  8747                           
  8748                           ;lab3ej2.c: 110: ADCON1bits.VCFG1=0;
  8749  1B25  129F               	bcf	31,5	;volatile
  8750                           
  8751                           ;lab3ej2.c: 111: ADCON1bits.ADFM=1;
  8752  1B26  179F               	bsf	31,7	;volatile
  8753                           
  8754                           ;lab3ej2.c: 112: ADCON0=0b10000101;
  8755  1B27  3085               	movlw	133
  8756  1B28  1283               	bcf	3,5	;RP0=0, select bank0
  8757  1B29  1303               	bcf	3,6	;RP1=0, select bank0
  8758  1B2A  009F               	movwf	31	;volatile
  8759                           
  8760                           ;lab3ej2.c: 113: PORTA=0;
  8761  1B2B  0185               	clrf	5	;volatile
  8762                           
  8763                           ;lab3ej2.c: 114: PORTB=0;
  8764  1B2C  0186               	clrf	6	;volatile
  8765  1B2D  0008               	return
  8766  1B2E                     __end_of_InitES:	
  8767                           
  8768                           	psect	text31
  8769  1DE8                     __ptext31:	
  8770 ;; *************** function _rutinainterrupciones *****************
  8771 ;; Defined at:
  8772 ;;		line 67 in file "lab3ej2.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;		None
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;		None
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0, pclath, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8786 ;;      Params:         0       0       0       0       0
  8787 ;;      Locals:         0       0       0       0       0
  8788 ;;      Temps:          0       6       0       0       0
  8789 ;;      Totals:         0       6       0       0       0
  8790 ;;Total ram usage:        6 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    2
  8793 ;; This function calls:
  8794 ;;		___lwtoft
  8795 ;;		i1___ftmul
  8796 ;; This function is called by:
  8797 ;;		Interrupt level 1
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           
  8802                           ;psect for function _rutinainterrupciones
  8803  1DE8                     _rutinainterrupciones:	
  8804                           
  8805                           ;lab3ej2.c: 69: if(PIR1bits.TMR1IF==1)
  8806  1DE8  1C0C               	btfss	12,0	;volatile
  8807  1DE9  2DF9               	goto	i1l3373
  8808                           
  8809                           ;lab3ej2.c: 70: {
  8810                           ;lab3ej2.c: 71: PIR1bits.TMR1IF=0;
  8811  1DEA  100C               	bcf	12,0	;volatile
  8812                           
  8813                           ;lab3ej2.c: 72: Contador++;
  8814  1DEB  3001               	movlw	1
  8815  1DEC  00B0               	movwf	??_rutinainterrupciones
  8816  1DED  0830               	movf	??_rutinainterrupciones,w
  8817  1DEE  07C9               	addwf	_Contador,f
  8818                           
  8819                           ;lab3ej2.c: 73: TMR1=3036;
  8820  1DEF  300B               	movlw	11
  8821  1DF0  008F               	movwf	15	;volatile
  8822  1DF1  30DC               	movlw	220
  8823  1DF2  008E               	movwf	14	;volatile
  8824                           
  8825                           ;lab3ej2.c: 74: if(Contador==5)
  8826  1DF3  3005               	movlw	5
  8827  1DF4  0649               	xorwf	_Contador,w
  8828  1DF5  1D03               	btfss	3,2
  8829  1DF6  2DF9               	goto	i1l3373
  8830                           
  8831                           ;lab3ej2.c: 75: {
  8832                           ;lab3ej2.c: 76: Contador=0;
  8833  1DF7  01C9               	clrf	_Contador
  8834                           
  8835                           ;lab3ej2.c: 77: ADCON0bits.GO_DONE=1;
  8836  1DF8  149F               	bsf	31,1	;volatile
  8837  1DF9                     i1l3373:	
  8838                           
  8839                           ;lab3ej2.c: 78: }
  8840                           ;lab3ej2.c: 79: }
  8841                           ;lab3ej2.c: 80: if (PIR1bits.ADIF==1)
  8842  1DF9  1F0C               	btfss	12,6	;volatile
  8843  1DFA  2E3D               	goto	i1l90
  8844                           
  8845                           ;lab3ej2.c: 81: {
  8846                           ;lab3ej2.c: 82: PIR1bits.ADIF=0;
  8847  1DFB  130C               	bcf	12,6	;volatile
  8848                           
  8849                           ;lab3ej2.c: 83: adc=ADRESH;
  8850  1DFC  081E               	movf	30,w	;volatile
  8851  1DFD  00B0               	movwf	??_rutinainterrupciones
  8852  1DFE  01B1               	clrf	??_rutinainterrupciones+1
  8853  1DFF  0830               	movf	??_rutinainterrupciones,w
  8854  1E00  00C7               	movwf	_adc
  8855  1E01  0831               	movf	??_rutinainterrupciones+1,w
  8856  1E02  00C8               	movwf	_adc+1
  8857                           
  8858                           ;lab3ej2.c: 84: adc=adc<<8;
  8859  1E03  0847               	movf	_adc,w
  8860  1E04  00B1               	movwf	??_rutinainterrupciones+1
  8861  1E05  01B0               	clrf	??_rutinainterrupciones
  8862  1E06  0830               	movf	??_rutinainterrupciones,w
  8863  1E07  00C7               	movwf	_adc
  8864  1E08  0831               	movf	??_rutinainterrupciones+1,w
  8865  1E09  00C8               	movwf	_adc+1
  8866                           
  8867                           ;lab3ej2.c: 85: adc=adc+ADRESL;
  8868  1E0A  1683               	bsf	3,5	;RP0=1, select bank1
  8869  1E0B  1303               	bcf	3,6	;RP1=0, select bank1
  8870  1E0C  081E               	movf	30,w	;volatile
  8871  1E0D  1283               	bcf	3,5	;RP0=0, select bank0
  8872  1E0E  1303               	bcf	3,6	;RP1=0, select bank0
  8873  1E0F  0747               	addwf	_adc,w
  8874  1E10  00B0               	movwf	??_rutinainterrupciones
  8875  1E11  0848               	movf	_adc+1,w
  8876  1E12  1803               	skipnc
  8877  1E13  0A48               	incf	_adc+1,w
  8878  1E14  00B1               	movwf	??_rutinainterrupciones+1
  8879  1E15  0830               	movf	??_rutinainterrupciones,w
  8880  1E16  00C7               	movwf	_adc
  8881  1E17  0831               	movf	??_rutinainterrupciones+1,w
  8882  1E18  00C8               	movwf	_adc+1
  8883                           
  8884                           ;lab3ej2.c: 86: volt=adc*(5.0/1023.0);
  8885  1E19  3028               	movlw	40
  8886  1E1A  00A0               	movwf	i1___ftmul@f1
  8887  1E1B  30A0               	movlw	160
  8888  1E1C  00A1               	movwf	i1___ftmul@f1+1
  8889  1E1D  303B               	movlw	59
  8890  1E1E  00A2               	movwf	i1___ftmul@f1+2
  8891  1E1F  0848               	movf	_adc+1,w
  8892  1E20  00F9               	movwf	___lwtoft@c+1
  8893  1E21  0847               	movf	_adc,w
  8894  1E22  00F8               	movwf	___lwtoft@c
  8895  1E23  160A  158A  2305  160A  158A  	fcall	___lwtoft
  8896  1E28  0878               	movf	?___lwtoft,w
  8897  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  8898  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  8899  1E2B  00A3               	movwf	i1___ftmul@f2
  8900  1E2C  0879               	movf	?___lwtoft+1,w
  8901  1E2D  00A4               	movwf	i1___ftmul@f2+1
  8902  1E2E  087A               	movf	?___lwtoft+2,w
  8903  1E2F  00A5               	movwf	i1___ftmul@f2+2
  8904  1E30  160A  118A  2163  160A  158A  	fcall	i1___ftmul
  8905  1E35  1283               	bcf	3,5	;RP0=0, select bank0
  8906  1E36  1303               	bcf	3,6	;RP1=0, select bank0
  8907  1E37  0820               	movf	?i1___ftmul,w
  8908  1E38  00C4               	movwf	_volt
  8909  1E39  0821               	movf	?i1___ftmul+1,w
  8910  1E3A  00C5               	movwf	_volt+1
  8911  1E3B  0822               	movf	?i1___ftmul+2,w
  8912  1E3C  00C6               	movwf	_volt+2
  8913  1E3D                     i1l90:	
  8914  1E3D  0835               	movf	??_rutinainterrupciones+5,w
  8915  1E3E  00FF               	movwf	127
  8916  1E3F  0834               	movf	??_rutinainterrupciones+4,w
  8917  1E40  008A               	movwf	10
  8918  1E41  0833               	movf	??_rutinainterrupciones+3,w
  8919  1E42  0084               	movwf	4
  8920  1E43  0E32               	swapf	(??_rutinainterrupciones+2)^0,w
  8921  1E44  0083               	movwf	3
  8922  1E45  0EFE               	swapf	126,f
  8923  1E46  0E7E               	swapf	126,w
  8924  1E47  0009               	retfie
  8925  1E48                     __end_of_rutinainterrupciones:	
  8926                           
  8927                           	psect	intentry
  8928  0004                     __pintentry:	
  8929                           ;incstack = 0
  8930                           ; Regs used in _rutinainterrupciones: [wreg+status,2+status,0+pclath+cstack]
  8931                           
  8932  0004                     interrupt_function:	
  8933  007E                     saved_w	set	btemp
  8934  0004  00FE               	movwf	btemp
  8935  0005  0E03               	swapf	3,w
  8936  0006  1283               	bcf	3,5	;RP0=0, select bank0
  8937  0007  1303               	bcf	3,6	;RP1=0, select bank0
  8938  0008  00B2               	movwf	??_rutinainterrupciones+2
  8939  0009  0804               	movf	4,w
  8940  000A  00B3               	movwf	??_rutinainterrupciones+3
  8941  000B  080A               	movf	10,w
  8942  000C  00B4               	movwf	??_rutinainterrupciones+4
  8943  000D  087F               	movf	btemp+1,w
  8944  000E  00B5               	movwf	??_rutinainterrupciones+5
  8945  000F  160A  158A  2DE8   	ljmp	_rutinainterrupciones
  8946                           
  8947                           	psect	text32
  8948  1163                     __ptext32:	
  8949 ;; *************** function i1___ftmul *****************
  8950 ;; Defined at:
  8951 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  f1              3    0[BANK0 ] float 
  8954 ;;  f2              3    3[BANK0 ] float 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  __ftmul         3   11[BANK0 ] unsigned um
  8957 ;;  __ftmul         1   15[BANK0 ] unsigned char 
  8958 ;;  __ftmul         1   14[BANK0 ] unsigned char 
  8959 ;;  __ftmul         1   10[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  3    0[BANK0 ] float 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0, pclath, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8969 ;;      Params:         0       6       0       0       0
  8970 ;;      Locals:         0       6       0       0       0
  8971 ;;      Temps:          0       4       0       0       0
  8972 ;;      Totals:         0      16       0       0       0
  8973 ;;Total ram usage:       16 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    1
  8976 ;; This function calls:
  8977 ;;		i1___ftpack
  8978 ;; This function is called by:
  8979 ;;		_rutinainterrupciones
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function i1___ftmul
  8985  1163                     i1___ftmul:	
  8986                           
  8987                           ;incstack = 0
  8988                           ; Regs used in i1___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8989  1163  1283               	bcf	3,5	;RP0=0, select bank0
  8990  1164  1303               	bcf	3,6	;RP1=0, select bank0
  8991  1165  0820               	movf	i1___ftmul@f1,w
  8992  1166  00A6               	movwf	??i1___ftmul
  8993  1167  0821               	movf	i1___ftmul@f1+1,w
  8994  1168  00A7               	movwf	??i1___ftmul+1
  8995  1169  0822               	movf	i1___ftmul@f1+2,w
  8996  116A  00A8               	movwf	??i1___ftmul+2
  8997  116B  1003               	clrc
  8998  116C  0D27               	rlf	??i1___ftmul+1,w
  8999  116D  0D28               	rlf	??i1___ftmul+2,w
  9000  116E  00A9               	movwf	??i1___ftmul+3
  9001  116F  0829               	movf	??i1___ftmul+3,w
  9002  1170  00AA               	movwf	i1___ftmul@exp
  9003  1171  082A               	movf	i1___ftmul@exp,w
  9004  1172  1D03               	btfss	3,2
  9005  1173  297B               	goto	i1l3317
  9006  1174  3000               	movlw	0
  9007  1175  00A0               	movwf	?i1___ftmul
  9008  1176  3000               	movlw	0
  9009  1177  00A1               	movwf	?i1___ftmul+1
  9010  1178  3000               	movlw	0
  9011  1179  00A2               	movwf	?i1___ftmul+2
  9012  117A  0008               	return
  9013  117B                     i1l3317:	
  9014  117B  0823               	movf	i1___ftmul@f2,w
  9015  117C  00A6               	movwf	??i1___ftmul
  9016  117D  0824               	movf	i1___ftmul@f2+1,w
  9017  117E  00A7               	movwf	??i1___ftmul+1
  9018  117F  0825               	movf	i1___ftmul@f2+2,w
  9019  1180  00A8               	movwf	??i1___ftmul+2
  9020  1181  1003               	clrc
  9021  1182  0D27               	rlf	??i1___ftmul+1,w
  9022  1183  0D28               	rlf	??i1___ftmul+2,w
  9023  1184  00A9               	movwf	??i1___ftmul+3
  9024  1185  0829               	movf	??i1___ftmul+3,w
  9025  1186  00AF               	movwf	i1___ftmul@sign
  9026  1187  082F               	movf	i1___ftmul@sign,w
  9027  1188  1D03               	btfss	3,2
  9028  1189  2991               	goto	i1l3323
  9029  118A  3000               	movlw	0
  9030  118B  00A0               	movwf	?i1___ftmul
  9031  118C  3000               	movlw	0
  9032  118D  00A1               	movwf	?i1___ftmul+1
  9033  118E  3000               	movlw	0
  9034  118F  00A2               	movwf	?i1___ftmul+2
  9035  1190  0008               	return
  9036  1191                     i1l3323:	
  9037  1191  082F               	movf	i1___ftmul@sign,w
  9038  1192  3E7B               	addlw	123
  9039  1193  00A6               	movwf	??i1___ftmul
  9040  1194  0826               	movf	??i1___ftmul,w
  9041  1195  07AA               	addwf	i1___ftmul@exp,f
  9042  1196  0820               	movf	i1___ftmul@f1,w
  9043  1197  00A6               	movwf	??i1___ftmul
  9044  1198  0821               	movf	i1___ftmul@f1+1,w
  9045  1199  00A7               	movwf	??i1___ftmul+1
  9046  119A  0822               	movf	i1___ftmul@f1+2,w
  9047  119B  00A8               	movwf	??i1___ftmul+2
  9048  119C  3010               	movlw	16
  9049  119D                     u454_25:	
  9050  119D  1003               	clrc
  9051  119E  0CA8               	rrf	??i1___ftmul+2,f
  9052  119F  0CA7               	rrf	??i1___ftmul+1,f
  9053  11A0  0CA6               	rrf	??i1___ftmul,f
  9054  11A1  3EFF               	addlw	-1
  9055  11A2  1D03               	skipz
  9056  11A3  299D               	goto	u454_25
  9057  11A4  0826               	movf	??i1___ftmul,w
  9058  11A5  00A9               	movwf	??i1___ftmul+3
  9059  11A6  0829               	movf	??i1___ftmul+3,w
  9060  11A7  00AF               	movwf	i1___ftmul@sign
  9061  11A8  0823               	movf	i1___ftmul@f2,w
  9062  11A9  00A6               	movwf	??i1___ftmul
  9063  11AA  0824               	movf	i1___ftmul@f2+1,w
  9064  11AB  00A7               	movwf	??i1___ftmul+1
  9065  11AC  0825               	movf	i1___ftmul@f2+2,w
  9066  11AD  00A8               	movwf	??i1___ftmul+2
  9067  11AE  3010               	movlw	16
  9068  11AF                     u455_25:	
  9069  11AF  1003               	clrc
  9070  11B0  0CA8               	rrf	??i1___ftmul+2,f
  9071  11B1  0CA7               	rrf	??i1___ftmul+1,f
  9072  11B2  0CA6               	rrf	??i1___ftmul,f
  9073  11B3  3EFF               	addlw	-1
  9074  11B4  1D03               	skipz
  9075  11B5  29AF               	goto	u455_25
  9076  11B6  0826               	movf	??i1___ftmul,w
  9077  11B7  00A9               	movwf	??i1___ftmul+3
  9078  11B8  0829               	movf	??i1___ftmul+3,w
  9079  11B9  06AF               	xorwf	i1___ftmul@sign,f
  9080  11BA  3080               	movlw	128
  9081  11BB  00A6               	movwf	??i1___ftmul
  9082  11BC  0826               	movf	??i1___ftmul,w
  9083  11BD  05AF               	andwf	i1___ftmul@sign,f
  9084  11BE  17A1               	bsf	i1___ftmul@f1+1,7
  9085  11BF  17A4               	bsf	i1___ftmul@f2+1,7
  9086  11C0  30FF               	movlw	255
  9087  11C1  05A3               	andwf	i1___ftmul@f2,f
  9088  11C2  30FF               	movlw	255
  9089  11C3  05A4               	andwf	i1___ftmul@f2+1,f
  9090  11C4  3000               	movlw	0
  9091  11C5  05A5               	andwf	i1___ftmul@f2+2,f
  9092  11C6  3000               	movlw	0
  9093  11C7  00AB               	movwf	i1___ftmul@f3_as_product
  9094  11C8  3000               	movlw	0
  9095  11C9  00AC               	movwf	i1___ftmul@f3_as_product+1
  9096  11CA  3000               	movlw	0
  9097  11CB  00AD               	movwf	i1___ftmul@f3_as_product+2
  9098  11CC  3007               	movlw	7
  9099  11CD  00A6               	movwf	??i1___ftmul
  9100  11CE  0826               	movf	??i1___ftmul,w
  9101  11CF  00AE               	movwf	i1___ftmul@cntr
  9102  11D0                     i1l3335:	
  9103  11D0  1C20               	btfss	i1___ftmul@f1,0
  9104  11D1  29E0               	goto	i1l3339
  9105  11D2  0823               	movf	i1___ftmul@f2,w
  9106  11D3  07AB               	addwf	i1___ftmul@f3_as_product,f
  9107  11D4  0824               	movf	i1___ftmul@f2+1,w
  9108  11D5  1103               	clrz
  9109  11D6  1803               	skipnc
  9110  11D7  0A24               	incf	i1___ftmul@f2+1,w
  9111  11D8  1D03               	btfss	3,2
  9112  11D9  07AC               	addwf	i1___ftmul@f3_as_product+1,f
  9113  11DA  0825               	movf	i1___ftmul@f2+2,w
  9114  11DB  1103               	clrz
  9115  11DC  1803               	skipnc
  9116  11DD  0A25               	incf	i1___ftmul@f2+2,w
  9117  11DE  1D03               	btfss	3,2
  9118  11DF  07AD               	addwf	i1___ftmul@f3_as_product+2,f
  9119  11E0                     i1l3339:	
  9120  11E0  3001               	movlw	1
  9121  11E1                     u458_25:	
  9122  11E1  1003               	clrc
  9123  11E2  0CA2               	rrf	i1___ftmul@f1+2,f
  9124  11E3  0CA1               	rrf	i1___ftmul@f1+1,f
  9125  11E4  0CA0               	rrf	i1___ftmul@f1,f
  9126  11E5  3EFF               	addlw	-1
  9127  11E6  1D03               	skipz
  9128  11E7  29E1               	goto	u458_25
  9129  11E8  3001               	movlw	1
  9130  11E9                     u459_25:	
  9131  11E9  1003               	clrc
  9132  11EA  0DA3               	rlf	i1___ftmul@f2,f
  9133  11EB  0DA4               	rlf	i1___ftmul@f2+1,f
  9134  11EC  0DA5               	rlf	i1___ftmul@f2+2,f
  9135  11ED  3EFF               	addlw	-1
  9136  11EE  1D03               	skipz
  9137  11EF  29E9               	goto	u459_25
  9138  11F0  3001               	movlw	1
  9139  11F1  02AE               	subwf	i1___ftmul@cntr,f
  9140  11F2  1D03               	btfss	3,2
  9141  11F3  29D0               	goto	i1l3335
  9142  11F4  3009               	movlw	9
  9143  11F5  00A6               	movwf	??i1___ftmul
  9144  11F6  0826               	movf	??i1___ftmul,w
  9145  11F7  00AE               	movwf	i1___ftmul@cntr
  9146  11F8                     i1l3347:	
  9147  11F8  1C20               	btfss	i1___ftmul@f1,0
  9148  11F9  2A08               	goto	i1l3351
  9149  11FA  0823               	movf	i1___ftmul@f2,w
  9150  11FB  07AB               	addwf	i1___ftmul@f3_as_product,f
  9151  11FC  0824               	movf	i1___ftmul@f2+1,w
  9152  11FD  1103               	clrz
  9153  11FE  1803               	skipnc
  9154  11FF  0A24               	incf	i1___ftmul@f2+1,w
  9155  1200  1D03               	btfss	3,2
  9156  1201  07AC               	addwf	i1___ftmul@f3_as_product+1,f
  9157  1202  0825               	movf	i1___ftmul@f2+2,w
  9158  1203  1103               	clrz
  9159  1204  1803               	skipnc
  9160  1205  0A25               	incf	i1___ftmul@f2+2,w
  9161  1206  1D03               	btfss	3,2
  9162  1207  07AD               	addwf	i1___ftmul@f3_as_product+2,f
  9163  1208                     i1l3351:	
  9164  1208  3001               	movlw	1
  9165  1209                     u463_25:	
  9166  1209  1003               	clrc
  9167  120A  0CA2               	rrf	i1___ftmul@f1+2,f
  9168  120B  0CA1               	rrf	i1___ftmul@f1+1,f
  9169  120C  0CA0               	rrf	i1___ftmul@f1,f
  9170  120D  3EFF               	addlw	-1
  9171  120E  1D03               	skipz
  9172  120F  2A09               	goto	u463_25
  9173  1210  3001               	movlw	1
  9174  1211                     u464_25:	
  9175  1211  1003               	clrc
  9176  1212  0CAD               	rrf	i1___ftmul@f3_as_product+2,f
  9177  1213  0CAC               	rrf	i1___ftmul@f3_as_product+1,f
  9178  1214  0CAB               	rrf	i1___ftmul@f3_as_product,f
  9179  1215  3EFF               	addlw	-1
  9180  1216  1D03               	skipz
  9181  1217  2A11               	goto	u464_25
  9182  1218  3001               	movlw	1
  9183  1219  02AE               	subwf	i1___ftmul@cntr,f
  9184  121A  1D03               	btfss	3,2
  9185  121B  29F8               	goto	i1l3347
  9186  121C  082B               	movf	i1___ftmul@f3_as_product,w
  9187  121D  00F0               	movwf	i1___ftpack@arg
  9188  121E  082C               	movf	i1___ftmul@f3_as_product+1,w
  9189  121F  00F1               	movwf	i1___ftpack@arg+1
  9190  1220  082D               	movf	i1___ftmul@f3_as_product+2,w
  9191  1221  00F2               	movwf	i1___ftpack@arg+2
  9192  1222  082A               	movf	i1___ftmul@exp,w
  9193  1223  00A6               	movwf	??i1___ftmul
  9194  1224  0826               	movf	??i1___ftmul,w
  9195  1225  00F3               	movwf	i1___ftpack@exp
  9196  1226  082F               	movf	i1___ftmul@sign,w
  9197  1227  00A7               	movwf	??i1___ftmul+1
  9198  1228  0827               	movf	??i1___ftmul+1,w
  9199  1229  00F4               	movwf	i1___ftpack@sign
  9200  122A  160A  158A  26A8   	fcall	i1___ftpack
  9201  122D  0870               	movf	?i1___ftpack,w
  9202  122E  1283               	bcf	3,5	;RP0=0, select bank0
  9203  122F  1303               	bcf	3,6	;RP1=0, select bank0
  9204  1230  00A0               	movwf	?i1___ftmul
  9205  1231  0871               	movf	?i1___ftpack+1,w
  9206  1232  00A1               	movwf	?i1___ftmul+1
  9207  1233  0872               	movf	?i1___ftpack+2,w
  9208  1234  00A2               	movwf	?i1___ftmul+2
  9209  1235  0008               	return
  9210  1236                     __end_ofi1___ftmul:	
  9211                           
  9212                           	psect	text33
  9213  1B05                     __ptext33:	
  9214 ;; *************** function ___lwtoft *****************
  9215 ;; Defined at:
  9216 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  c               2    8[COMMON] unsigned int 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  3    8[COMMON] float 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, pclath, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9230 ;;      Params:         3       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0
  9232 ;;      Temps:          1       0       0       0       0
  9233 ;;      Totals:         4       0       0       0       0
  9234 ;;Total ram usage:        4 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    1
  9237 ;; This function calls:
  9238 ;;		i1___ftpack
  9239 ;; This function is called by:
  9240 ;;		_rutinainterrupciones
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           
  9245                           ;psect for function ___lwtoft
  9246  1B05                     ___lwtoft:	
  9247                           
  9248                           ;incstack = 0
  9249                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  9250  1B05  0878               	movf	___lwtoft@c,w
  9251  1B06  00F0               	movwf	i1___ftpack@arg
  9252  1B07  0879               	movf	___lwtoft@c+1,w
  9253  1B08  00F1               	movwf	i1___ftpack@arg+1
  9254  1B09  01F2               	clrf	i1___ftpack@arg+2
  9255  1B0A  308E               	movlw	142
  9256  1B0B  00FB               	movwf	??___lwtoft
  9257  1B0C  087B               	movf	??___lwtoft,w
  9258  1B0D  00F3               	movwf	i1___ftpack@exp
  9259  1B0E  01F4               	clrf	i1___ftpack@sign
  9260  1B0F  160A  158A  26A8   	fcall	i1___ftpack
  9261  1B12  0870               	movf	?i1___ftpack,w
  9262  1B13  00F8               	movwf	?___lwtoft
  9263  1B14  0871               	movf	?i1___ftpack+1,w
  9264  1B15  00F9               	movwf	?___lwtoft+1
  9265  1B16  0872               	movf	?i1___ftpack+2,w
  9266  1B17  00FA               	movwf	?___lwtoft+2
  9267  1B18  0008               	return
  9268  1B19                     __end_of___lwtoft:	
  9269                           
  9270                           	psect	text34
  9271  1EA8                     __ptext34:	
  9272 ;; *************** function i1___ftpack *****************
  9273 ;; Defined at:
  9274 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  arg             3    0[COMMON] unsigned um
  9277 ;;  exp             1    3[COMMON] unsigned char 
  9278 ;;  sign            1    4[COMMON] unsigned char 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  3    0[COMMON] float 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9290 ;;      Params:         5       0       0       0       0
  9291 ;;      Locals:         0       0       0       0       0
  9292 ;;      Temps:          3       0       0       0       0
  9293 ;;      Totals:         8       0       0       0       0
  9294 ;;Total ram usage:        8 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; This function calls:
  9297 ;;		Nothing
  9298 ;; This function is called by:
  9299 ;;		___lwtoft
  9300 ;;		i1___ftmul
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           
  9305                           ;psect for function i1___ftpack
  9306  1EA8                     i1___ftpack:	
  9307                           
  9308                           ;incstack = 0
  9309                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  9310  1EA8  0873               	movf	i1___ftpack@exp,w
  9311  1EA9  1903               	btfsc	3,2
  9312  1EAA  2EB0               	goto	i1l3001
  9313  1EAB  0872               	movf	i1___ftpack@arg+2,w
  9314  1EAC  0471               	iorwf	i1___ftpack@arg+1,w
  9315  1EAD  0470               	iorwf	i1___ftpack@arg,w
  9316  1EAE  1D03               	skipz
  9317  1EAF  2EC3               	goto	i1l3007
  9318  1EB0                     i1l3001:	
  9319  1EB0  3000               	movlw	0
  9320  1EB1  00F0               	movwf	?i1___ftpack
  9321  1EB2  3000               	movlw	0
  9322  1EB3  00F1               	movwf	?i1___ftpack+1
  9323  1EB4  3000               	movlw	0
  9324  1EB5  00F2               	movwf	?i1___ftpack+2
  9325  1EB6  0008               	return
  9326  1EB7                     i1l3005:	
  9327  1EB7  3001               	movlw	1
  9328  1EB8  00F5               	movwf	??i1___ftpack
  9329  1EB9  0875               	movf	??i1___ftpack,w
  9330  1EBA  07F3               	addwf	i1___ftpack@exp,f
  9331  1EBB  3001               	movlw	1
  9332  1EBC                     u437_25:	
  9333  1EBC  1003               	clrc
  9334  1EBD  0CF2               	rrf	i1___ftpack@arg+2,f
  9335  1EBE  0CF1               	rrf	i1___ftpack@arg+1,f
  9336  1EBF  0CF0               	rrf	i1___ftpack@arg,f
  9337  1EC0  3EFF               	addlw	-1
  9338  1EC1  1D03               	skipz
  9339  1EC2  2EBC               	goto	u437_25
  9340  1EC3                     i1l3007:	
  9341  1EC3  30FE               	movlw	254
  9342  1EC4  0572               	andwf	i1___ftpack@arg+2,w
  9343  1EC5  1903               	btfsc	3,2
  9344  1EC6  2EDE               	goto	i1l520
  9345  1EC7  2EB7               	goto	i1l3005
  9346  1EC8                     i1l3009:	
  9347  1EC8  3001               	movlw	1
  9348  1EC9  00F5               	movwf	??i1___ftpack
  9349  1ECA  0875               	movf	??i1___ftpack,w
  9350  1ECB  07F3               	addwf	i1___ftpack@exp,f
  9351  1ECC  3001               	movlw	1
  9352  1ECD  07F0               	addwf	i1___ftpack@arg,f
  9353  1ECE  3000               	movlw	0
  9354  1ECF  1803               	skipnc
  9355  1ED0  3001               	movlw	1
  9356  1ED1  07F1               	addwf	i1___ftpack@arg+1,f
  9357  1ED2  3000               	movlw	0
  9358  1ED3  1803               	skipnc
  9359  1ED4  3001               	movlw	1
  9360  1ED5  07F2               	addwf	i1___ftpack@arg+2,f
  9361  1ED6  3001               	movlw	1
  9362  1ED7                     u439_25:	
  9363  1ED7  1003               	clrc
  9364  1ED8  0CF2               	rrf	i1___ftpack@arg+2,f
  9365  1ED9  0CF1               	rrf	i1___ftpack@arg+1,f
  9366  1EDA  0CF0               	rrf	i1___ftpack@arg,f
  9367  1EDB  3EFF               	addlw	-1
  9368  1EDC  1D03               	skipz
  9369  1EDD  2ED7               	goto	u439_25
  9370  1EDE                     i1l520:	
  9371  1EDE  30FF               	movlw	255
  9372  1EDF  0572               	andwf	i1___ftpack@arg+2,w
  9373  1EE0  1903               	btfsc	3,2
  9374  1EE1  2EED               	goto	i1l3017
  9375  1EE2  2EC8               	goto	i1l3009
  9376  1EE3                     i1l3015:	
  9377  1EE3  3001               	movlw	1
  9378  1EE4  02F3               	subwf	i1___ftpack@exp,f
  9379  1EE5  3001               	movlw	1
  9380  1EE6                     u441_25:	
  9381  1EE6  1003               	clrc
  9382  1EE7  0DF0               	rlf	i1___ftpack@arg,f
  9383  1EE8  0DF1               	rlf	i1___ftpack@arg+1,f
  9384  1EE9  0DF2               	rlf	i1___ftpack@arg+2,f
  9385  1EEA  3EFF               	addlw	-1
  9386  1EEB  1D03               	skipz
  9387  1EEC  2EE6               	goto	u441_25
  9388  1EED                     i1l3017:	
  9389  1EED  1BF1               	btfsc	i1___ftpack@arg+1,7
  9390  1EEE  2EF3               	goto	i1l527
  9391  1EEF  3002               	movlw	2
  9392  1EF0  0273               	subwf	i1___ftpack@exp,w
  9393  1EF1  1803               	skipnc
  9394  1EF2  2EE3               	goto	i1l3015
  9395  1EF3                     i1l527:	
  9396  1EF3  1873               	btfsc	i1___ftpack@exp,0
  9397  1EF4  2EFB               	goto	i1l528
  9398  1EF5  30FF               	movlw	255
  9399  1EF6  05F0               	andwf	i1___ftpack@arg,f
  9400  1EF7  307F               	movlw	127
  9401  1EF8  05F1               	andwf	i1___ftpack@arg+1,f
  9402  1EF9  30FF               	movlw	255
  9403  1EFA  05F2               	andwf	i1___ftpack@arg+2,f
  9404  1EFB                     i1l528:	
  9405  1EFB  1003               	clrc
  9406  1EFC  0CF3               	rrf	i1___ftpack@exp,f
  9407  1EFD  0873               	movf	i1___ftpack@exp,w
  9408  1EFE  00F5               	movwf	??i1___ftpack
  9409  1EFF  01F6               	clrf	??i1___ftpack+1
  9410  1F00  01F7               	clrf	??i1___ftpack+2
  9411  1F01  3010               	movlw	16
  9412  1F02                     u445_25:	
  9413  1F02  1003               	clrc
  9414  1F03  0DF5               	rlf	??i1___ftpack,f
  9415  1F04  0DF6               	rlf	??i1___ftpack+1,f
  9416  1F05  0DF7               	rlf	??i1___ftpack+2,f
  9417  1F06  3EFF               	addlw	-1
  9418  1F07  1D03               	skipz
  9419  1F08  2F02               	goto	u445_25
  9420  1F09  0875               	movf	??i1___ftpack,w
  9421  1F0A  04F0               	iorwf	i1___ftpack@arg,f
  9422  1F0B  0876               	movf	??i1___ftpack+1,w
  9423  1F0C  04F1               	iorwf	i1___ftpack@arg+1,f
  9424  1F0D  0877               	movf	??i1___ftpack+2,w
  9425  1F0E  04F2               	iorwf	i1___ftpack@arg+2,f
  9426  1F0F  0874               	movf	i1___ftpack@sign,w
  9427  1F10  1903               	btfsc	3,2
  9428  1F11  0008               	return
  9429  1F12  17F2               	bsf	i1___ftpack@arg+2,7
  9430  1F13  0008               	return
  9431  1F14                     __end_ofi1___ftpack:	
  9432  007E                     btemp	set	126	;btemp
  9433  007E                     wtemp0	set	126
  9434                           
  9435                           	psect	text3_split_1
  9436  0AA3                     l4161:	
  9437                           ;doprnt.c: 1233: }
  9438                           ;doprnt.c: 1235: while(prec) {
  9439                           
  9440                           
  9441                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9442  0AA3  3030               	movlw	48
  9443  0AA4  1683               	bsf	3,5	;RP0=1, select bank1
  9444  0AA5  1303               	bcf	3,6	;RP1=0, select bank1
  9445  0AA6  00E1               	movwf	??_sprintf^(0+128)
  9446  0AA7  0859               	movf	sprintf@sp^(0+128),w
  9447  0AA8  0084               	movwf	4
  9448  0AA9  1783               	bsf	3,7
  9449  0AAA  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  9450  0AAB  1383               	bcf	3,7
  9451  0AAC  0861               	movf	??_sprintf^(0+128),w
  9452  0AAD  0080               	movwf	0
  9453  0AAE  3001               	movlw	1
  9454  0AAF  07D9               	addwf	sprintf@sp^(0+128),f
  9455  0AB0  1803               	skipnc
  9456  0AB1  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  9457                           
  9458                           ;doprnt.c: 1237: prec--;
  9459  0AB2  30FF               	movlw	255
  9460  0AB3  1683               	bsf	3,5	;RP0=1, select bank3
  9461  0AB4  1703               	bsf	3,6	;RP1=1, select bank3
  9462  0AB5  07A5               	addwf	sprintf@prec^(0+384),f
  9463  0AB6  1803               	skipnc
  9464  0AB7  0AA6               	incf	(sprintf@prec+1)^(0+384),f
  9465  0AB8  30FF               	movlw	255
  9466  0AB9  07A6               	addwf	(sprintf@prec+1)^(0+384),f
  9467  0ABA                     l4167:	
  9468  0ABA  0825               	movf	sprintf@prec^(0+384),w
  9469  0ABB  0426               	iorwf	(sprintf@prec+1)^(0+384),w
  9470  0ABC  1903               	btfsc	3,2
  9471  0ABD  2D06               	goto	L14
  9472  0ABE  2AA3               	goto	l4161
  9473  0ABF                     l191:	
  9474                           ;doprnt.c: 1238: }
  9475                           ;doprnt.c: 1245: continue;
  9476                           
  9477                           
  9478                           ;doprnt.c: 1246: }
  9479                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  9480  0ABF  1683               	bsf	3,5	;RP0=1, select bank3
  9481  0AC0  1703               	bsf	3,6	;RP1=1, select bank3
  9482  0AC1  1B14               	btfsc	sprintf@flag^(0+384),6
  9483  0AC2  2AF6               	goto	l4179
  9484                           
  9485                           ;doprnt.c: 1253: {
  9486                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9487  0AC3  0813               	movf	sprintf@ap^(0+384),w
  9488  0AC4  0084               	movwf	4
  9489  0AC5  1383               	bcf	3,7	;select IRP bank0
  9490  0AC6  0800               	movf	0,w
  9491  0AC7  1683               	bsf	3,5	;RP0=1, select bank1
  9492  0AC8  1303               	bcf	3,6	;RP1=0, select bank1
  9493  0AC9  00E1               	movwf	??_sprintf^(0+128)
  9494  0ACA  0A84               	incf	4,f
  9495  0ACB  0800               	movf	0,w
  9496  0ACC  00E2               	movwf	(??_sprintf^(0+128)+1)
  9497  0ACD  0861               	movf	??_sprintf^(0+128),w
  9498  0ACE  1683               	bsf	3,5	;RP0=1, select bank3
  9499  0ACF  1703               	bsf	3,6	;RP1=1, select bank3
  9500  0AD0  009C               	movwf	sprintf@val^(0+384)
  9501  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  9502  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  9503  0AD3  0862               	movf	(??_sprintf+1)^(0+128),w
  9504  0AD4  1683               	bsf	3,5	;RP0=1, select bank3
  9505  0AD5  1703               	bsf	3,6	;RP1=1, select bank3
  9506  0AD6  009D               	movwf	(sprintf@val+1)^(0+384)
  9507  0AD7  3000               	movlw	0
  9508  0AD8  1B9D               	btfsc	(sprintf@val+1)^(0+384),7
  9509  0AD9  30FF               	movlw	255
  9510  0ADA  009E               	movwf	(sprintf@val+2)^(0+384)
  9511  0ADB  009F               	movwf	(sprintf@val+3)^(0+384)
  9512  0ADC  3002               	movlw	2
  9513  0ADD  1683               	bsf	3,5	;RP0=1, select bank1
  9514  0ADE  1303               	bcf	3,6	;RP1=0, select bank1
  9515  0ADF  00E1               	movwf	??_sprintf^(0+128)
  9516  0AE0  0861               	movf	??_sprintf^(0+128),w
  9517  0AE1  1683               	bsf	3,5	;RP0=1, select bank3
  9518  0AE2  1703               	bsf	3,6	;RP1=1, select bank3
  9519  0AE3  0793               	addwf	sprintf@ap^(0+384),f
  9520                           
  9521                           ;doprnt.c: 1261: if((long)val < 0) {
  9522  0AE4  1F9F               	btfss	(sprintf@val+3)^(0+384),7
  9523  0AE5  2B14               	goto	l4183
  9524                           
  9525                           ;doprnt.c: 1262: flag |= 0x03;
  9526  0AE6  3003               	movlw	3
  9527  0AE7  0494               	iorwf	sprintf@flag^(0+384),f
  9528  0AE8  3000               	movlw	0
  9529  0AE9  0495               	iorwf	(sprintf@flag+1)^(0+384),f
  9530                           
  9531                           ;doprnt.c: 1263: val = -val;
  9532  0AEA  099C               	comf	sprintf@val^(0+384),f
  9533  0AEB  099D               	comf	(sprintf@val+1)^(0+384),f
  9534  0AEC  099E               	comf	(sprintf@val+2)^(0+384),f
  9535  0AED  099F               	comf	(sprintf@val+3)^(0+384),f
  9536  0AEE  0A9C               	incf	sprintf@val^(0+384),f
  9537  0AEF  1903               	skipnz
  9538  0AF0  0A9D               	incf	(sprintf@val+1)^(0+384),f
  9539  0AF1  1903               	skipnz
  9540  0AF2  0A9E               	incf	(sprintf@val+2)^(0+384),f
  9541  0AF3  1903               	skipnz
  9542  0AF4  0A9F               	incf	(sprintf@val+3)^(0+384),f
  9543                           
  9544                           ;doprnt.c: 1264: }
  9545                           ;doprnt.c: 1266: }
  9546  0AF5  2B14               	goto	l4183
  9547  0AF6                     l4179:	
  9548                           
  9549                           ;doprnt.c: 1268: else
  9550                           ;doprnt.c: 1273: {
  9551                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  9552  0AF6  0813               	movf	sprintf@ap^(0+384),w
  9553  0AF7  0084               	movwf	4
  9554  0AF8  1383               	bcf	3,7	;select IRP bank0
  9555  0AF9  0800               	movf	0,w
  9556  0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  9557  0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  9558  0AFC  00E1               	movwf	??_sprintf^(0+128)
  9559  0AFD  0A84               	incf	4,f
  9560  0AFE  0800               	movf	0,w
  9561  0AFF  00E2               	movwf	(??_sprintf^(0+128)+1)
  9562  0B00  0861               	movf	??_sprintf^(0+128),w
  9563  0B01  1683               	bsf	3,5	;RP0=1, select bank3
  9564  0B02  1703               	bsf	3,6	;RP1=1, select bank3
  9565  0B03  009C               	movwf	sprintf@val^(0+384)
  9566  0B04  1683               	bsf	3,5	;RP0=1, select bank1
  9567  0B05  1303               	bcf	3,6	;RP1=0, select bank1
  9568  0B06  0862               	movf	(??_sprintf+1)^(0+128),w
  9569  0B07  1683               	bsf	3,5	;RP0=1, select bank3
  9570  0B08  1703               	bsf	3,6	;RP1=1, select bank3
  9571  0B09  009D               	movwf	(sprintf@val^(0+384)+1)
  9572  0B0A  019E               	clrf	(sprintf@val^(0+384)+2)
  9573  0B0B  019F               	clrf	(sprintf@val^(0+384)+3)
  9574  0B0C  3002               	movlw	2
  9575  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  9576  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  9577  0B0F  00E1               	movwf	??_sprintf^(0+128)
  9578  0B10  0861               	movf	??_sprintf^(0+128),w
  9579  0B11  1683               	bsf	3,5	;RP0=1, select bank3
  9580  0B12  1703               	bsf	3,6	;RP1=1, select bank3
  9581  0B13  0793               	addwf	sprintf@ap^(0+384),f
  9582  0B14                     l4183:	
  9583                           
  9584                           ;doprnt.c: 1287: }
  9585                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9586  0B14  0825               	movf	sprintf@prec^(0+384),w
  9587  0B15  0426               	iorwf	(sprintf@prec+1)^(0+384),w
  9588  0B16  1D03               	btfss	3,2
  9589  0B17  2B24               	goto	l4189
  9590  0B18  081F               	movf	(sprintf@val+3)^(0+384),w
  9591  0B19  041E               	iorwf	(sprintf@val+2)^(0+384),w
  9592  0B1A  041D               	iorwf	(sprintf@val+1)^(0+384),w
  9593  0B1B  041C               	iorwf	sprintf@val^(0+384),w
  9594  0B1C  1D03               	skipz
  9595  0B1D  2B24               	goto	l4189
  9596                           
  9597                           ;doprnt.c: 1291: prec++;
  9598  0B1E  3001               	movlw	1
  9599  0B1F  07A5               	addwf	sprintf@prec^(0+384),f
  9600  0B20  1803               	skipnc
  9601  0B21  0AA6               	incf	(sprintf@prec+1)^(0+384),f
  9602  0B22  3000               	movlw	0
  9603  0B23  07A6               	addwf	(sprintf@prec+1)^(0+384),f
  9604  0B24                     l4189:	
  9605                           
  9606                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9607  0B24  01A7               	clrf	sprintf@c^(0+384)
  9608  0B25  0AA7               	incf	sprintf@c^(0+384),f
  9609  0B26  300A               	movlw	10
  9610  0B27  0627               	xorwf	sprintf@c^(0+384),w
  9611  0B28  1903               	btfsc	3,2
  9612  0B29  2B7A               	goto	l4201
  9613  0B2A                     l4195:	
  9614                           
  9615                           ;doprnt.c: 1306: if(val < dpowers[c])
  9616  0B2A  0827               	movf	sprintf@c^(0+384),w
  9617  0B2B  1683               	bsf	3,5	;RP0=1, select bank1
  9618  0B2C  1303               	bcf	3,6	;RP1=0, select bank1
  9619  0B2D  00E1               	movwf	??_sprintf^(0+128)
  9620  0B2E  3001               	movlw	1
  9621  0B2F                     u6515:	
  9622  0B2F  1003               	clrc
  9623  0B30  0DE1               	rlf	??_sprintf^(0+128),f
  9624  0B31  3EFF               	addlw	-1
  9625  0B32  1D03               	skipz
  9626  0B33  2B2F               	goto	u6515
  9627  0B34  1003               	clrc
  9628  0B35  0D61               	rlf	??_sprintf^(0+128),w
  9629  0B36  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9630  0B37  0084               	movwf	4
  9631  0B38  160A  118A  2000  120A  158A  	fcall	stringdir
  9632  0B3D  00E2               	movwf	(??_sprintf+1)^(0+128)
  9633  0B3E  160A  118A  2000  120A  158A  	fcall	stringdir
  9634  0B43  00E3               	movwf	((??_sprintf+1)^(0+128)+1)
  9635  0B44  160A  118A  2000  120A  158A  	fcall	stringdir
  9636  0B49  00E4               	movwf	((??_sprintf+1)^(0+128)+2)
  9637  0B4A  160A  118A  2000  120A  158A  	fcall	stringdir
  9638  0B4F  00E5               	movwf	((??_sprintf+1)^(0+128)+3)
  9639  0B50  0865               	movf	(??_sprintf+4)^(0+128),w
  9640  0B51  1683               	bsf	3,5	;RP0=1, select bank3
  9641  0B52  1703               	bsf	3,6	;RP1=1, select bank3
  9642  0B53  021F               	subwf	(sprintf@val+3)^(0+384),w
  9643  0B54  1D03               	skipz
  9644  0B55  2B6C               	goto	u6525
  9645  0B56  1683               	bsf	3,5	;RP0=1, select bank1
  9646  0B57  1303               	bcf	3,6	;RP1=0, select bank1
  9647  0B58  0864               	movf	(??_sprintf+3)^(0+128),w
  9648  0B59  1683               	bsf	3,5	;RP0=1, select bank3
  9649  0B5A  1703               	bsf	3,6	;RP1=1, select bank3
  9650  0B5B  021E               	subwf	(sprintf@val+2)^(0+384),w
  9651  0B5C  1D03               	skipz
  9652  0B5D  2B6C               	goto	u6525
  9653  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  9654  0B5F  1303               	bcf	3,6	;RP1=0, select bank1
  9655  0B60  0863               	movf	(??_sprintf+2)^(0+128),w
  9656  0B61  1683               	bsf	3,5	;RP0=1, select bank3
  9657  0B62  1703               	bsf	3,6	;RP1=1, select bank3
  9658  0B63  021D               	subwf	(sprintf@val+1)^(0+384),w
  9659  0B64  1D03               	skipz
  9660  0B65  2B6C               	goto	u6525
  9661  0B66  1683               	bsf	3,5	;RP0=1, select bank1
  9662  0B67  1303               	bcf	3,6	;RP1=0, select bank1
  9663  0B68  0862               	movf	(??_sprintf+1)^(0+128),w
  9664  0B69  1683               	bsf	3,5	;RP0=1, select bank3
  9665  0B6A  1703               	bsf	3,6	;RP1=1, select bank3
  9666  0B6B  021C               	subwf	sprintf@val^(0+384),w
  9667  0B6C                     u6525:	
  9668  0B6C  1C03               	btfss	3,0
  9669  0B6D  2B7A               	goto	l4201
  9670                           
  9671                           ;doprnt.c: 1307: break;
  9672  0B6E  3001               	movlw	1
  9673  0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  9674  0B70  1303               	bcf	3,6	;RP1=0, select bank1
  9675  0B71  00E1               	movwf	??_sprintf^(0+128)
  9676  0B72  0861               	movf	??_sprintf^(0+128),w
  9677  0B73  1683               	bsf	3,5	;RP0=1, select bank3
  9678  0B74  1703               	bsf	3,6	;RP1=1, select bank3
  9679  0B75  07A7               	addwf	sprintf@c^(0+384),f
  9680  0B76  300A               	movlw	10
  9681  0B77  0627               	xorwf	sprintf@c^(0+384),w
  9682  0B78  1D03               	btfss	3,2
  9683  0B79  2B2A               	goto	l4195
  9684  0B7A                     l4201:	
  9685                           
  9686                           ;doprnt.c: 1339: if(c < prec)
  9687  0B7A  0827               	movf	sprintf@c^(0+384),w
  9688  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  9689  0B7C  1303               	bcf	3,6	;RP1=0, select bank1
  9690  0B7D  00E1               	movwf	??_sprintf^(0+128)
  9691  0B7E  01E2               	clrf	(??_sprintf^(0+128)+1)
  9692  0B7F  1BE1               	btfsc	??_sprintf^(0+128),7
  9693  0B80  03E2               	decf	(??_sprintf^(0+128)+1),f
  9694  0B81  0862               	movf	(??_sprintf+1)^(0+128),w
  9695  0B82  3A80               	xorlw	128
  9696  0B83  00E3               	movwf	(??_sprintf+2)^(0+128)
  9697  0B84  1683               	bsf	3,5	;RP0=1, select bank3
  9698  0B85  1703               	bsf	3,6	;RP1=1, select bank3
  9699  0B86  0826               	movf	(sprintf@prec+1)^(0+384),w
  9700  0B87  3A80               	xorlw	128
  9701  0B88  1683               	bsf	3,5	;RP0=1, select bank1
  9702  0B89  1303               	bcf	3,6	;RP1=0, select bank1
  9703  0B8A  0263               	subwf	(??_sprintf+2)^(0+128),w
  9704  0B8B  1D03               	skipz
  9705  0B8C  2B93               	goto	u6545
  9706  0B8D  1683               	bsf	3,5	;RP0=1, select bank3
  9707  0B8E  1703               	bsf	3,6	;RP1=1, select bank3
  9708  0B8F  0825               	movf	sprintf@prec^(0+384),w
  9709  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  9710  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  9711  0B92  0261               	subwf	??_sprintf^(0+128),w
  9712  0B93                     u6545:	
  9713  0B93  1803               	skipnc
  9714  0B94  2BA0               	goto	l4205
  9715                           
  9716                           ;doprnt.c: 1340: c = prec;
  9717  0B95  1683               	bsf	3,5	;RP0=1, select bank3
  9718  0B96  1703               	bsf	3,6	;RP1=1, select bank3
  9719  0B97  0825               	movf	sprintf@prec^(0+384),w
  9720  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  9721  0B99  1303               	bcf	3,6	;RP1=0, select bank1
  9722  0B9A  00E1               	movwf	??_sprintf^(0+128)
  9723  0B9B  0861               	movf	??_sprintf^(0+128),w
  9724  0B9C  1683               	bsf	3,5	;RP0=1, select bank3
  9725  0B9D  1703               	bsf	3,6	;RP1=1, select bank3
  9726  0B9E  00A7               	movwf	sprintf@c^(0+384)
  9727  0B9F  2BC2               	goto	l242
  9728  0BA0                     l4205:	
  9729                           
  9730                           ;doprnt.c: 1341: else if(prec < c)
  9731  0BA0  1683               	bsf	3,5	;RP0=1, select bank3
  9732  0BA1  1703               	bsf	3,6	;RP1=1, select bank3
  9733  0BA2  0827               	movf	sprintf@c^(0+384),w
  9734  0BA3  1683               	bsf	3,5	;RP0=1, select bank1
  9735  0BA4  1303               	bcf	3,6	;RP1=0, select bank1
  9736  0BA5  00E1               	movwf	??_sprintf^(0+128)
  9737  0BA6  01E2               	clrf	(??_sprintf^(0+128)+1)
  9738  0BA7  1BE1               	btfsc	??_sprintf^(0+128),7
  9739  0BA8  03E2               	decf	(??_sprintf^(0+128)+1),f
  9740  0BA9  1683               	bsf	3,5	;RP0=1, select bank3
  9741  0BAA  1703               	bsf	3,6	;RP1=1, select bank3
  9742  0BAB  0826               	movf	(sprintf@prec+1)^(0+384),w
  9743  0BAC  3A80               	xorlw	128
  9744  0BAD  1683               	bsf	3,5	;RP0=1, select bank1
  9745  0BAE  1303               	bcf	3,6	;RP1=0, select bank1
  9746  0BAF  00E3               	movwf	(??_sprintf+2)^(0+128)
  9747  0BB0  0862               	movf	(??_sprintf+1)^(0+128),w
  9748  0BB1  3A80               	xorlw	128
  9749  0BB2  0263               	subwf	(??_sprintf+2)^(0+128),w
  9750  0BB3  1D03               	skipz
  9751  0BB4  2BB9               	goto	u6555
  9752  0BB5  0861               	movf	??_sprintf^(0+128),w
  9753  0BB6  1683               	bsf	3,5	;RP0=1, select bank3
  9754  0BB7  1703               	bsf	3,6	;RP1=1, select bank3
  9755  0BB8  0225               	subwf	sprintf@prec^(0+384),w
  9756  0BB9                     u6555:	
  9757  0BB9  1803               	skipnc
  9758  0BBA  2BC2               	goto	l242
  9759                           
  9760                           ;doprnt.c: 1342: prec = c;
  9761  0BBB  1683               	bsf	3,5	;RP0=1, select bank3
  9762  0BBC  1703               	bsf	3,6	;RP1=1, select bank3
  9763  0BBD  0827               	movf	sprintf@c^(0+384),w
  9764  0BBE  00A5               	movwf	sprintf@prec^(0+384)
  9765  0BBF  01A6               	clrf	(sprintf@prec+1)^(0+384)
  9766  0BC0  1BA5               	btfsc	sprintf@prec^(0+384),7
  9767  0BC1  03A6               	decf	(sprintf@prec+1)^(0+384),f
  9768  0BC2                     l242:	
  9769                           
  9770                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9771  0BC2  1683               	bsf	3,5	;RP0=1, select bank3
  9772  0BC3  1703               	bsf	3,6	;RP1=1, select bank3
  9773  0BC4  0816               	movf	sprintf@width^(0+384),w
  9774  0BC5  0417               	iorwf	(sprintf@width+1)^(0+384),w
  9775  0BC6  1903               	btfsc	3,2
  9776  0BC7  2BE0               	goto	l4213
  9777  0BC8  3003               	movlw	3
  9778  0BC9  0514               	andwf	sprintf@flag^(0+384),w
  9779  0BCA  1683               	bsf	3,5	;RP0=1, select bank1
  9780  0BCB  1303               	bcf	3,6	;RP1=0, select bank1
  9781  0BCC  00E1               	movwf	??_sprintf^(0+128)
  9782  0BCD  3000               	movlw	0
  9783  0BCE  1683               	bsf	3,5	;RP0=1, select bank3
  9784  0BCF  1703               	bsf	3,6	;RP1=1, select bank3
  9785  0BD0  0515               	andwf	(sprintf@flag+1)^(0+384),w
  9786  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  9787  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  9788  0BD3  00E2               	movwf	(??_sprintf+1)^(0+128)
  9789  0BD4  0861               	movf	??_sprintf^(0+128),w
  9790  0BD5  0462               	iorwf	(??_sprintf^(0+128)+1),w
  9791  0BD6  1903               	btfsc	3,2
  9792  0BD7  2BE0               	goto	l4213
  9793                           
  9794                           ;doprnt.c: 1346: width--;
  9795  0BD8  30FF               	movlw	255
  9796  0BD9  1683               	bsf	3,5	;RP0=1, select bank3
  9797  0BDA  1703               	bsf	3,6	;RP1=1, select bank3
  9798  0BDB  0796               	addwf	sprintf@width^(0+384),f
  9799  0BDC  1803               	skipnc
  9800  0BDD  0A97               	incf	(sprintf@width+1)^(0+384),f
  9801  0BDE  30FF               	movlw	255
  9802  0BDF  0797               	addwf	(sprintf@width+1)^(0+384),f
  9803  0BE0                     l4213:	
  9804                           
  9805                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9806  0BE0  1683               	bsf	3,5	;RP0=1, select bank3
  9807  0BE1  1703               	bsf	3,6	;RP1=1, select bank3
  9808  0BE2  1F15               	btfss	(sprintf@flag+1)^(0+384),6
  9809  0BE3  2C05               	goto	l4221
  9810                           
  9811                           ;doprnt.c: 1349: if(width > prec)
  9812  0BE4  0826               	movf	(sprintf@prec+1)^(0+384),w
  9813  0BE5  3A80               	xorlw	128
  9814  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  9815  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  9816  0BE8  00E1               	movwf	??_sprintf^(0+128)
  9817  0BE9  1683               	bsf	3,5	;RP0=1, select bank3
  9818  0BEA  1703               	bsf	3,6	;RP1=1, select bank3
  9819  0BEB  0817               	movf	(sprintf@width+1)^(0+384),w
  9820  0BEC  3A80               	xorlw	128
  9821  0BED  1683               	bsf	3,5	;RP0=1, select bank1
  9822  0BEE  1303               	bcf	3,6	;RP1=0, select bank1
  9823  0BEF  0261               	subwf	??_sprintf^(0+128),w
  9824  0BF0  1D03               	skipz
  9825  0BF1  2BF6               	goto	u6595
  9826  0BF2  1683               	bsf	3,5	;RP0=1, select bank3
  9827  0BF3  1703               	bsf	3,6	;RP1=1, select bank3
  9828  0BF4  0816               	movf	sprintf@width^(0+384),w
  9829  0BF5  0225               	subwf	sprintf@prec^(0+384),w
  9830  0BF6                     u6595:	
  9831  0BF6  1803               	skipnc
  9832  0BF7  2C01               	goto	l4219
  9833                           
  9834                           ;doprnt.c: 1350: width -= prec;
  9835  0BF8  1683               	bsf	3,5	;RP0=1, select bank3
  9836  0BF9  1703               	bsf	3,6	;RP1=1, select bank3
  9837  0BFA  0825               	movf	sprintf@prec^(0+384),w
  9838  0BFB  0296               	subwf	sprintf@width^(0+384),f
  9839  0BFC  0826               	movf	(sprintf@prec+1)^(0+384),w
  9840  0BFD  1C03               	skipc
  9841  0BFE  0397               	decf	(sprintf@width+1)^(0+384),f
  9842  0BFF  0297               	subwf	(sprintf@width+1)^(0+384),f
  9843  0C00  2C05               	goto	l4221
  9844  0C01                     l4219:	
  9845                           
  9846                           ;doprnt.c: 1351: else
  9847                           ;doprnt.c: 1352: width = 0;
  9848  0C01  1683               	bsf	3,5	;RP0=1, select bank3
  9849  0C02  1703               	bsf	3,6	;RP1=1, select bank3
  9850  0C03  0196               	clrf	sprintf@width^(0+384)
  9851  0C04  0197               	clrf	(sprintf@width+1)^(0+384)
  9852  0C05                     l4221:	
  9853                           
  9854                           ;doprnt.c: 1353: }
  9855                           ;doprnt.c: 1381: if(width > c)
  9856  0C05  0827               	movf	sprintf@c^(0+384),w
  9857  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  9858  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  9859  0C08  00E1               	movwf	??_sprintf^(0+128)
  9860  0C09  01E2               	clrf	(??_sprintf^(0+128)+1)
  9861  0C0A  1BE1               	btfsc	??_sprintf^(0+128),7
  9862  0C0B  03E2               	decf	(??_sprintf^(0+128)+1),f
  9863  0C0C  0862               	movf	(??_sprintf+1)^(0+128),w
  9864  0C0D  3A80               	xorlw	128
  9865  0C0E  00E3               	movwf	(??_sprintf+2)^(0+128)
  9866  0C0F  1683               	bsf	3,5	;RP0=1, select bank3
  9867  0C10  1703               	bsf	3,6	;RP1=1, select bank3
  9868  0C11  0817               	movf	(sprintf@width+1)^(0+384),w
  9869  0C12  3A80               	xorlw	128
  9870  0C13  1683               	bsf	3,5	;RP0=1, select bank1
  9871  0C14  1303               	bcf	3,6	;RP1=0, select bank1
  9872  0C15  0263               	subwf	(??_sprintf+2)^(0+128),w
  9873  0C16  1D03               	skipz
  9874  0C17  2C1E               	goto	u6605
  9875  0C18  1683               	bsf	3,5	;RP0=1, select bank3
  9876  0C19  1703               	bsf	3,6	;RP1=1, select bank3
  9877  0C1A  0816               	movf	sprintf@width^(0+384),w
  9878  0C1B  1683               	bsf	3,5	;RP0=1, select bank1
  9879  0C1C  1303               	bcf	3,6	;RP1=0, select bank1
  9880  0C1D  0261               	subwf	??_sprintf^(0+128),w
  9881  0C1E                     u6605:	
  9882  0C1E  1803               	skipnc
  9883  0C1F  2C36               	goto	l4225
  9884                           
  9885                           ;doprnt.c: 1382: width -= c;
  9886  0C20  1683               	bsf	3,5	;RP0=1, select bank3
  9887  0C21  1703               	bsf	3,6	;RP1=1, select bank3
  9888  0C22  0827               	movf	sprintf@c^(0+384),w
  9889  0C23  1683               	bsf	3,5	;RP0=1, select bank1
  9890  0C24  1303               	bcf	3,6	;RP1=0, select bank1
  9891  0C25  00E1               	movwf	??_sprintf^(0+128)
  9892  0C26  01E2               	clrf	(??_sprintf^(0+128)+1)
  9893  0C27  1BE1               	btfsc	??_sprintf^(0+128),7
  9894  0C28  03E2               	decf	(??_sprintf^(0+128)+1),f
  9895  0C29  0861               	movf	??_sprintf^(0+128),w
  9896  0C2A  1683               	bsf	3,5	;RP0=1, select bank3
  9897  0C2B  1703               	bsf	3,6	;RP1=1, select bank3
  9898  0C2C  0296               	subwf	sprintf@width^(0+384),f
  9899  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  9900  0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  9901  0C2F  0862               	movf	(??_sprintf+1)^(0+128),w
  9902  0C30  1683               	bsf	3,5	;RP0=1, select bank3
  9903  0C31  1703               	bsf	3,6	;RP1=1, select bank3
  9904  0C32  1C03               	skipc
  9905  0C33  0397               	decf	(sprintf@width+1)^(0+384),f
  9906  0C34  0297               	subwf	(sprintf@width+1)^(0+384),f
  9907  0C35  2C3A               	goto	l4227
  9908  0C36                     l4225:	
  9909                           
  9910                           ;doprnt.c: 1383: else
  9911                           ;doprnt.c: 1384: width = 0;
  9912  0C36  1683               	bsf	3,5	;RP0=1, select bank3
  9913  0C37  1703               	bsf	3,6	;RP1=1, select bank3
  9914  0C38  0196               	clrf	sprintf@width^(0+384)
  9915  0C39  0197               	clrf	(sprintf@width+1)^(0+384)
  9916  0C3A                     l4227:	
  9917                           
  9918                           ;doprnt.c: 1422: {
  9919                           ;doprnt.c: 1424: if(width
  9920                           ;doprnt.c: 1428: )
  9921  0C3A  0816               	movf	sprintf@width^(0+384),w
  9922  0C3B  0417               	iorwf	(sprintf@width+1)^(0+384),w
  9923  0C3C  1903               	btfsc	3,2
  9924  0C3D  2C59               	goto	l4235
  9925  0C3E                     l4229:	
  9926                           ;doprnt.c: 1429: do
  9927                           
  9928                           
  9929                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9930  0C3E  3020               	movlw	32
  9931  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  9932  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  9933  0C41  00E1               	movwf	??_sprintf^(0+128)
  9934  0C42  0859               	movf	sprintf@sp^(0+128),w
  9935  0C43  0084               	movwf	4
  9936  0C44  1783               	bsf	3,7
  9937  0C45  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  9938  0C46  1383               	bcf	3,7
  9939  0C47  0861               	movf	??_sprintf^(0+128),w
  9940  0C48  0080               	movwf	0
  9941  0C49  3001               	movlw	1
  9942  0C4A  07D9               	addwf	sprintf@sp^(0+128),f
  9943  0C4B  1803               	skipnc
  9944  0C4C  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  9945                           
  9946                           ;doprnt.c: 1431: while(--width);
  9947  0C4D  30FF               	movlw	255
  9948  0C4E  1683               	bsf	3,5	;RP0=1, select bank3
  9949  0C4F  1703               	bsf	3,6	;RP1=1, select bank3
  9950  0C50  0796               	addwf	sprintf@width^(0+384),f
  9951  0C51  1803               	skipnc
  9952  0C52  0A97               	incf	(sprintf@width+1)^(0+384),f
  9953  0C53  30FF               	movlw	255
  9954  0C54  0797               	addwf	(sprintf@width+1)^(0+384),f
  9955  0C55  0816               	movf	sprintf@width^(0+384),w
  9956  0C56  0417               	iorwf	(sprintf@width+1)^(0+384),w
  9957  0C57  1D03               	btfss	3,2
  9958  0C58  2C3E               	goto	l4229
  9959  0C59                     l4235:	
  9960                           
  9961                           ;doprnt.c: 1438: if(flag & 0x03)
  9962  0C59  3003               	movlw	3
  9963  0C5A  0514               	andwf	sprintf@flag^(0+384),w
  9964  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  9965  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  9966  0C5D  00E1               	movwf	??_sprintf^(0+128)
  9967  0C5E  3000               	movlw	0
  9968  0C5F  1683               	bsf	3,5	;RP0=1, select bank3
  9969  0C60  1703               	bsf	3,6	;RP1=1, select bank3
  9970  0C61  0515               	andwf	(sprintf@flag+1)^(0+384),w
  9971  0C62  1683               	bsf	3,5	;RP0=1, select bank1
  9972  0C63  1303               	bcf	3,6	;RP1=0, select bank1
  9973  0C64  00E2               	movwf	(??_sprintf+1)^(0+128)
  9974  0C65  0861               	movf	??_sprintf^(0+128),w
  9975  0C66  0462               	iorwf	(??_sprintf^(0+128)+1),w
  9976  0C67  1903               	btfsc	3,2
  9977  0C68  2C76               	goto	l4247
  9978                           
  9979                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9980  0C69  302D               	movlw	45
  9981  0C6A                     L6:	
  9982  0C6A  00E1               	movwf	??_sprintf^(0+128)
  9983  0C6B  0859               	movf	sprintf@sp^(0+128),w
  9984  0C6C  0084               	movwf	4
  9985  0C6D  1783               	bsf	3,7
  9986  0C6E  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
  9987  0C6F  1383               	bcf	3,7
  9988  0C70  0861               	movf	??_sprintf^(0+128),w
  9989  0C71  0080               	movwf	0
  9990  0C72  3001               	movlw	1
  9991  0C73  07D9               	addwf	sprintf@sp^(0+128),f
  9992  0C74  1803               	skipnc
  9993  0C75  0ADA               	incf	(sprintf@sp+1)^(0+128),f
  9994  0C76                     l4247:	
  9995  0C76  30FF               	movlw	255
  9996  0C77  1683               	bsf	3,5	;RP0=1, select bank3
  9997  0C78  1703               	bsf	3,6	;RP1=1, select bank3
  9998  0C79  07A5               	addwf	sprintf@prec^(0+384),f
  9999  0C7A  1803               	skipnc
 10000  0C7B  0AA6               	incf	(sprintf@prec+1)^(0+384),f
 10001  0C7C  30FF               	movlw	255
 10002  0C7D  07A6               	addwf	(sprintf@prec+1)^(0+384),f
 10003  0C7E  0A25               	incf	sprintf@prec^(0+384),w
 10004  0C7F  1903               	btfsc	3,2
 10005  0C80  0A26               	incf	(sprintf@prec+1)^(0+384),w
 10006  0C81  1903               	btfsc	3,2
 10007  0C82  2D06               	goto	L14
 10008                           
 10009                           ;doprnt.c: 1478: {
 10010                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10011                           
 10012                           ;doprnt.c: 1469: }
 10013                           ;doprnt.c: 1474: while(prec--) {
 10014  0C83  3000               	movlw	0
 10015  0C84  1303               	bcf	3,6	;RP1=0, select bank1
 10016  0C85  00A3               	movwf	(___llmod@divisor+3)^(0+128)
 10017  0C86  3000               	movlw	0
 10018  0C87  00A2               	movwf	(___llmod@divisor+2)^(0+128)
 10019  0C88  3000               	movlw	0
 10020  0C89  00A1               	movwf	(___llmod@divisor+1)^(0+128)
 10021  0C8A  300A               	movlw	10
 10022  0C8B  00A0               	movwf	___llmod@divisor^(0+128)
 10023  0C8C  1683               	bsf	3,5	;RP0=1, select bank3
 10024  0C8D  1703               	bsf	3,6	;RP1=1, select bank3
 10025  0C8E  0825               	movf	sprintf@prec^(0+384),w
 10026  0C8F  1683               	bsf	3,5	;RP0=1, select bank1
 10027  0C90  1303               	bcf	3,6	;RP1=0, select bank1
 10028  0C91  00E1               	movwf	??_sprintf^(0+128)
 10029  0C92  3001               	movlw	1
 10030  0C93                     u6645:	
 10031  0C93  1003               	clrc
 10032  0C94  0DE1               	rlf	??_sprintf^(0+128),f
 10033  0C95  3EFF               	addlw	-1
 10034  0C96  1D03               	skipz
 10035  0C97  2C93               	goto	u6645
 10036  0C98  1003               	clrc
 10037  0C99  0D61               	rlf	??_sprintf^(0+128),w
 10038  0C9A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10039  0C9B  0084               	movwf	4
 10040  0C9C  160A  118A  2000  120A  158A  	fcall	stringdir
 10041  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
 10042  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
 10043  0CA3  00B6               	movwf	___lldiv@divisor
 10044  0CA4  160A  118A  2000  120A  158A  	fcall	stringdir
 10045  0CA9  00B7               	movwf	___lldiv@divisor+1
 10046  0CAA  160A  118A  2000  120A  158A  	fcall	stringdir
 10047  0CAF  00B8               	movwf	___lldiv@divisor+2
 10048  0CB0  160A  118A  2000  120A  158A  	fcall	stringdir
 10049  0CB5  00B9               	movwf	___lldiv@divisor+3
 10050  0CB6  1683               	bsf	3,5	;RP0=1, select bank3
 10051  0CB7  1703               	bsf	3,6	;RP1=1, select bank3
 10052  0CB8  081F               	movf	(sprintf@val+3)^(0+384),w
 10053  0CB9  1283               	bcf	3,5	;RP0=0, select bank0
 10054  0CBA  1303               	bcf	3,6	;RP1=0, select bank0
 10055  0CBB  00BD               	movwf	___lldiv@dividend+3
 10056  0CBC  1683               	bsf	3,5	;RP0=1, select bank3
 10057  0CBD  1703               	bsf	3,6	;RP1=1, select bank3
 10058  0CBE  081E               	movf	(sprintf@val+2)^(0+384),w
 10059  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
 10060  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
 10061  0CC1  00BC               	movwf	___lldiv@dividend+2
 10062  0CC2  1683               	bsf	3,5	;RP0=1, select bank3
 10063  0CC3  1703               	bsf	3,6	;RP1=1, select bank3
 10064  0CC4  081D               	movf	(sprintf@val+1)^(0+384),w
 10065  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
 10066  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
 10067  0CC7  00BB               	movwf	___lldiv@dividend+1
 10068  0CC8  1683               	bsf	3,5	;RP0=1, select bank3
 10069  0CC9  1703               	bsf	3,6	;RP1=1, select bank3
 10070  0CCA  081C               	movf	sprintf@val^(0+384),w
 10071  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
 10072  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
 10073  0CCD  00BA               	movwf	___lldiv@dividend
 10074  0CCE  160A  158A  2648  120A  158A  	fcall	___lldiv
 10075  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
 10076  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
 10077  0CD5  0839               	movf	?___lldiv+3,w
 10078  0CD6  1683               	bsf	3,5	;RP0=1, select bank1
 10079  0CD7  1303               	bcf	3,6	;RP1=0, select bank1
 10080  0CD8  00A7               	movwf	(___llmod@dividend+3)^(0+128)
 10081  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
 10082  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
 10083  0CDB  0838               	movf	?___lldiv+2,w
 10084  0CDC  1683               	bsf	3,5	;RP0=1, select bank1
 10085  0CDD  1303               	bcf	3,6	;RP1=0, select bank1
 10086  0CDE  00A6               	movwf	(___llmod@dividend+2)^(0+128)
 10087  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
 10088  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
 10089  0CE1  0837               	movf	?___lldiv+1,w
 10090  0CE2  1683               	bsf	3,5	;RP0=1, select bank1
 10091  0CE3  1303               	bcf	3,6	;RP1=0, select bank1
 10092  0CE4  00A5               	movwf	(___llmod@dividend+1)^(0+128)
 10093  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
 10094  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
 10095  0CE7  0836               	movf	?___lldiv,w
 10096  0CE8  1683               	bsf	3,5	;RP0=1, select bank1
 10097  0CE9  1303               	bcf	3,6	;RP1=0, select bank1
 10098  0CEA  00A4               	movwf	___llmod@dividend^(0+128)
 10099  0CEB  160A  158A  24EA  120A  158A  	fcall	___llmod
 10100  0CF0  1683               	bsf	3,5	;RP0=1, select bank1
 10101  0CF1  1303               	bcf	3,6	;RP1=0, select bank1
 10102  0CF2  0820               	movf	?___llmod^(0+128),w
 10103  0CF3  3E30               	addlw	48
 10104  0CF4  00E2               	movwf	(??_sprintf+1)^(0+128)
 10105  0CF5  0862               	movf	(??_sprintf+1)^(0+128),w
 10106  0CF6  1683               	bsf	3,5	;RP0=1, select bank3
 10107  0CF7  1703               	bsf	3,6	;RP1=1, select bank3
 10108  0CF8  00A7               	movwf	sprintf@c^(0+384)
 10109                           
 10110                           ;doprnt.c: 1523: }
 10111                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10112  0CF9  0827               	movf	sprintf@c^(0+384),w
 10113  0CFA  1683               	bsf	3,5	;RP0=1, select bank1
 10114  0CFB  1303               	bcf	3,6	;RP1=0, select bank1
 10115  0CFC  2C6A               	goto	L6
 10116  0CFD                     l4251:	
 10117                           ;doprnt.c: 1525: }
 10118                           ;doprnt.c: 1533: }
 10119                           ;doprnt.c: 1535: alldone:
 10120                           
 10121                           
 10122                           ;doprnt.c: 1538: *sp = 0;
 10123  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
 10124  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
 10125  0CFF  0859               	movf	sprintf@sp^(0+128),w
 10126  0D00  0084               	movwf	4
 10127  0D01  1783               	bsf	3,7
 10128  0D02  1C5A               	btfss	(sprintf@sp+1)^(0+128),0
 10129  0D03  1383               	bcf	3,7
 10130  0D04  0180               	clrf	0
 10131  0D05  0008               	return
 10132  0D06                     L14:	
 10133  0D06                     __end_of_sprintf:	
 10134                           ;doprnt.c: 1540: return 0;
 10135                           ;	Return value of _sprintf is never used
 10136                           
 10137  0D06  120A  118A  2837   	ljmp	l4249


Data Sizes:
    Strings     32
    Constant    118
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     36      58
    BANK1            80     74      77
    BANK3            96     24      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[15]), STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 16
		 -> linea2(BANK3[16]), linea1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    p2	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), linea2(BANK3[16]), 

    p1	PTR unsigned char  size(1) Largest target is 16
		 -> NULL(NULL[0]), linea1(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _rutinainterrupciones in COMMON

    _rutinainterrupciones->___lwtoft
    i1___ftmul->___lwtoft
    ___lwtoft->i1___ftpack

Critical Paths under _main in BANK0

    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___ftsub->___lltoft
    _LCD2->_bajar
    _LCD2->_envio
    _LCD2->_invertir
    _LCD2->_subir
    _LCD->_envio
    _LCD->_invertir

Critical Paths under _rutinainterrupciones in BANK0

    _rutinainterrupciones->i1___ftmul

Critical Paths under _main in BANK1

    _main->_armovector
    _armovector->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _rutinainterrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    _armovector->_sprintf

Critical Paths under _rutinainterrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinainterrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   49136
                             _InitES
                           _InitTMR1
                                _LCD
                               _LCD2
                         _armovector
                     _inicializacion
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       2     2      0       0
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _armovector                                           3     3      0   49136
                                             71 BANK1      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             43    35      8   49136
                                             57 BANK1     14     6      8
                                              0 BANK3     24    24      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     6      3   10286
                                             22 BANK1      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              16    13      3   10007
                                             22 BANK1     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    5087
                                              6 BANK1     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     766
                                             34 BANK0      2     1      1
                                              4 BANK1      2     2      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1819
                                             22 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1985
                                             29 BANK0      5     1      4
                                              0 BANK1      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         16    10      6     608
                                             22 BANK0     10     4      6
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          20    14      6     827
                                             22 BANK0     14     8      6
                                              0 BANK1      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    2110
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2538
                                             30 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     848
                                              0 BANK1     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     703
                                             22 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     602
                                             31 BANK1     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4142
                                             51 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3892
                                             38 BANK1     13     7      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2359
                                             22 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     142
                                             22 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6     814
                                             22 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _LCD2                                                 2     2      0       0
                                             24 BANK0      2     2      0
                              _bajar
                              _envio
                           _invertir
                              _subir
 ---------------------------------------------------------------------------------
 (2) _subir                                                2     2      0       0
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _bajar                                                2     2      0       0
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  2     2      0       0
                                             24 BANK0      2     2      0
                              _envio
                           _invertir
 ---------------------------------------------------------------------------------
 (2) _invertir                                             2     2      0       0
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _envio                                                2     2      0       0
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitES                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _rutinainterrupciones                                 6     6      0    1238
                                             16 BANK0      6     6      0
                           ___lwtoft
                          i1___ftmul
 ---------------------------------------------------------------------------------
 (7) i1___ftmul                                           16    10      6     765
                                              0 BANK0     16    10      6
                           ___lwtoft (ARG)
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             4     1      3     473
                                              8 COMMON     4     1      3
                         i1___ftpack
 ---------------------------------------------------------------------------------
 (8) i1___ftpack                                           8     3      5     387
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitES
   _InitTMR1
   _LCD
     _envio
     _invertir
   _LCD2
     _bajar
     _envio
     _invertir
     _subir
   _armovector
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
   _inicializacion

 _rutinainterrupciones (ROOT)
   ___lwtoft
     i1___ftpack
   i1___ftmul
     ___lwtoft (ARG)
       i1___ftpack
     i1___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      BC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4A      4D       7       96.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60     18      28       9       41.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      BC      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 31 19:07:31 2018

                            _u 00EA                              pc 0002                     i1___ftpack 1EA8  
               ___bmul@product 00A4                    __CFG_CP$OFF 0000                             _p1 00EC  
                           _p2 00EB                   ___awdiv@sign 00A1                             fsr 0004  
          ___wmul@multiplicand 0038                   ___ftadd@exp1 00D2                   ___ftadd@exp2 00D1  
                 ___ftadd@sign 00D0                            l242 0BC2                            l219 056C  
                          l500 1788                            l342 080C                            l190 013C  
                          l191 0ABF                            l520 1F4C                            l185 013A  
                          l508 17E4                            l527 1F61                            l551 14D1  
                          l528 1F69                            l628 1149                            l577 1360  
                          l587 140D                            _LCD 1C55                   __CFG_CPD$OFF 0000  
                          _adc 0047                            fsr0 0004                            indf 0000  
                 ___awmod@sign 003C                   __CFG_IESO$ON 0000                   __CFG_FOSC$HS 0000  
                  _sprintf$820 0190                   i1___ftmul@f1 0020                   i1___ftmul@f2 0023  
                 __CFG_LVP$OFF 0000                           ?_LCD 0070                           l4001 0134  
                         l3303 1D3D                           l4111 054D                           l4015 0175  
                         l4007 013E                           l3305 1D85                           l3401 1F25  
                         l4201 0B7A                           l4041 025C                           l4025 01D2  
                         l4009 015D                           l3411 1F51                           l3403 1F31  
                         l4131 062F                           l4107 0528                           l3413 1F5B  
                         l3405 1F36                           l4221 0C05                           l4213 0BE0  
                         l4205 0BA0                           l4125 0618                           l4109 0530  
                         l4053 02FA                           l3503 1CB6                           l3431 1B54  
                         l3505 1CC4                           l3513 1CDD                           l4225 0C36  
                         l4161 0AA3                           l4145 0678                           l4137 0649  
                         l4065 037E                           l4057 0340                           l4049 02D3  
                         l3283 1C55                           l3531 1459                           l3427 1B4A  
                         l3603 1264                           l4235 0C59                           l4227 0C3A  
                         l4219 0C01                           l4083 048C                           l4251 0CFD  
                         l3453 1FA0                           l3517 1CE5                           l3509 1CD2  
                         l4229 0C3E                           l4069 039F                           l3527 1452  
                         l3471 1FDD                           l3463 1FAE                           l3447 1F92  
                         l3631 12DB                           l3615 12A3                           l3711 1B03  
                         l4247 0C76                           l4183 0B14                           l4167 0ABA  
                         l4095 04E2                           l4079 0405                           l3561 14AC  
                         l3537 1468                           l3721 1343                           l3465 1FC1  
                         l4089 0492                           l4249 0037                           l4281 1B8E  
                         l3555 1497                           l3475 1FEB                           l3491 1CA9  
                         l3627 12CB                           l3619 12B3                           l3651 09CB  
                         l4195 0B2A                           l4179 0AF6                           l4099 0518  
                         l3397 1F1E                           l3573 14E3                           l3557 14A3  
                         l3549 1482                           l3901 113E                           l3821 0804  
                         l3813 17D2                           l3805 17AD                           l4189 0B24  
                         l4269 0876                           l3567 14C1                           l3559 14A8  
                         l3903 114C                           l3815 17E9                           l3807 17C3  
                         l3743 13B5                           l3735 138D                           l3479 1FF5  
                         l3495 1CB0                           l3841 1DD9                           l3577 14F5  
                         l3569 14CD                           l3761 13FB                           l3753 13D6  
                         l3681 0E65                           l3587 1518                           l3907 115A  
                         l3931 1E9F                           l3763 1412                           l3755 13EC  
                         l3659 0A6D                           l3675 0DE7                           l3837 1DB2  
                         l3917 1E5A                           l3941 1CF4                           l3773 16B5  
                         l3597 124E                           l3693 0F5F                           l3685 0E88  
                         l3927 1E92                           l3919 1E6A                           l3943 1D04  
                         l3951 1D2F                           l3865 1BA7                           l3961 10BE  
                         l3875 10EF                           l3947 1D22                           l3779 16D9  
                         l3699 0FDD                           l3893 1121                           l3789 172A  
                         l3973 005E                           l3895 1131                           l3959 10AC  
                         l3979 0078                           l3987 00CA                           l3999 00E3  
                         STR_1 107C                           STR_2 108D                           STR_3 107C  
                         STR_4 108D                           _LCD2 1D38                           u5115 1483  
                         u5205 14C2                           u6005 1E93                           u4335 1C36  
                         u4345 1C47                           u4505 1D53                           u5145 1498  
                         u6035 1CF8                           u5325 12B4                           u5175 14AD  
                         u6055 1D12                           u5335 12BC                           u6065 1D23  
                         u6305 0497                           u4715 1F2A                           u5515 1391  
                         u6315 04D4                           u6235 0305                           u4485 1C6B  
                         u6085 10B1                           u5605 13FE                           u5525 13A6  
                         u5285 1270                           u6405 0645                           u6245 034B  
                         u4735 1F45                           u5535 13B6                           u5375 12DC  
                         u5295 1282                           u4905 1FDF                           u5385 12E4  
                         u6425 06EE                           i1l90 1E3D                           u5811 1DCC  
                         u4755 1F54                           u6515 0B2F                           u6435 079C  
                         u6355 053B                           u6275 037C                           u6195 01EC  
                         u5812 1DCD                           u5813 1DD2                           u5725 17D5  
                         u5645 172E                           u6605 0C1E                           u6525 0B6C  
                         u5814 1DD3                           u5655 1761                           u5575 13D7  
                         u6375 057C                           u4865 1FB4                           u6545 0B93  
                         u4795 1F70                           u5755 080D                           u6555 0BB9  
                         u6395 0638                           u6707 1576                           u5925 1140  
                         u5765 0814                           u4885 1FC4                           u4965 1CB9  
                         u6645 0C93                           u6717 158A                           u5791 1DA5  
                         u5695 17AE                           u4895 1FD2                           u6807 1626  
                         u6727 1598                           u5792 1DA6                           u5793 1DAB  
                         u5865 10F6                           u4985 1CCA                           u6817 163A  
                         u6737 15AC                           u5794 1DAC                           u6907 1B6C  
                         u4995 1CD3                           u6595 0BF6                           u6827 164F  
                         u6747 15BA                           u6917 1B7A                           u5965 1E5E  
                         u6837 165D                           u6757 15CE                           u5895 1122  
                         u6847 1671                           u6767 15E1                           u6687 1554  
                         u5985 1E6C                           u6857 1686                           u6777 15EF  
                         u6697 1568                           u6867 1BFB                           u5995 1E81  
                         u6787 1603                           u6877 1C10                           u6797 1618  
                         u6887 1BCE                           u6897 1BE3                           _TMR1 000E  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                           _main 1B7F  
                 ___ftpack@arg 0036                   ___ftpack@exp 0039                           btemp 007E  
                         _volt 0044                  __CFG_BOREN$ON 0000                           start 0012  
            ___bmul@multiplier 00A5                  __CFG_MCLRE$ON 0000                   ___ftmul@cntr 00B4  
                 ___ftmul@sign 00B5                  i1___ftmul@exp 002A                          ??_LCD 0038  
                 ___fttol@exp1 00CC                   ___fttol@lval 00C8                          ?_LCD2 0070  
      i1___ftmul@f3_as_product 002B                          ?_main 0070                __end_of___awdiv 2000  
              __end_of___ftadd 154E                  __CFG_WDTE$OFF 0000                __end_of___awmod 1CEA  
              __end_of___ftneg 10A6                          _ANSEL 0188                __end_of___lldiv 1EA8  
              __end_of___ftmul 1325                ___awdiv@divisor 003D                          _T1CON 0010  
              __end_of___llmod 1D38                __end_of___ftsub 1BBF                __end_of___fttol 1163  
                        i1l520 1EDE                          i1l527 1EF3                          i1l528 1EFB  
              ___awdiv@counter 00A0                          _TMR1H 000F                          _TMR1L 000E  
                        _PORTA 0005                          _PORTB 0006                          _TRISA 0085  
                        _TRISB 0086                   ___lltoft@exp 0043                          _bajar 1BBF  
              __end_of_dpowers 102E                          _envio 1B61                          _scale 0D09  
              __end_of_isdigit 1B05                  ___ftpack@sign 003A                          _subir 1BEC  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __end_of_sprintf 0D06             __size_ofi1___ftmul 00D3                 i1___ftpack@arg 0070  
       ??_rutinainterrupciones 0030                 i1___ftpack@exp 0073                   __end_of_LCD2 1D89  
              __initialization 0015                   __end_of_main 1B9E               __end_of_InitTMR1 1B46  
                  ?i1___ftpack 0070                 i1___ftmul@cntr 002E                 i1___ftmul@sign 002F  
                       ??_LCD2 0038                         ??_main 0044                  ___fttol@sign1 00C7  
         __size_of__tdiv_to_l_ 0104                         ?_bajar 0070                         _ADCON0 001F  
                       ?_envio 0070               ___llmod@dividend 00A4                         ?_scale 00B6  
                       _ADRESH 001E                         _ADRESL 009E               ___awdiv@dividend 003F  
                       ?_subir 0070               __end_of___ftpack 1F82                         _ANSELH 0189  
             __end_of___lltoft 10D5                         i1l3001 1EB0                         i1l3005 1EB7  
                       i1l3015 1EE3                         i1l3007 1EC3                         i1l3017 1EED  
                       i1l3009 1EC8                         i1l3323 1191                         i1l3317 117B  
                       i1l3351 1208                         i1l3335 11D0                         i1l3347 11F8  
                       i1l3339 11E0                         i1l3373 1DF9                         u441_25 1EE6  
             __end_of___lwtoft 1B19                         u445_25 1F02                         u437_25 1EBC  
                       u454_25 119D                         u439_25 1ED7                         u463_25 1209  
                       u455_25 11AF                         u464_25 1211                         u458_25 11E1  
                       u459_25 11E9        __size_of_inicializacion 0141                 __CFG_PWRTE$OFF 0000  
                       _InitES 1B19               __end_of__powers_ 1055                         ___bmul 1B46  
                       ___ftge 1D89                         ___wmul 0800                      ??___awdiv 0041  
                    ??___ftadd 00CC                      ??___awmod 003A                      ??___ftneg 0039  
                    ??___lldiv 003E                      ??___ftmul 00AC                      ??___llmod 00A8  
                    ??___ftsub 0044                      ??___fttol 00C3                         _linea1 004A  
                       _linea2 01A8                         _fround 08C7               ___awdiv@quotient 00A2  
              ___awmod@divisor 0036                ___awmod@counter 003B               __end_of_invertir 1C55  
        ___ftmul@f3_as_product 00B1              __end_ofi1___ftmul 1236                      ??_isdigit 0036  
                       saved_w 007E                      ??_sprintf 00E1            __size_ofi1___ftpack 006C  
      __end_of__initialization 002B                     ___ftadd@f1 00C6                     ___ftadd@f2 00C9  
                   ___ftge@ff1 0036                     ___ftge@ff2 0039                i1___ftpack@sign 0074  
                   ___ftneg@f1 0036            ___bmul@multiplicand 0042                     ___ftmul@f1 00A6  
                   ___ftmul@f2 00A9                     ___ftsub@f1 00D6                     ___ftsub@f2 00D3  
                   ___fttol@f1 00BF                 __pcstackCOMMON 0070                  __end_of_bajar 1BEC  
                   ___lltoft@c 003E                  __end_of_envio 1B7F                  __end_of_scale 1000  
                __end_of_subir 1C19                     ___lwtoft@c 0078                     __div_to_l_ 168F  
                      ??_bajar 0036                __div_to_l_@exp1 00A5                __div_to_l_@cntr 00A4  
                      ??_envio 0036                        ??_scale 00B9                __div_to_l_@quot 00A0  
                 sprintf@width 0196                        ??_subir 0036                     __pbssBANK0 0044  
                   __pbssBANK1 00EA                     __pbssBANK3 01A8                      ?_InitTMR1 0070  
                __div_to_l_@f1 0036                  __div_to_l_@f2 0039                        ?_InitES 0070  
                   __pmaintext 1B7F                        ?___bmul 0042                        ?___ftge 0036  
                      ?___wmul 0036                     __pintentry 0004                        ?_fround 00B6  
                    ?___ftpack 0036                      ?___lltoft 003E                      ?___lwtoft 0078  
                   _armovector 0823                     __stringtab 1000                     ??_InitTMR1 0036  
               _inicializacion 154E                      ?_invertir 0070              __end_of__npowers_ 107C  
              __size_of_InitES 0015                __size_of___bmul 001B                __size_of___ftge 005F  
                 ??i1___ftpack 0075                        ___awdiv 1F82                        ___ftadd 1429  
                      ___awmod 1C9D                        ___ftneg 109C                        ___lldiv 1E48  
              __size_of___wmul 0023                        ___ftmul 1236                        ___llmod 1CEA  
                      ___ftsub 1B9E                        ___fttol 10D5                     _fround$817 00C2  
                   _fround$818 00BF                     ??___ftpack 003B                __size_of_fround 01DC  
                   ??___lltoft 0042                        __ptext1 154E                        __ptext2 0823  
                      __ptext3 002F                        __ptext4 0D09                        __ptext5 1AF5  
                      __ptext6 08C7                        __ptext7 1236                        __ptext8 1B46  
                      __ptext9 1C9D                     ??___lwtoft 007B                   __size_of_LCD 0048  
                   _letraenvio 007C                      _T1CONbits 0010                    ?__div_to_l_ 0036  
                      _dpowers 1006                        _isdigit 1AF5               ___awmod@dividend 0038  
                      _sprintf 002F                        clrloop0 1AEE         __end_of_inicializacion 168F  
         end_of_initialization 002B             __end_ofi1___ftpack 1F14                     ??_invertir 0036  
              ___lldiv@divisor 0036                ___lldiv@counter 0043  __size_of_rutinainterrupciones 0060  
                      psplit$0 100031                 __tdiv_to_l_@f1 0036                 __tdiv_to_l_@f2 0039  
                ??__tdiv_to_l_ 003C                      _PORTBbits 0006                      i1___ftmul 1163  
                  ?_armovector 0070                ?_inicializacion 0070            __size_of__div_to_l_ 0171  
                  ___ftmul@exp 00B0                 __end_of_InitES 1B2E                 __end_of___bmul 1B61  
               __end_of___ftge 1DE8                 __end_of___wmul 0823                 __end_of_fround 0AA3  
            pnum$text3_split_1 0031            start_initialization 0015                    __end_of_LCD 1C9D  
          __end_of__tdiv_to_l_ 1429                     ?i1___ftmul 0020                ___llmod@divisor 00A0  
            __size_of_InitTMR1 0018                ___llmod@counter 00A9                       ??_InitES 0036  
                     ??___bmul 0043                       ??___ftge 003C                       ??___wmul 003A  
                     ??_fround 00B9            __size_of_armovector 00A4                  sprintf@tmpval 0198  
                   fround@prec 00C5              __size_of___ftpack 006E              __size_of___lltoft 002F  
                  __pbssCOMMON 007C                      ___latbits 0002              __size_of___lwtoft 0014  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0                  __pcstackBANK3 0190  
                  sprintf@flag 0194                    sprintf@fval 01A2                    sprintf@prec 01A5  
            __size_of_invertir 003C                       ?___awdiv 003D                       ?___ftadd 00C6  
                     ?___awmod 0036                       ?___ftneg 0036                       ?___lldiv 0036  
                     ?___ftmul 00A6                       ?___llmod 00A0                       ?___ftsub 00D3  
                    __npowers_ 1055                       ?___fttol 00BF                      __pstrings 1000  
                  __tdiv_to_l_ 1325                   ??__div_to_l_ 003C                       ?_isdigit 0070  
                    _scale$819 00BB                 __size_of_bajar 002D                    ??i1___ftmul 0026  
                     ?_sprintf 00D9                 __size_of_envio 001E                 __size_of_scale 02F7  
               __size_of_subir 002D              interrupt_function 0004                 ___wmul@product 003A  
                    clear_ram0 1AED                       _PIE1bits 008C                       _PIR1bits 000C  
           __end_of__div_to_l_ 1800                     _ADCON0bits 001F                    __stringbase 1005  
                   _ADCON1bits 009F              ___wmul@multiplier 0036               ??_inicializacion 0036  
 __end_of_rutinainterrupciones 1E48                   ??_armovector 00E7                       _Contador 0049  
                     _InitTMR1 1B2E               __size_of___awdiv 007E               __size_of___ftadd 0125  
             __size_of___awmod 004D               __size_of___ftneg 000A               __size_of___lldiv 0060  
             __size_of___ftmul 00EF               __size_of___llmod 004E               __size_of___ftsub 0021  
             __size_of___fttol 008E                       ___ftpack 1F14             __end_of_armovector 08C7  
           __end_of__stringtab 1006                       ___lltoft 10A6                    _isdigit$609 0036  
                     ___lwtoft 1B05                     sprintf@exp 01A0                     sprintf@val 019C  
             __size_of_isdigit 0010                       __ptext10 1F82                       __ptext11 1325  
                     __ptext20 1F14                       __ptext12 168F                       __ptext21 109C  
                     __ptext13 0800                       __ptext30 1B19                       __ptext22 1D89  
                     __ptext14 10A6                       __ptext31 1DE8                       __ptext23 1D38  
                     __ptext15 1CEA                       __ptext32 1163                       __ptext24 1BEC  
                     __ptext16 1E48                       __ptext33 1B05                       __ptext25 1BBF  
                     __ptext17 10D5                       __ptext34 1EA8                       __ptext26 1C55  
                     __ptext18 1B9E                       __ptext27 1C19                       __ptext19 1429  
                     __ptext28 1B61                       __ptext29 1B2E              __CFG_BOR4V$BOR40V 0000  
                     __powers_ 102E                  __size_of_LCD2 0051               __size_of_sprintf 0CD7  
                __size_of_main 001F                      pnum$text3 0010                       _invertir 1C19  
                   _INTCONbits 000B                       isdigit@c 0037                       scale@scl 00BE  
                     intlevel1 0000                      sprintf@ap 0193               __tdiv_to_l_@exp1 00A5  
                    sprintf@sp 00D9               __tdiv_to_l_@cntr 00A4               __tdiv_to_l_@quot 00A0  
             ___lldiv@dividend 003A                      stringcode 1000           _rutinainterrupciones 1DE8  
                 ?__tdiv_to_l_ 0036                       sprintf@c 01A7                       sprintf@f 00DB  
             ___lldiv@quotient 003F                       stringdir 1000                       stringtab 1000  
        ?_rutinainterrupciones 0070  
