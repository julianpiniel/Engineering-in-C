

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 31 19:14:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0006                     _PORTB	set	6
   134  0006                     _PORTBbits	set	6
   135  0086                     _TRISB	set	134
   136  0189                     _ANSELH	set	393
   137  0188                     _ANSEL	set	392
   138                           
   139                           	psect	strings
   140  0003                     __pstrings:	
   141  0003                     stringtab:	
   142  0003                     __stringtab:	
   143  0003                     stringcode:	
   144                           ;	String table - string pointers are 1 byte each
   145                           
   146  0003                     stringdir:	
   147  0003  3000               	movlw	high stringdir
   148  0004  008A               	movwf	10
   149  0005  0804               	movf	4,w
   150  0006  0A84               	incf	4,f
   151  0007  0782               	addwf	2,f
   152  0008                     __stringbase:	
   153  0008  3400               	retlw	0
   154  0009                     __end_of__stringtab:	
   155  0009                     STR_1:	
   156  0009  3450               	retlw	80	;'P'
   157  000A  3475               	retlw	117	;'u'
   158  000B  3465               	retlw	101	;'e'
   159  000C  3464               	retlw	100	;'d'
   160  000D  346F               	retlw	111	;'o'
   161  000E  3420               	retlw	32	;' '
   162  000F  3465               	retlw	101	;'e'
   163  0010  3473               	retlw	115	;'s'
   164  0011  3463               	retlw	99	;'c'
   165  0012  3472               	retlw	114	;'r'
   166  0013  3469               	retlw	105	;'i'
   167  0014  3462               	retlw	98	;'b'
   168  0015  3469               	retlw	105	;'i'
   169  0016  3472               	retlw	114	;'r'
   170  0017  3400               	retlw	0
   171  0018                     STR_2:	
   172  0018  346C               	retlw	108	;'l'
   173  0019  346F               	retlw	111	;'o'
   174  001A  3420               	retlw	32	;' '
   175  001B  3471               	retlw	113	;'q'
   176  001C  3475               	retlw	117	;'u'
   177  001D  3465               	retlw	101	;'e'
   178  001E  3420               	retlw	32	;' '
   179  001F  3473               	retlw	115	;'s'
   180  0020  3465               	retlw	101	;'e'
   181  0021  3461               	retlw	97	;'a'
   182  0022  3400               	retlw	0
   183                           
   184                           ; #config settings
   185  0000                     
   186                           	psect	cinit
   187  07F5                     start_initialization:	
   188  07F5                     __initialization:	
   189                           
   190                           ; Clear objects allocated to BANK0
   191  07F5  1383               	bcf	3,7	;select IRP bank0
   192  07F6  3020               	movlw	low __pbssBANK0
   193  07F7  0084               	movwf	4
   194  07F8  3040               	movlw	low (__pbssBANK0+32)
   195  07F9  120A  118A  254A   	fcall	clear_ram0
   196  07FC                     end_of_initialization:	
   197                           ;End of C runtime variable initialization code
   198                           
   199  07FC                     __end_of__initialization:	
   200  07FC  0183               	clrf	3
   201  07FD  120A  118A  2DEC   	ljmp	_main	;jump to C main() function
   202                           
   203                           	psect	bssBANK0
   204  0020                     __pbssBANK0:	
   205  0020                     _texto2:	
   206  0020                     	ds	16
   207  0030                     _texto1:	
   208  0030                     	ds	16
   209                           
   210                           	psect	clrtext
   211  054A                     clear_ram0:	
   212                           ;	Called with FSR containing the base address, and
   213                           ;	W with the last address+1
   214                           
   215  054A  0064               	clrwdt	;clear the watchdog before getting into this loop
   216  054B                     clrloop0:	
   217  054B  0180               	clrf	0	;clear RAM location pointed to by FSR
   218  054C  0A84               	incf	4,f	;increment pointer
   219  054D  0604               	xorwf	4,w	;XOR with final address
   220  054E  1903               	btfsc	3,2	;have we reached the end yet?
   221  054F  3400               	retlw	0	;all done for this memory range, return
   222  0550  0604               	xorwf	4,w	;XOR again to restore value
   223  0551  2D4B               	goto	clrloop0	;do the next byte
   224                           
   225                           	psect	cstackCOMMON
   226  0070                     __pcstackCOMMON:	
   227  0070                     ?_invertir:	
   228  0070                     ??_invertir:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_envio:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ??_envio:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_inicializacion:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ??_inicializacion:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_bajar:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ??_bajar:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ?_subir:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ??_subir:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ?_LCD:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_LCD2:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ?_InitES:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ??_InitES:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_sprintf:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     sprintf@f:	
   274                           ; 2 bytes @ 0x0
   275                           
   276                           
   277                           ; 1 bytes @ 0x0
   278  0070                     	ds	1
   279  0071                     ??_sprintf:	
   280                           
   281                           ; 1 bytes @ 0x1
   282  0071                     	ds	1
   283  0072                     invertir@entrada:	
   284  0072                     sprintf@ap:	
   285                           ; 1 bytes @ 0x2
   286                           
   287                           
   288                           ; 1 bytes @ 0x2
   289  0072                     	ds	1
   290  0073                     ??_LCD:	
   291  0073                     ??_LCD2:	
   292                           ; 1 bytes @ 0x3
   293                           
   294  0073                     sprintf@c:	
   295                           ; 1 bytes @ 0x3
   296                           
   297                           
   298                           ; 1 bytes @ 0x3
   299  0073                     	ds	1
   300  0074                     sprintf@sp:	
   301                           
   302                           ; 1 bytes @ 0x4
   303  0074                     	ds	1
   304  0075                     LCD@p1:	
   305  0075                     LCD2@p2:	
   306                           ; 1 bytes @ 0x5
   307                           
   308                           
   309                           ; 1 bytes @ 0x5
   310  0075                     	ds	1
   311  0076                     LCD@letraenvio:	
   312  0076                     LCD2@letraenvio:	
   313                           ; 1 bytes @ 0x6
   314                           
   315                           
   316                           ; 1 bytes @ 0x6
   317  0076                     	ds	1
   318  0077                     ??_main:	
   319                           
   320                           ; 1 bytes @ 0x7
   321  0077                     	ds	1
   322                           
   323                           	psect	maintext
   324  05EC                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 45 in file "lab3ej1cheto.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          1       0       0       0       0
   347 ;;      Totals:         1       0       0       0       0
   348 ;;Total ram usage:        1 bytes
   349 ;; Hardware stack levels required when called:    2
   350 ;; This function calls:
   351 ;;		_InitES
   352 ;;		_LCD
   353 ;;		_LCD2
   354 ;;		_inicializacion
   355 ;;		_sprintf
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           
   362                           ;psect for function _main
   363  05EC                     _main:	
   364                           
   365                           ;lab3ej1cheto.c: 47: InitES();
   366                           
   367                           ;incstack = 0
   368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   369  05EC  120A  118A  2552  120A  118A  	fcall	_InitES
   370                           
   371                           ;lab3ej1cheto.c: 48: inicializacion();
   372  05F1  120A  118A  26D9  120A  118A  	fcall	_inicializacion
   373                           
   374                           ;lab3ej1cheto.c: 49: sprintf (texto1,"Puedo escribir");
   375  05F6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   376  05F7  00F7               	movwf	??_main
   377  05F8  0877               	movf	??_main,w
   378  05F9  00F0               	movwf	sprintf@f
   379  05FA  3030               	movlw	(low (_texto1| 0))& (0+255)
   380  05FB  120A  118A  2574  120A  118A  	fcall	_sprintf
   381                           
   382                           ;lab3ej1cheto.c: 50: sprintf (texto2,"lo que sea");
   383  0600  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   384  0601  00F7               	movwf	??_main
   385  0602  0877               	movf	??_main,w
   386  0603  00F0               	movwf	sprintf@f
   387  0604  3020               	movlw	(low (_texto2| 0))& (0+255)
   388  0605  120A  118A  2574  120A  118A  	fcall	_sprintf
   389                           
   390                           ;lab3ej1cheto.c: 51: LCD(&texto1);
   391  060A  3030               	movlw	(low (_texto1| 0))& (0+255)
   392  060B  120A  118A  2654  120A  118A  	fcall	_LCD
   393                           
   394                           ;lab3ej1cheto.c: 52: LCD2(&texto2);
   395  0610  3020               	movlw	(low (_texto2| 0))& (0+255)
   396  0611  120A  118A  2692  120A  118A  	fcall	_LCD2
   397  0616                     l53:	
   398                           ;lab3ej1cheto.c: 53: while(1);
   399                           
   400  0616  2E16               	goto	l53
   401  0617                     __end_of_main:	
   402                           
   403                           	psect	text1
   404  0574                     __ptext1:	
   405 ;; *************** function _sprintf *****************
   406 ;; Defined at:
   407 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  sp              1    wreg     PTR unsigned char 
   410 ;;		 -> texto2(16), texto1(16), 
   411 ;;  f               1    0[COMMON] PTR const unsigned char 
   412 ;;		 -> STR_2(11), STR_1(15), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;  sp              1    4[COMMON] PTR unsigned char 
   415 ;;		 -> texto2(16), texto1(16), 
   416 ;;  tmpval          4    0        struct .
   417 ;;  cp              2    0        PTR const unsigned char 
   418 ;;  len             2    0        unsigned int 
   419 ;;  val             2    0        unsigned int 
   420 ;;  c               1    3[COMMON] char 
   421 ;;  ap              1    2[COMMON] PTR void [1]
   422 ;;		 -> ?_sprintf(2), 
   423 ;;  flag            1    0        unsigned char 
   424 ;;  prec            1    0        char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2    0[COMMON] int 
   427 ;; Registers used:
   428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         1       0       0       0       0
   435 ;;      Locals:         3       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0
   437 ;;      Totals:         5       0       0       0       0
   438 ;;Total ram usage:        5 bytes
   439 ;; Hardware stack levels used:    2
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _sprintf
   449  0574                     _sprintf:	
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath]
   453                           ;sprintf@sp stored from wreg
   454  0574  00F4               	movwf	sprintf@sp
   455                           
   456                           ;doprnt.c: 494: va_list ap;
   457                           ;doprnt.c: 499: signed char c;
   458                           ;doprnt.c: 506: signed char prec;
   459                           ;doprnt.c: 508: unsigned char flag;
   460                           ;doprnt.c: 523: union {
   461                           ;doprnt.c: 524: unsigned long vd;
   462                           ;doprnt.c: 525: double integ;
   463                           ;doprnt.c: 526: } tmpval;
   464                           ;doprnt.c: 528: unsigned int val;
   465                           ;doprnt.c: 529: unsigned len;
   466                           ;doprnt.c: 530: const char * cp;
   467                           ;doprnt.c: 533: *ap = __va_start();
   468  0575  3071               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   469  0576  00F1               	movwf	??_sprintf
   470  0577  0871               	movf	??_sprintf,w
   471  0578  00F2               	movwf	sprintf@ap
   472  0579                     l832:	
   473                           ;doprnt.c: 543: }
   474                           ;doprnt.c: 1422: {
   475                           
   476                           ;doprnt.c: 542: continue;
   477                           
   478                           ;doprnt.c: 536: while(c = *f++) {
   479                           
   480  0579  3001               	movlw	1
   481  057A  07F0               	addwf	sprintf@f,f
   482  057B  30FF               	movlw	-1
   483  057C  0770               	addwf	sprintf@f,w
   484  057D  0084               	movwf	4
   485  057E  120A  118A  2003  120A  118A  	fcall	stringdir
   486  0583  00F1               	movwf	??_sprintf
   487  0584  0871               	movf	??_sprintf,w
   488  0585  00F3               	movwf	sprintf@c
   489  0586  0873               	movf	sprintf@c,w
   490  0587  1903               	btfsc	3,2
   491  0588  2D95               	goto	l834
   492                           
   493                           ;doprnt.c: 540: {
   494                           ;doprnt.c: 541: ((*sp++ = (c)));
   495  0589  0873               	movf	sprintf@c,w
   496  058A  00F1               	movwf	??_sprintf
   497  058B  0874               	movf	sprintf@sp,w
   498  058C  0084               	movwf	4
   499  058D  0871               	movf	??_sprintf,w
   500  058E  1383               	bcf	3,7	;select IRP bank0
   501  058F  0080               	movwf	0
   502  0590  3001               	movlw	1
   503  0591  00F1               	movwf	??_sprintf
   504  0592  0871               	movf	??_sprintf,w
   505  0593  07F4               	addwf	sprintf@sp,f
   506  0594  2D79               	goto	l832
   507  0595                     l834:	
   508                           
   509                           ;doprnt.c: 1469: }
   510                           ;doprnt.c: 1533: }
   511                           ;doprnt.c: 1538: *sp = 0;
   512  0595  0874               	movf	sprintf@sp,w
   513  0596  0084               	movwf	4
   514  0597  1383               	bcf	3,7	;select IRP bank0
   515  0598  0180               	clrf	0
   516  0599  0008               	return
   517  059A                     __end_of_sprintf:	
   518                           ;doprnt.c: 1540: return 0;
   519                           ;	Return value of _sprintf is never used
   520                           
   521                           
   522                           	psect	text2
   523  06D9                     __ptext2:	
   524 ;; *************** function _inicializacion *****************
   525 ;; Defined at:
   526 ;;		line 27 in file "LCD.h"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          2       0       0       0       0
   543 ;;      Totals:         2       0       0       0       0
   544 ;;Total ram usage:        2 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _inicializacion
   555  06D9                     _inicializacion:	
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _inicializacion: [wreg]
   559  06D9  30C3               	movlw	195
   560  06DA  00F1               	movwf	??_inicializacion+1
   561  06DB  30CD               	movlw	205
   562  06DC  00F0               	movwf	??_inicializacion
   563  06DD                     u97:	
   564  06DD  0BF0               	decfsz	??_inicializacion,f
   565  06DE  2EDD               	goto	u97
   566  06DF  0BF1               	decfsz	??_inicializacion+1,f
   567  06E0  2EDD               	goto	u97
   568                           
   569                           ;LCD.h: 29: PORTBbits.RB6=0;
   570  06E1  1283               	bcf	3,5	;RP0=0, select bank0
   571  06E2  1303               	bcf	3,6	;RP1=0, select bank0
   572  06E3  1306               	bcf	6,6	;volatile
   573                           
   574                           ;LCD.h: 30: PORTBbits.RB5=0;
   575  06E4  1286               	bcf	6,5	;volatile
   576                           
   577                           ;LCD.h: 31: PORTBbits.RB0=0;
   578  06E5  1006               	bcf	6,0	;volatile
   579                           
   580                           ;LCD.h: 32: PORTBbits.RB1=0;
   581  06E6  1086               	bcf	6,1	;volatile
   582                           
   583                           ;LCD.h: 33: PORTBbits.RB2=1;
   584  06E7  1506               	bsf	6,2	;volatile
   585                           
   586                           ;LCD.h: 34: PORTBbits.RB3=1;
   587  06E8  1586               	bsf	6,3	;volatile
   588                           
   589                           ;LCD.h: 35: PORTBbits.RB4=1;
   590  06E9  1606               	bsf	6,4	;volatile
   591                           
   592                           ;LCD.h: 36: _delay((unsigned long)((5)*(20000000/4000.0)));
   593  06EA  3021               	movlw	33
   594  06EB  00F1               	movwf	??_inicializacion+1
   595  06EC  3076               	movlw	118
   596  06ED  00F0               	movwf	??_inicializacion
   597  06EE                     u107:	
   598  06EE  0BF0               	decfsz	??_inicializacion,f
   599  06EF  2EEE               	goto	u107
   600  06F0  0BF1               	decfsz	??_inicializacion+1,f
   601  06F1  2EEE               	goto	u107
   602  06F2  0000               	nop
   603                           
   604                           ;LCD.h: 37: PORTBbits.RB4=0;
   605  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   606  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   607  06F5  1206               	bcf	6,4	;volatile
   608                           
   609                           ;LCD.h: 38: _delay((unsigned long)((5)*(20000000/4000.0)));
   610  06F6  3021               	movlw	33
   611  06F7  00F1               	movwf	??_inicializacion+1
   612  06F8  3076               	movlw	118
   613  06F9  00F0               	movwf	??_inicializacion
   614  06FA                     u117:	
   615  06FA  0BF0               	decfsz	??_inicializacion,f
   616  06FB  2EFA               	goto	u117
   617  06FC  0BF1               	decfsz	??_inicializacion+1,f
   618  06FD  2EFA               	goto	u117
   619  06FE  0000               	nop
   620                           
   621                           ;LCD.h: 39: PORTBbits.RB6=0;
   622  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   623  0700  1303               	bcf	3,6	;RP1=0, select bank0
   624  0701  1306               	bcf	6,6	;volatile
   625                           
   626                           ;LCD.h: 40: PORTBbits.RB5=0;
   627  0702  1286               	bcf	6,5	;volatile
   628                           
   629                           ;LCD.h: 41: PORTBbits.RB0=0;
   630  0703  1006               	bcf	6,0	;volatile
   631                           
   632                           ;LCD.h: 42: PORTBbits.RB1=0;
   633  0704  1086               	bcf	6,1	;volatile
   634                           
   635                           ;LCD.h: 43: PORTBbits.RB2=1;
   636  0705  1506               	bsf	6,2	;volatile
   637                           
   638                           ;LCD.h: 44: PORTBbits.RB3=1;
   639  0706  1586               	bsf	6,3	;volatile
   640                           
   641                           ;LCD.h: 45: PORTBbits.RB4=1;
   642  0707  1606               	bsf	6,4	;volatile
   643                           
   644                           ;LCD.h: 46: _delay((unsigned long)((5)*(20000000/4000.0)));
   645  0708  3021               	movlw	33
   646  0709  00F1               	movwf	??_inicializacion+1
   647  070A  3076               	movlw	118
   648  070B  00F0               	movwf	??_inicializacion
   649  070C                     u127:	
   650  070C  0BF0               	decfsz	??_inicializacion,f
   651  070D  2F0C               	goto	u127
   652  070E  0BF1               	decfsz	??_inicializacion+1,f
   653  070F  2F0C               	goto	u127
   654  0710  0000               	nop
   655                           
   656                           ;LCD.h: 47: PORTBbits.RB4=0;
   657  0711  1283               	bcf	3,5	;RP0=0, select bank0
   658  0712  1303               	bcf	3,6	;RP1=0, select bank0
   659  0713  1206               	bcf	6,4	;volatile
   660                           
   661                           ;LCD.h: 48: _delay((unsigned long)((5)*(20000000/4000.0)));
   662  0714  3021               	movlw	33
   663  0715  00F1               	movwf	??_inicializacion+1
   664  0716  3076               	movlw	118
   665  0717  00F0               	movwf	??_inicializacion
   666  0718                     u137:	
   667  0718  0BF0               	decfsz	??_inicializacion,f
   668  0719  2F18               	goto	u137
   669  071A  0BF1               	decfsz	??_inicializacion+1,f
   670  071B  2F18               	goto	u137
   671  071C  0000               	nop
   672                           
   673                           ;LCD.h: 49: PORTBbits.RB6=0;
   674  071D  1283               	bcf	3,5	;RP0=0, select bank0
   675  071E  1303               	bcf	3,6	;RP1=0, select bank0
   676  071F  1306               	bcf	6,6	;volatile
   677                           
   678                           ;LCD.h: 50: PORTBbits.RB5=0;
   679  0720  1286               	bcf	6,5	;volatile
   680                           
   681                           ;LCD.h: 51: PORTBbits.RB0=0;
   682  0721  1006               	bcf	6,0	;volatile
   683                           
   684                           ;LCD.h: 52: PORTBbits.RB1=0;
   685  0722  1086               	bcf	6,1	;volatile
   686                           
   687                           ;LCD.h: 53: PORTBbits.RB2=1;
   688  0723  1506               	bsf	6,2	;volatile
   689                           
   690                           ;LCD.h: 54: PORTBbits.RB3=0;
   691  0724  1186               	bcf	6,3	;volatile
   692                           
   693                           ;LCD.h: 55: PORTBbits.RB4=1;
   694  0725  1606               	bsf	6,4	;volatile
   695                           
   696                           ;LCD.h: 56: _delay((unsigned long)((5)*(20000000/4000.0)));
   697  0726  3021               	movlw	33
   698  0727  00F1               	movwf	??_inicializacion+1
   699  0728  3076               	movlw	118
   700  0729  00F0               	movwf	??_inicializacion
   701  072A                     u147:	
   702  072A  0BF0               	decfsz	??_inicializacion,f
   703  072B  2F2A               	goto	u147
   704  072C  0BF1               	decfsz	??_inicializacion+1,f
   705  072D  2F2A               	goto	u147
   706  072E  0000               	nop
   707                           
   708                           ;LCD.h: 57: PORTBbits.RB4=0;
   709  072F  1283               	bcf	3,5	;RP0=0, select bank0
   710  0730  1303               	bcf	3,6	;RP1=0, select bank0
   711  0731  1206               	bcf	6,4	;volatile
   712                           
   713                           ;LCD.h: 58: _delay((unsigned long)((5)*(20000000/4000.0)));
   714  0732  3021               	movlw	33
   715  0733  00F1               	movwf	??_inicializacion+1
   716  0734  3076               	movlw	118
   717  0735  00F0               	movwf	??_inicializacion
   718  0736                     u157:	
   719  0736  0BF0               	decfsz	??_inicializacion,f
   720  0737  2F36               	goto	u157
   721  0738  0BF1               	decfsz	??_inicializacion+1,f
   722  0739  2F36               	goto	u157
   723  073A  0000               	nop
   724                           
   725                           ;LCD.h: 59: PORTBbits.RB6=0;
   726  073B  1283               	bcf	3,5	;RP0=0, select bank0
   727  073C  1303               	bcf	3,6	;RP1=0, select bank0
   728  073D  1306               	bcf	6,6	;volatile
   729                           
   730                           ;LCD.h: 60: PORTBbits.RB5=0;
   731  073E  1286               	bcf	6,5	;volatile
   732                           
   733                           ;LCD.h: 61: PORTBbits.RB0=0;
   734  073F  1006               	bcf	6,0	;volatile
   735                           
   736                           ;LCD.h: 62: PORTBbits.RB1=0;
   737  0740  1086               	bcf	6,1	;volatile
   738                           
   739                           ;LCD.h: 63: PORTBbits.RB2=1;
   740  0741  1506               	bsf	6,2	;volatile
   741                           
   742                           ;LCD.h: 64: PORTBbits.RB3=0;
   743  0742  1186               	bcf	6,3	;volatile
   744                           
   745                           ;LCD.h: 65: PORTBbits.RB4=1;
   746  0743  1606               	bsf	6,4	;volatile
   747                           
   748                           ;LCD.h: 66: _delay((unsigned long)((5)*(20000000/4000.0)));
   749  0744  3021               	movlw	33
   750  0745  00F1               	movwf	??_inicializacion+1
   751  0746  3076               	movlw	118
   752  0747  00F0               	movwf	??_inicializacion
   753  0748                     u167:	
   754  0748  0BF0               	decfsz	??_inicializacion,f
   755  0749  2F48               	goto	u167
   756  074A  0BF1               	decfsz	??_inicializacion+1,f
   757  074B  2F48               	goto	u167
   758  074C  0000               	nop
   759                           
   760                           ;LCD.h: 67: PORTBbits.RB4=0;
   761  074D  1283               	bcf	3,5	;RP0=0, select bank0
   762  074E  1303               	bcf	3,6	;RP1=0, select bank0
   763  074F  1206               	bcf	6,4	;volatile
   764                           
   765                           ;LCD.h: 68: PORTBbits.RB6=0;
   766  0750  1306               	bcf	6,6	;volatile
   767                           
   768                           ;LCD.h: 69: PORTBbits.RB5=0;
   769  0751  1286               	bcf	6,5	;volatile
   770                           
   771                           ;LCD.h: 70: PORTBbits.RB0=1;
   772  0752  1406               	bsf	6,0	;volatile
   773                           
   774                           ;LCD.h: 71: PORTBbits.RB1=1;
   775  0753  1486               	bsf	6,1	;volatile
   776                           
   777                           ;LCD.h: 72: PORTBbits.RB4=1;
   778  0754  1606               	bsf	6,4	;volatile
   779                           
   780                           ;LCD.h: 73: _delay((unsigned long)((5)*(20000000/4000.0)));
   781  0755  3021               	movlw	33
   782  0756  00F1               	movwf	??_inicializacion+1
   783  0757  3076               	movlw	118
   784  0758  00F0               	movwf	??_inicializacion
   785  0759                     u177:	
   786  0759  0BF0               	decfsz	??_inicializacion,f
   787  075A  2F59               	goto	u177
   788  075B  0BF1               	decfsz	??_inicializacion+1,f
   789  075C  2F59               	goto	u177
   790  075D  0000               	nop
   791                           
   792                           ;LCD.h: 74: PORTBbits.RB4=0;
   793  075E  1283               	bcf	3,5	;RP0=0, select bank0
   794  075F  1303               	bcf	3,6	;RP1=0, select bank0
   795  0760  1206               	bcf	6,4	;volatile
   796                           
   797                           ;LCD.h: 75: _delay((unsigned long)((5)*(20000000/4000.0)));
   798  0761  3021               	movlw	33
   799  0762  00F1               	movwf	??_inicializacion+1
   800  0763  3076               	movlw	118
   801  0764  00F0               	movwf	??_inicializacion
   802  0765                     u187:	
   803  0765  0BF0               	decfsz	??_inicializacion,f
   804  0766  2F65               	goto	u187
   805  0767  0BF1               	decfsz	??_inicializacion+1,f
   806  0768  2F65               	goto	u187
   807  0769  0000               	nop
   808                           
   809                           ;LCD.h: 76: PORTBbits.RB6=0;
   810  076A  1283               	bcf	3,5	;RP0=0, select bank0
   811  076B  1303               	bcf	3,6	;RP1=0, select bank0
   812  076C  1306               	bcf	6,6	;volatile
   813                           
   814                           ;LCD.h: 77: PORTBbits.RB5=0;
   815  076D  1286               	bcf	6,5	;volatile
   816                           
   817                           ;LCD.h: 78: PORTBbits.RB0=0;
   818  076E  1006               	bcf	6,0	;volatile
   819                           
   820                           ;LCD.h: 79: PORTBbits.RB1=0;
   821  076F  1086               	bcf	6,1	;volatile
   822                           
   823                           ;LCD.h: 80: PORTBbits.RB2=0;
   824  0770  1106               	bcf	6,2	;volatile
   825                           
   826                           ;LCD.h: 81: PORTBbits.RB3=0;
   827  0771  1186               	bcf	6,3	;volatile
   828                           
   829                           ;LCD.h: 82: PORTBbits.RB4=1;
   830  0772  1606               	bsf	6,4	;volatile
   831                           
   832                           ;LCD.h: 83: _delay((unsigned long)((5)*(20000000/4000.0)));
   833  0773  3021               	movlw	33
   834  0774  00F1               	movwf	??_inicializacion+1
   835  0775  3076               	movlw	118
   836  0776  00F0               	movwf	??_inicializacion
   837  0777                     u197:	
   838  0777  0BF0               	decfsz	??_inicializacion,f
   839  0778  2F77               	goto	u197
   840  0779  0BF1               	decfsz	??_inicializacion+1,f
   841  077A  2F77               	goto	u197
   842  077B  0000               	nop
   843                           
   844                           ;LCD.h: 84: PORTBbits.RB4=0;
   845  077C  1283               	bcf	3,5	;RP0=0, select bank0
   846  077D  1303               	bcf	3,6	;RP1=0, select bank0
   847  077E  1206               	bcf	6,4	;volatile
   848                           
   849                           ;LCD.h: 85: PORTBbits.RB6=0;
   850  077F  1306               	bcf	6,6	;volatile
   851                           
   852                           ;LCD.h: 86: PORTBbits.RB5=0;
   853  0780  1286               	bcf	6,5	;volatile
   854                           
   855                           ;LCD.h: 87: PORTBbits.RB0=1;
   856  0781  1406               	bsf	6,0	;volatile
   857                           
   858                           ;LCD.h: 88: PORTBbits.RB1=0;
   859  0782  1086               	bcf	6,1	;volatile
   860                           
   861                           ;LCD.h: 89: PORTBbits.RB2=0;
   862  0783  1106               	bcf	6,2	;volatile
   863                           
   864                           ;LCD.h: 90: PORTBbits.RB3=0;
   865  0784  1186               	bcf	6,3	;volatile
   866                           
   867                           ;LCD.h: 91: PORTBbits.RB4=1;
   868  0785  1606               	bsf	6,4	;volatile
   869                           
   870                           ;LCD.h: 92: _delay((unsigned long)((5)*(20000000/4000.0)));
   871  0786  3021               	movlw	33
   872  0787  00F1               	movwf	??_inicializacion+1
   873  0788  3076               	movlw	118
   874  0789  00F0               	movwf	??_inicializacion
   875  078A                     u207:	
   876  078A  0BF0               	decfsz	??_inicializacion,f
   877  078B  2F8A               	goto	u207
   878  078C  0BF1               	decfsz	??_inicializacion+1,f
   879  078D  2F8A               	goto	u207
   880  078E  0000               	nop
   881                           
   882                           ;LCD.h: 93: PORTBbits.RB4=0;
   883  078F  1283               	bcf	3,5	;RP0=0, select bank0
   884  0790  1303               	bcf	3,6	;RP1=0, select bank0
   885  0791  1206               	bcf	6,4	;volatile
   886                           
   887                           ;LCD.h: 94: _delay((unsigned long)((5)*(20000000/4000.0)));
   888  0792  3021               	movlw	33
   889  0793  00F1               	movwf	??_inicializacion+1
   890  0794  3076               	movlw	118
   891  0795  00F0               	movwf	??_inicializacion
   892  0796                     u217:	
   893  0796  0BF0               	decfsz	??_inicializacion,f
   894  0797  2F96               	goto	u217
   895  0798  0BF1               	decfsz	??_inicializacion+1,f
   896  0799  2F96               	goto	u217
   897  079A  0000               	nop
   898                           
   899                           ;LCD.h: 95: PORTBbits.RB6=0;
   900  079B  1283               	bcf	3,5	;RP0=0, select bank0
   901  079C  1303               	bcf	3,6	;RP1=0, select bank0
   902  079D  1306               	bcf	6,6	;volatile
   903                           
   904                           ;LCD.h: 96: PORTBbits.RB5=0;
   905  079E  1286               	bcf	6,5	;volatile
   906                           
   907                           ;LCD.h: 97: PORTBbits.RB0=0;
   908  079F  1006               	bcf	6,0	;volatile
   909                           
   910                           ;LCD.h: 98: PORTBbits.RB1=0;
   911  07A0  1086               	bcf	6,1	;volatile
   912                           
   913                           ;LCD.h: 99: PORTBbits.RB2=0;
   914  07A1  1106               	bcf	6,2	;volatile
   915                           
   916                           ;LCD.h: 100: PORTBbits.RB3=0;
   917  07A2  1186               	bcf	6,3	;volatile
   918                           
   919                           ;LCD.h: 101: PORTBbits.RB4=1;
   920  07A3  1606               	bsf	6,4	;volatile
   921                           
   922                           ;LCD.h: 102: _delay((unsigned long)((5)*(20000000/4000.0)));
   923  07A4  3021               	movlw	33
   924  07A5  00F1               	movwf	??_inicializacion+1
   925  07A6  3076               	movlw	118
   926  07A7  00F0               	movwf	??_inicializacion
   927  07A8                     u227:	
   928  07A8  0BF0               	decfsz	??_inicializacion,f
   929  07A9  2FA8               	goto	u227
   930  07AA  0BF1               	decfsz	??_inicializacion+1,f
   931  07AB  2FA8               	goto	u227
   932  07AC  0000               	nop
   933                           
   934                           ;LCD.h: 103: PORTBbits.RB4=0;
   935  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   936  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   937  07AF  1206               	bcf	6,4	;volatile
   938                           
   939                           ;LCD.h: 104: PORTBbits.RB6=0;
   940  07B0  1306               	bcf	6,6	;volatile
   941                           
   942                           ;LCD.h: 105: PORTBbits.RB5=0;
   943  07B1  1286               	bcf	6,5	;volatile
   944                           
   945                           ;LCD.h: 106: PORTBbits.RB0=0;
   946  07B2  1006               	bcf	6,0	;volatile
   947                           
   948                           ;LCD.h: 107: PORTBbits.RB1=0;
   949  07B3  1086               	bcf	6,1	;volatile
   950                           
   951                           ;LCD.h: 108: PORTBbits.RB2=0;
   952  07B4  1106               	bcf	6,2	;volatile
   953                           
   954                           ;LCD.h: 109: PORTBbits.RB3=1;
   955  07B5  1586               	bsf	6,3	;volatile
   956                           
   957                           ;LCD.h: 110: PORTBbits.RB4=1;
   958  07B6  1606               	bsf	6,4	;volatile
   959                           
   960                           ;LCD.h: 111: _delay((unsigned long)((5)*(20000000/4000.0)));
   961  07B7  3021               	movlw	33
   962  07B8  00F1               	movwf	??_inicializacion+1
   963  07B9  3076               	movlw	118
   964  07BA  00F0               	movwf	??_inicializacion
   965  07BB                     u237:	
   966  07BB  0BF0               	decfsz	??_inicializacion,f
   967  07BC  2FBB               	goto	u237
   968  07BD  0BF1               	decfsz	??_inicializacion+1,f
   969  07BE  2FBB               	goto	u237
   970  07BF  0000               	nop
   971                           
   972                           ;LCD.h: 112: PORTBbits.RB4=0;
   973  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   974  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   975  07C2  1206               	bcf	6,4	;volatile
   976                           
   977                           ;LCD.h: 113: _delay((unsigned long)((5)*(20000000/4000.0)));
   978  07C3  3021               	movlw	33
   979  07C4  00F1               	movwf	??_inicializacion+1
   980  07C5  3076               	movlw	118
   981  07C6  00F0               	movwf	??_inicializacion
   982  07C7                     u247:	
   983  07C7  0BF0               	decfsz	??_inicializacion,f
   984  07C8  2FC7               	goto	u247
   985  07C9  0BF1               	decfsz	??_inicializacion+1,f
   986  07CA  2FC7               	goto	u247
   987  07CB  0000               	nop
   988                           
   989                           ;LCD.h: 114: PORTBbits.RB6=0;
   990  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   991  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   992  07CE  1306               	bcf	6,6	;volatile
   993                           
   994                           ;LCD.h: 115: PORTBbits.RB5=0;
   995  07CF  1286               	bcf	6,5	;volatile
   996                           
   997                           ;LCD.h: 116: PORTBbits.RB0=0;
   998  07D0  1006               	bcf	6,0	;volatile
   999                           
  1000                           ;LCD.h: 117: PORTBbits.RB1=0;
  1001  07D1  1086               	bcf	6,1	;volatile
  1002                           
  1003                           ;LCD.h: 118: PORTBbits.RB2=0;
  1004  07D2  1106               	bcf	6,2	;volatile
  1005                           
  1006                           ;LCD.h: 119: PORTBbits.RB3=0;
  1007  07D3  1186               	bcf	6,3	;volatile
  1008                           
  1009                           ;LCD.h: 120: PORTBbits.RB4=1;
  1010  07D4  1606               	bsf	6,4	;volatile
  1011                           
  1012                           ;LCD.h: 121: _delay((unsigned long)((5)*(20000000/4000.0)));
  1013  07D5  3021               	movlw	33
  1014  07D6  00F1               	movwf	??_inicializacion+1
  1015  07D7  3076               	movlw	118
  1016  07D8  00F0               	movwf	??_inicializacion
  1017  07D9                     u257:	
  1018  07D9  0BF0               	decfsz	??_inicializacion,f
  1019  07DA  2FD9               	goto	u257
  1020  07DB  0BF1               	decfsz	??_inicializacion+1,f
  1021  07DC  2FD9               	goto	u257
  1022  07DD  0000               	nop
  1023                           
  1024                           ;LCD.h: 122: PORTBbits.RB4=0;
  1025  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1026  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1027  07E0  1206               	bcf	6,4	;volatile
  1028                           
  1029                           ;LCD.h: 123: PORTBbits.RB6=0;
  1030  07E1  1306               	bcf	6,6	;volatile
  1031                           
  1032                           ;LCD.h: 124: PORTBbits.RB5=0;
  1033  07E2  1286               	bcf	6,5	;volatile
  1034                           
  1035                           ;LCD.h: 125: PORTBbits.RB0=1;
  1036  07E3  1406               	bsf	6,0	;volatile
  1037                           
  1038                           ;LCD.h: 126: PORTBbits.RB1=1;
  1039  07E4  1486               	bsf	6,1	;volatile
  1040                           
  1041                           ;LCD.h: 127: PORTBbits.RB2=1;
  1042  07E5  1506               	bsf	6,2	;volatile
  1043                           
  1044                           ;LCD.h: 128: PORTBbits.RB3=0;
  1045  07E6  1186               	bcf	6,3	;volatile
  1046                           
  1047                           ;LCD.h: 129: PORTBbits.RB4=1;
  1048  07E7  1606               	bsf	6,4	;volatile
  1049                           
  1050                           ;LCD.h: 130: _delay((unsigned long)((5)*(20000000/4000.0)));
  1051  07E8  3021               	movlw	33
  1052  07E9  00F1               	movwf	??_inicializacion+1
  1053  07EA  3076               	movlw	118
  1054  07EB  00F0               	movwf	??_inicializacion
  1055  07EC                     u267:	
  1056  07EC  0BF0               	decfsz	??_inicializacion,f
  1057  07ED  2FEC               	goto	u267
  1058  07EE  0BF1               	decfsz	??_inicializacion+1,f
  1059  07EF  2FEC               	goto	u267
  1060  07F0  0000               	nop
  1061                           
  1062                           ;LCD.h: 131: PORTBbits.RB4=0;
  1063  07F1  1283               	bcf	3,5	;RP0=0, select bank0
  1064  07F2  1303               	bcf	3,6	;RP1=0, select bank0
  1065  07F3  1206               	bcf	6,4	;volatile
  1066  07F4  0008               	return
  1067  07F5                     __end_of_inicializacion:	
  1068                           
  1069                           	psect	text3
  1070  0692                     __ptext3:	
  1071 ;; *************** function _LCD2 *****************
  1072 ;; Defined at:
  1073 ;;		line 195 in file "LCD.h"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  p2              1    wreg     PTR unsigned char 
  1076 ;;		 -> texto2(16), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  p2              1    5[COMMON] PTR unsigned char 
  1079 ;;		 -> texto2(16), 
  1080 ;;  letraenvio      1    6[COMMON] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         2       0       0       0       0
  1092 ;;      Temps:          2       0       0       0       0
  1093 ;;      Totals:         4       0       0       0       0
  1094 ;;Total ram usage:        4 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		_bajar
  1099 ;;		_envio
  1100 ;;		_invertir
  1101 ;;		_subir
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _LCD2
  1109  0692                     _LCD2:	
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _LCD2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1113                           ;LCD2@p2 stored from wreg
  1114  0692  00F5               	movwf	LCD2@p2
  1115                           
  1116                           ;LCD.h: 197: unsigned char letraenvio=0;
  1117  0693  01F6               	clrf	LCD2@letraenvio
  1118                           
  1119                           ;LCD.h: 198: bajar();
  1120  0694  120A  118A  259A  120A  118A  	fcall	_bajar
  1121  0699                     l796:	
  1122                           ;LCD.h: 199: while(*p2!=0)
  1123                           
  1124  0699  0875               	movf	LCD2@p2,w
  1125  069A  0084               	movwf	4
  1126  069B  1383               	bcf	3,7	;select IRP bank0
  1127  069C  0800               	movf	0,w
  1128  069D  1903               	btfsc	3,2
  1129  069E  2ED5               	goto	l798
  1130                           
  1131                           ;LCD.h: 200: {
  1132                           ;LCD.h: 201: letraenvio = *p2;
  1133  069F  0875               	movf	LCD2@p2,w
  1134  06A0  0084               	movwf	4
  1135  06A1  1383               	bcf	3,7	;select IRP bank0
  1136  06A2  0800               	movf	0,w
  1137  06A3  00F3               	movwf	??_LCD2
  1138  06A4  0873               	movf	??_LCD2,w
  1139  06A5  00F6               	movwf	LCD2@letraenvio
  1140                           
  1141                           ;LCD.h: 202: letraenvio= letraenvio>>4;
  1142  06A6  0876               	movf	LCD2@letraenvio,w
  1143  06A7  00F3               	movwf	??_LCD2
  1144  06A8  3004               	movlw	4
  1145  06A9                     u55:	
  1146  06A9  1003               	clrc
  1147  06AA  0CF3               	rrf	??_LCD2,f
  1148  06AB  3EFF               	addlw	-1
  1149  06AC  1D03               	skipz
  1150  06AD  2EA9               	goto	u55
  1151  06AE  0873               	movf	??_LCD2,w
  1152  06AF  00F4               	movwf	??_LCD2+1
  1153  06B0  0874               	movf	??_LCD2+1,w
  1154  06B1  00F6               	movwf	LCD2@letraenvio
  1155                           
  1156                           ;LCD.h: 203: invertir(letraenvio);
  1157  06B2  0876               	movf	LCD2@letraenvio,w
  1158  06B3  120A  118A  2617  120A  118A  	fcall	_invertir
  1159                           
  1160                           ;LCD.h: 204: envio();
  1161  06B8  120A  118A  255D  120A  118A  	fcall	_envio
  1162                           
  1163                           ;LCD.h: 205: letraenvio= *p2 & 0x0F;
  1164  06BD  0875               	movf	LCD2@p2,w
  1165  06BE  0084               	movwf	4
  1166  06BF  1383               	bcf	3,7	;select IRP bank0
  1167  06C0  0800               	movf	0,w
  1168  06C1  390F               	andlw	15
  1169  06C2  00F3               	movwf	??_LCD2
  1170  06C3  0873               	movf	??_LCD2,w
  1171  06C4  00F6               	movwf	LCD2@letraenvio
  1172                           
  1173                           ;LCD.h: 206: invertir(letraenvio);
  1174  06C5  0876               	movf	LCD2@letraenvio,w
  1175  06C6  120A  118A  2617  120A  118A  	fcall	_invertir
  1176                           
  1177                           ;LCD.h: 207: envio();
  1178  06CB  120A  118A  255D  120A  118A  	fcall	_envio
  1179                           
  1180                           ;LCD.h: 208: p2++;
  1181  06D0  3001               	movlw	1
  1182  06D1  00F3               	movwf	??_LCD2
  1183  06D2  0873               	movf	??_LCD2,w
  1184  06D3  07F5               	addwf	LCD2@p2,f
  1185  06D4  2E99               	goto	l796
  1186  06D5                     l798:	
  1187                           
  1188                           ;LCD.h: 209: }
  1189                           ;LCD.h: 210: subir();
  1190  06D5  120A  118A  25C3   	fcall	_subir
  1191  06D8  0008               	return
  1192  06D9                     __end_of_LCD2:	
  1193                           
  1194                           	psect	text4
  1195  05C3                     __ptext4:	
  1196 ;; *************** function _subir *****************
  1197 ;; Defined at:
  1198 ;;		line 157 in file "LCD.h"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          2       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_LCD2
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _subir
  1227  05C3                     _subir:	
  1228                           
  1229                           ;LCD.h: 159: PORTBbits.RB5=0;
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _subir: [wreg]
  1233  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1234  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1235  05C5  1286               	bcf	6,5	;volatile
  1236                           
  1237                           ;LCD.h: 160: PORTBbits.RB6=0;
  1238  05C6  1306               	bcf	6,6	;volatile
  1239                           
  1240                           ;LCD.h: 161: PORTBbits.RB0=1;
  1241  05C7  1406               	bsf	6,0	;volatile
  1242                           
  1243                           ;LCD.h: 162: PORTBbits.RB1=0;
  1244  05C8  1086               	bcf	6,1	;volatile
  1245                           
  1246                           ;LCD.h: 163: PORTBbits.RB2=0;
  1247  05C9  1106               	bcf	6,2	;volatile
  1248                           
  1249                           ;LCD.h: 164: PORTBbits.RB3=0;
  1250  05CA  1186               	bcf	6,3	;volatile
  1251                           
  1252                           ;LCD.h: 165: PORTBbits.RB4=1;
  1253  05CB  1606               	bsf	6,4	;volatile
  1254                           
  1255                           ;LCD.h: 166: _delay((unsigned long)((5)*(20000000/4000.0)));
  1256  05CC  3021               	movlw	33
  1257  05CD  00F1               	movwf	??_subir+1
  1258  05CE  3076               	movlw	118
  1259  05CF  00F0               	movwf	??_subir
  1260  05D0                     u277:	
  1261  05D0  0BF0               	decfsz	??_subir,f
  1262  05D1  2DD0               	goto	u277
  1263  05D2  0BF1               	decfsz	??_subir+1,f
  1264  05D3  2DD0               	goto	u277
  1265  05D4  0000               	nop
  1266                           
  1267                           ;LCD.h: 167: PORTBbits.RB4=0;
  1268  05D5  1283               	bcf	3,5	;RP0=0, select bank0
  1269  05D6  1303               	bcf	3,6	;RP1=0, select bank0
  1270  05D7  1206               	bcf	6,4	;volatile
  1271                           
  1272                           ;LCD.h: 168: PORTBbits.RB5=0;
  1273  05D8  1286               	bcf	6,5	;volatile
  1274                           
  1275                           ;LCD.h: 169: PORTBbits.RB6=0;
  1276  05D9  1306               	bcf	6,6	;volatile
  1277                           
  1278                           ;LCD.h: 170: PORTBbits.RB0=0;
  1279  05DA  1006               	bcf	6,0	;volatile
  1280                           
  1281                           ;LCD.h: 171: PORTBbits.RB1=0;
  1282  05DB  1086               	bcf	6,1	;volatile
  1283                           
  1284                           ;LCD.h: 172: PORTBbits.RB2=0;
  1285  05DC  1106               	bcf	6,2	;volatile
  1286                           
  1287                           ;LCD.h: 173: PORTBbits.RB3=0;
  1288  05DD  1186               	bcf	6,3	;volatile
  1289                           
  1290                           ;LCD.h: 174: PORTBbits.RB4=1;
  1291  05DE  1606               	bsf	6,4	;volatile
  1292                           
  1293                           ;LCD.h: 175: _delay((unsigned long)((5)*(20000000/4000.0)));
  1294  05DF  3021               	movlw	33
  1295  05E0  00F1               	movwf	??_subir+1
  1296  05E1  3076               	movlw	118
  1297  05E2  00F0               	movwf	??_subir
  1298  05E3                     u287:	
  1299  05E3  0BF0               	decfsz	??_subir,f
  1300  05E4  2DE3               	goto	u287
  1301  05E5  0BF1               	decfsz	??_subir+1,f
  1302  05E6  2DE3               	goto	u287
  1303  05E7  0000               	nop
  1304                           
  1305                           ;LCD.h: 176: PORTBbits.RB4=0;
  1306  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1307  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1308  05EA  1206               	bcf	6,4	;volatile
  1309  05EB  0008               	return
  1310  05EC                     __end_of_subir:	
  1311                           
  1312                           	psect	text5
  1313  059A                     __ptext5:	
  1314 ;; *************** function _bajar *****************
  1315 ;; Defined at:
  1316 ;;		line 135 in file "LCD.h"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1330 ;;      Params:         0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0
  1332 ;;      Temps:          2       0       0       0       0
  1333 ;;      Totals:         2       0       0       0       0
  1334 ;;Total ram usage:        2 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_LCD2
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _bajar
  1345  059A                     _bajar:	
  1346                           
  1347                           ;LCD.h: 137: PORTBbits.RB5=0;
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _bajar: [wreg]
  1351  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1352  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1353  059C  1286               	bcf	6,5	;volatile
  1354                           
  1355                           ;LCD.h: 138: PORTBbits.RB6=0;
  1356  059D  1306               	bcf	6,6	;volatile
  1357                           
  1358                           ;LCD.h: 139: PORTBbits.RB0=1;
  1359  059E  1406               	bsf	6,0	;volatile
  1360                           
  1361                           ;LCD.h: 140: PORTBbits.RB1=1;
  1362  059F  1486               	bsf	6,1	;volatile
  1363                           
  1364                           ;LCD.h: 141: PORTBbits.RB2=0;
  1365  05A0  1106               	bcf	6,2	;volatile
  1366                           
  1367                           ;LCD.h: 142: PORTBbits.RB3=0;
  1368  05A1  1186               	bcf	6,3	;volatile
  1369                           
  1370                           ;LCD.h: 143: PORTBbits.RB4=1;
  1371  05A2  1606               	bsf	6,4	;volatile
  1372                           
  1373                           ;LCD.h: 144: _delay((unsigned long)((5)*(20000000/4000.0)));
  1374  05A3  3021               	movlw	33
  1375  05A4  00F1               	movwf	??_bajar+1
  1376  05A5  3076               	movlw	118
  1377  05A6  00F0               	movwf	??_bajar
  1378  05A7                     u297:	
  1379  05A7  0BF0               	decfsz	??_bajar,f
  1380  05A8  2DA7               	goto	u297
  1381  05A9  0BF1               	decfsz	??_bajar+1,f
  1382  05AA  2DA7               	goto	u297
  1383  05AB  0000               	nop
  1384                           
  1385                           ;LCD.h: 145: PORTBbits.RB4=0;
  1386  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  1387  05AD  1303               	bcf	3,6	;RP1=0, select bank0
  1388  05AE  1206               	bcf	6,4	;volatile
  1389                           
  1390                           ;LCD.h: 146: PORTBbits.RB5=0;
  1391  05AF  1286               	bcf	6,5	;volatile
  1392                           
  1393                           ;LCD.h: 147: PORTBbits.RB6=0;
  1394  05B0  1306               	bcf	6,6	;volatile
  1395                           
  1396                           ;LCD.h: 148: PORTBbits.RB0=0;
  1397  05B1  1006               	bcf	6,0	;volatile
  1398                           
  1399                           ;LCD.h: 149: PORTBbits.RB1=0;
  1400  05B2  1086               	bcf	6,1	;volatile
  1401                           
  1402                           ;LCD.h: 150: PORTBbits.RB2=0;
  1403  05B3  1106               	bcf	6,2	;volatile
  1404                           
  1405                           ;LCD.h: 151: PORTBbits.RB3=0;
  1406  05B4  1186               	bcf	6,3	;volatile
  1407                           
  1408                           ;LCD.h: 152: PORTBbits.RB4=1;
  1409  05B5  1606               	bsf	6,4	;volatile
  1410                           
  1411                           ;LCD.h: 153: _delay((unsigned long)((5)*(20000000/4000.0)));
  1412  05B6  3021               	movlw	33
  1413  05B7  00F1               	movwf	??_bajar+1
  1414  05B8  3076               	movlw	118
  1415  05B9  00F0               	movwf	??_bajar
  1416  05BA                     u307:	
  1417  05BA  0BF0               	decfsz	??_bajar,f
  1418  05BB  2DBA               	goto	u307
  1419  05BC  0BF1               	decfsz	??_bajar+1,f
  1420  05BD  2DBA               	goto	u307
  1421  05BE  0000               	nop
  1422                           
  1423                           ;LCD.h: 154: PORTBbits.RB4=0;
  1424  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1425  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1426  05C1  1206               	bcf	6,4	;volatile
  1427  05C2  0008               	return
  1428  05C3                     __end_of_bajar:	
  1429                           
  1430                           	psect	text6
  1431  0654                     __ptext6:	
  1432 ;; *************** function _LCD *****************
  1433 ;; Defined at:
  1434 ;;		line 179 in file "LCD.h"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  p1              1    wreg     PTR unsigned char 
  1437 ;;		 -> texto1(16), 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  p1              1    5[COMMON] PTR unsigned char 
  1440 ;;		 -> texto1(16), 
  1441 ;;  letraenvio      1    6[COMMON] unsigned char 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         2       0       0       0       0
  1453 ;;      Temps:          2       0       0       0       0
  1454 ;;      Totals:         4       0       0       0       0
  1455 ;;Total ram usage:        4 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    1
  1458 ;; This function calls:
  1459 ;;		_envio
  1460 ;;		_invertir
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _LCD
  1468  0654                     _LCD:	
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1472                           ;LCD@p1 stored from wreg
  1473  0654  00F5               	movwf	LCD@p1
  1474                           
  1475                           ;LCD.h: 181: unsigned char letraenvio=0;
  1476  0655  01F6               	clrf	LCD@letraenvio
  1477  0656                     l774:	
  1478                           ;LCD.h: 182: while(*p1!=0)
  1479                           
  1480  0656  0875               	movf	LCD@p1,w
  1481  0657  0084               	movwf	4
  1482  0658  1383               	bcf	3,7	;select IRP bank0
  1483  0659  0800               	movf	0,w
  1484  065A  1903               	btfsc	3,2
  1485  065B  0008               	return
  1486                           
  1487                           ;LCD.h: 183: {
  1488                           ;LCD.h: 184: letraenvio = *p1;
  1489  065C  0875               	movf	LCD@p1,w
  1490  065D  0084               	movwf	4
  1491  065E  1383               	bcf	3,7	;select IRP bank0
  1492  065F  0800               	movf	0,w
  1493  0660  00F3               	movwf	??_LCD
  1494  0661  0873               	movf	??_LCD,w
  1495  0662  00F6               	movwf	LCD@letraenvio
  1496                           
  1497                           ;LCD.h: 185: letraenvio= letraenvio>>4;
  1498  0663  0876               	movf	LCD@letraenvio,w
  1499  0664  00F3               	movwf	??_LCD
  1500  0665  3004               	movlw	4
  1501  0666                     u35:	
  1502  0666  1003               	clrc
  1503  0667  0CF3               	rrf	??_LCD,f
  1504  0668  3EFF               	addlw	-1
  1505  0669  1D03               	skipz
  1506  066A  2E66               	goto	u35
  1507  066B  0873               	movf	??_LCD,w
  1508  066C  00F4               	movwf	??_LCD+1
  1509  066D  0874               	movf	??_LCD+1,w
  1510  066E  00F6               	movwf	LCD@letraenvio
  1511                           
  1512                           ;LCD.h: 186: invertir(letraenvio);
  1513  066F  0876               	movf	LCD@letraenvio,w
  1514  0670  120A  118A  2617  120A  118A  	fcall	_invertir
  1515                           
  1516                           ;LCD.h: 187: envio();
  1517  0675  120A  118A  255D  120A  118A  	fcall	_envio
  1518                           
  1519                           ;LCD.h: 188: letraenvio=*p1 & 0x0F;
  1520  067A  0875               	movf	LCD@p1,w
  1521  067B  0084               	movwf	4
  1522  067C  1383               	bcf	3,7	;select IRP bank0
  1523  067D  0800               	movf	0,w
  1524  067E  390F               	andlw	15
  1525  067F  00F3               	movwf	??_LCD
  1526  0680  0873               	movf	??_LCD,w
  1527  0681  00F6               	movwf	LCD@letraenvio
  1528                           
  1529                           ;LCD.h: 189: invertir(letraenvio);
  1530  0682  0876               	movf	LCD@letraenvio,w
  1531  0683  120A  118A  2617  120A  118A  	fcall	_invertir
  1532                           
  1533                           ;LCD.h: 190: envio();
  1534  0688  120A  118A  255D  120A  118A  	fcall	_envio
  1535                           
  1536                           ;LCD.h: 191: p1++;
  1537  068D  3001               	movlw	1
  1538  068E  00F3               	movwf	??_LCD
  1539  068F  0873               	movf	??_LCD,w
  1540  0690  07F5               	addwf	LCD@p1,f
  1541  0691  2E56               	goto	l774
  1542  0692                     __end_of_LCD:	
  1543                           
  1544                           	psect	text7
  1545  0617                     __ptext7:	
  1546 ;; *************** function _invertir *****************
  1547 ;; Defined at:
  1548 ;;		line 9 in file "LCD.h"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  entrada         1    wreg     unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  entrada         1    2[COMMON] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0
  1565 ;;      Totals:         3       0       0       0       0
  1566 ;;Total ram usage:        3 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_LCD
  1572 ;;		_LCD2
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _invertir
  1578  0617                     _invertir:	
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _invertir: [wreg+status,2+status,0]
  1582                           ;invertir@entrada stored from wreg
  1583  0617  00F2               	movwf	invertir@entrada
  1584                           
  1585                           ;LCD.h: 11: PORTBbits.RB3= entrada & 0b00000001;
  1586  0618  0872               	movf	invertir@entrada,w
  1587  0619  3901               	andlw	1
  1588  061A  00F0               	movwf	??_invertir
  1589  061B  0DF0               	rlf	??_invertir,f
  1590  061C  0DF0               	rlf	??_invertir,f
  1591  061D  0DF0               	rlf	??_invertir,f
  1592  061E  1283               	bcf	3,5	;RP0=0, select bank0
  1593  061F  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0620  0806               	movf	6,w	;volatile
  1595  0621  0670               	xorwf	??_invertir,w
  1596  0622  39F7               	andlw	-9
  1597  0623  0670               	xorwf	??_invertir,w
  1598  0624  0086               	movwf	6	;volatile
  1599                           
  1600                           ;LCD.h: 12: PORTBbits.RB2= (entrada & 0b00000010)>>1;
  1601  0625  0872               	movf	invertir@entrada,w
  1602  0626  00F0               	movwf	??_invertir
  1603  0627  1003               	clrc
  1604  0628  0C70               	rrf	??_invertir,w
  1605  0629  3901               	andlw	1
  1606  062A  00F1               	movwf	??_invertir+1
  1607  062B  0DF1               	rlf	??_invertir+1,f
  1608  062C  0DF1               	rlf	??_invertir+1,f
  1609  062D  0806               	movf	6,w	;volatile
  1610  062E  0671               	xorwf	??_invertir+1,w
  1611  062F  39FB               	andlw	-5
  1612  0630  0671               	xorwf	??_invertir+1,w
  1613  0631  0086               	movwf	6	;volatile
  1614                           
  1615                           ;LCD.h: 13: PORTBbits.RB1= (entrada & 0b00000100)>>2;
  1616  0632  0872               	movf	invertir@entrada,w
  1617  0633  00F0               	movwf	??_invertir
  1618  0634  3002               	movlw	2
  1619  0635                     u15:	
  1620  0635  1003               	clrc
  1621  0636  0CF0               	rrf	??_invertir,f
  1622  0637  3EFF               	addlw	-1
  1623  0638  1D03               	skipz
  1624  0639  2E35               	goto	u15
  1625  063A  0870               	movf	??_invertir,w
  1626  063B  3901               	andlw	1
  1627  063C  00F1               	movwf	??_invertir+1
  1628  063D  0DF1               	rlf	??_invertir+1,f
  1629  063E  0806               	movf	6,w	;volatile
  1630  063F  0671               	xorwf	??_invertir+1,w
  1631  0640  39FD               	andlw	-3
  1632  0641  0671               	xorwf	??_invertir+1,w
  1633  0642  0086               	movwf	6	;volatile
  1634                           
  1635                           ;LCD.h: 14: PORTBbits.RB0= (entrada & 0b00001000)>>3;
  1636  0643  0872               	movf	invertir@entrada,w
  1637  0644  00F0               	movwf	??_invertir
  1638  0645  3003               	movlw	3
  1639  0646                     u25:	
  1640  0646  1003               	clrc
  1641  0647  0CF0               	rrf	??_invertir,f
  1642  0648  3EFF               	addlw	-1
  1643  0649  1D03               	skipz
  1644  064A  2E46               	goto	u25
  1645  064B  3001               	movlw	1
  1646  064C  0570               	andwf	??_invertir,w
  1647  064D  00F1               	movwf	??_invertir+1
  1648  064E  0806               	movf	6,w	;volatile
  1649  064F  0671               	xorwf	??_invertir+1,w
  1650  0650  39FE               	andlw	-2
  1651  0651  0671               	xorwf	??_invertir+1,w
  1652  0652  0086               	movwf	6	;volatile
  1653  0653  0008               	return
  1654  0654                     __end_of_invertir:	
  1655                           
  1656                           	psect	text8
  1657  055D                     __ptext8:	
  1658 ;; *************** function _envio *****************
  1659 ;; Defined at:
  1660 ;;		line 17 in file "LCD.h"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0
  1676 ;;      Temps:          2       0       0       0       0
  1677 ;;      Totals:         2       0       0       0       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_LCD
  1684 ;;		_LCD2
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function _envio
  1690  055D                     _envio:	
  1691                           
  1692                           ;LCD.h: 19: PORTBbits.RB6=1;
  1693                           
  1694                           ;incstack = 0
  1695                           ; Regs used in _envio: [wreg]
  1696  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1697  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1698  055F  1706               	bsf	6,6	;volatile
  1699                           
  1700                           ;LCD.h: 20: PORTBbits.RB5=0;
  1701  0560  1286               	bcf	6,5	;volatile
  1702                           
  1703                           ;LCD.h: 21: _delay((unsigned long)((1)*(20000000/4000.0)));
  1704  0561  3007               	movlw	7
  1705  0562  00F1               	movwf	??_envio+1
  1706  0563  307D               	movlw	125
  1707  0564  00F0               	movwf	??_envio
  1708  0565                     u317:	
  1709  0565  0BF0               	decfsz	??_envio,f
  1710  0566  2D65               	goto	u317
  1711  0567  0BF1               	decfsz	??_envio+1,f
  1712  0568  2D65               	goto	u317
  1713                           
  1714                           ;LCD.h: 22: PORTBbits.RB4=1;
  1715  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1716  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1717  056B  1606               	bsf	6,4	;volatile
  1718                           
  1719                           ;LCD.h: 23: _delay((unsigned long)((2)*(20000000/4000000.0)));
  1720  056C  3003               	movlw	3
  1721  056D  00F0               	movwf	??_envio
  1722  056E                     u327:	
  1723  056E  0BF0               	decfsz	??_envio,f
  1724  056F  2D6E               	goto	u327
  1725                           
  1726                           ;LCD.h: 24: PORTBbits.RB4=0;
  1727  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0572  1206               	bcf	6,4	;volatile
  1730  0573  0008               	return
  1731  0574                     __end_of_envio:	
  1732                           
  1733                           	psect	text9
  1734  0552                     __ptext9:	
  1735 ;; *************** function _InitES *****************
  1736 ;; Defined at:
  1737 ;;		line 37 in file "lab3ej1cheto.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;		None
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;		None
  1742 ;; Return value:  Size  Location     Type
  1743 ;;                  1    wreg      void 
  1744 ;; Registers used:
  1745 ;;		status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       0       0       0       0
  1752 ;;      Locals:         0       0       0       0       0
  1753 ;;      Temps:          0       0       0       0       0
  1754 ;;      Totals:         0       0       0       0       0
  1755 ;;Total ram usage:        0 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; This function calls:
  1758 ;;		Nothing
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _InitES
  1766  0552                     _InitES:	
  1767                           
  1768                           ;lab3ej1cheto.c: 39: ANSEL=0;
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _InitES: [status,2]
  1772  0552  1683               	bsf	3,5	;RP0=1, select bank3
  1773  0553  1703               	bsf	3,6	;RP1=1, select bank3
  1774  0554  0188               	clrf	8	;volatile
  1775                           
  1776                           ;lab3ej1cheto.c: 40: ANSELH=0;
  1777  0555  0189               	clrf	9	;volatile
  1778                           
  1779                           ;lab3ej1cheto.c: 41: TRISB=0b00000000;
  1780  0556  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0557  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0558  0186               	clrf	6	;volatile
  1783                           
  1784                           ;lab3ej1cheto.c: 42: PORTB=0;
  1785  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1786  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1787  055B  0186               	clrf	6	;volatile
  1788  055C  0008               	return
  1789  055D                     __end_of_InitES:	
  1790  007E                     btemp	set	126	;btemp
  1791  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[11]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> texto2(BANK0[16]), texto1(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    LCD2@p2	PTR unsigned char  size(1) Largest target is 16
		 -> texto2(BANK0[16]), 

    LCD@p1	PTR unsigned char  size(1) Largest target is 16
		 -> texto1(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_LCD
    _main->_LCD2
    _LCD2->_invertir
    _LCD->_invertir

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     633
                                              7 COMMON     1     1      0
                             _InitES
                                _LCD
                               _LCD2
                     _inicializacion
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17    16      1     279
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD2                                                 4     4      0     177
                                              3 COMMON     4     4      0
                              _bajar
                              _envio
                           _invertir
                              _subir
 ---------------------------------------------------------------------------------
 (2) _subir                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _bajar                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  4     4      0     177
                                              3 COMMON     4     4      0
                              _envio
                           _invertir
 ---------------------------------------------------------------------------------
 (2) _invertir                                             3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _envio                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitES                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitES
   _LCD
     _envio
     _invertir
   _LCD2
     _bajar
     _envio
     _invertir
     _subir
   _inicializacion
   _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 31 19:14:50 2018

                      pc 0002              __CFG_CP$OFF 0000                       l53 0616  
                     u15 0635                       u25 0646                       u35 0666  
                     u55 06A9                       u97 06DD                       fsr 0004  
                    l832 0579                      l834 0595                      l774 0656  
                    l796 0699                      l798 06D5                      _LCD 0654  
                    u107 06EE                      u117 06FA                      u207 078A  
                    u127 070C                      u217 0796                      u137 0718  
                    u307 05BA                      u227 07A8                      u147 072A  
                    u317 0565                      u237 07BB                      u157 0736  
                    u327 056E                      u247 07C7                      u167 0748  
                    u257 07D9                      u177 0759             __CFG_CPD$OFF 0000  
                    u267 07EC                      u187 0765                      u277 05D0  
                    u197 0777                      u287 05E3                      u297 05A7  
                    fsr0 0004                      indf 0000            LCD@letraenvio 0076  
           __CFG_IESO$ON 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   ?_LCD 0070          invertir@entrada 0072                     STR_1 0009  
                   STR_2 0018                     _LCD2 0692             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 05EC                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000            __CFG_MCLRE$ON 0000  
                  ??_LCD 0073                    LCD@p1 0075                    ?_LCD2 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _ANSEL 0188  
                  _PORTB 0006                    _TRISB 0086                    _bajar 059A  
                  _envio 055D                    _subir 05C3                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 059A  
           __end_of_LCD2 06D9          __initialization 07F5             __end_of_main 0617  
                 ??_LCD2 0073                   LCD2@p2 0075                   ??_main 0077  
                 ?_bajar 0070                   ?_envio 0070                   ?_subir 0070  
                 _ANSELH 0189  __size_of_inicializacion 011C           __CFG_PWRTE$OFF 0000  
                 _InitES 0552                   _texto1 0030                   _texto2 0020  
       __end_of_invertir 0654                ??_sprintf 0071  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_bajar 05C3            __end_of_envio 0574  
          __end_of_subir 05EC                  ??_bajar 0070                  ??_envio 0070  
                ??_subir 0070               __pbssBANK0 0020                  ?_InitES 0070  
             __pmaintext 05EC               __stringtab 0003           _inicializacion 06D9  
              ?_invertir 0070          __size_of_InitES 000B                  __ptext1 0574  
                __ptext2 06D9                  __ptext3 0692                  __ptext4 05C3  
                __ptext5 059A                  __ptext6 0654                  __ptext7 0617  
                __ptext8 055D                  __ptext9 0552             __size_of_LCD 003E  
                _sprintf 0574                  clrloop0 054B   __end_of_inicializacion 07F5  
   end_of_initialization 07FC               ??_invertir 0070                _PORTBbits 0006  
        ?_inicializacion 0070           __end_of_InitES 055D      start_initialization 07F5  
            __end_of_LCD 0692                 ??_InitES 0070                ___latbits 0002  
      __size_of_invertir 003D                __pstrings 0003           __size_of_bajar 0029  
               ?_sprintf 0070           __size_of_envio 0017           __size_of_subir 0029  
              clear_ram0 054A              __stringbase 0008         ??_inicializacion 0070  
     __end_of__stringtab 0009        __CFG_BOR4V$BOR40V 0000            __size_of_LCD2 0047  
       __size_of_sprintf 0026           LCD2@letraenvio 0076            __size_of_main 002B  
               _invertir 0617                sprintf@ap 0072                sprintf@sp 0074  
              stringcode 0003                 sprintf@c 0073                 sprintf@f 0070  
               stringdir 0003                 stringtab 0003  
