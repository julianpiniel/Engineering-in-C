

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 22 20:00:56 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 1.45
    40                           ; Generated 16/11/2017 GMT
    41                           ; 
    42                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151                           
   152                           	psect	idataCOMMON
   153  0003                     __pidataCOMMON:	
   154                           
   155                           ;initializer for _linea
   156  0003  3401               	retlw	1
   157                           
   158                           	psect	strings
   159  0724                     __pstrings:	
   160  0724                     stringtab:	
   161  0724                     __stringtab:	
   162  0724                     stringcode:	
   163                           ;	String table - string pointers are 1 byte each
   164                           
   165  0724                     stringdir:	
   166  0724  3007               	movlw	high stringdir
   167  0725  008A               	movwf	10
   168  0726  0804               	movf	4,w
   169  0727  0A84               	incf	4,f
   170  0728  0782               	addwf	2,f
   171  0729                     __stringbase:	
   172  0729  3400               	retlw	0
   173  072A                     __end_of__stringtab:	
   174  072A                     _dpowers:	
   175  072A  3401               	retlw	1
   176  072B  3400               	retlw	0
   177  072C  340A               	retlw	10
   178  072D  3400               	retlw	0
   179  072E  3464               	retlw	100
   180  072F  3400               	retlw	0
   181  0730  34E8               	retlw	232
   182  0731  3403               	retlw	3
   183  0732  3410               	retlw	16
   184  0733  3427               	retlw	39
   185  0734                     __end_of_dpowers:	
   186  000E                     _TMR1	set	14
   187  001E                     _ADRESH	set	30
   188  0018                     _RCSTAbits	set	24
   189  000B                     _INTCONbits	set	11
   190  0010                     _T1CONbits	set	16
   191  0010                     _T1CON	set	16
   192  0005                     _PORTA	set	5
   193  001F                     _ADCON0	set	31
   194  001F                     _ADCON0bits	set	31
   195  0019                     _TXREG	set	25
   196  000C                     _PIR1bits	set	12
   197  009E                     _ADRESL	set	158
   198  009A                     _SPBRGH	set	154
   199  0099                     _SPBRG	set	153
   200  008C                     _PIE1bits	set	140
   201  009F                     _ADCON1bits	set	159
   202  0085                     _TRISA	set	133
   203  0087                     _TRISCbits	set	135
   204  0086                     _TRISB	set	134
   205  0098                     _TXSTAbits	set	152
   206  0187                     _BAUDCTLbits	set	391
   207  0189                     _ANSELH	set	393
   208  0188                     _ANSEL	set	392
   209  0734                     STR_1:	
   210  0734  3420               	retlw	32	;' '
   211  0735  3447               	retlw	71	;'G'
   212  0736  3472               	retlw	114	;'r'
   213  0737  3475               	retlw	117	;'u'
   214  0738  3470               	retlw	112	;'p'
   215  0739  346F               	retlw	111	;'o'
   216  073A  3420               	retlw	32	;' '
   217  073B  3433               	retlw	51	;'3'
   218  073C  3420               	retlw	32	;' '
   219  073D  3453               	retlw	83	;'S'
   220  073E  3465               	retlw	101	;'e'
   221  073F  346E               	retlw	110	;'n'
   222  0740  3473               	retlw	115	;'s'
   223  0741  346F               	retlw	111	;'o'
   224  0742  3472               	retlw	114	;'r'
   225  0743  3420               	retlw	32	;' '
   226  0744  3464               	retlw	100	;'d'
   227  0745  3465               	retlw	101	;'e'
   228  0746  3420               	retlw	32	;' '
   229  0747  3454               	retlw	84	;'T'
   230  0748  3465               	retlw	101	;'e'
   231  0749  346D               	retlw	109	;'m'
   232  074A  3470               	retlw	112	;'p'
   233  074B  3465               	retlw	101	;'e'
   234  074C  3472               	retlw	114	;'r'
   235  074D  3461               	retlw	97	;'a'
   236  074E  3474               	retlw	116	;'t'
   237  074F  3475               	retlw	117	;'u'
   238  0750  3472               	retlw	114	;'r'
   239  0751  3461               	retlw	97	;'a'
   240  0752  3420               	retlw	32	;' '
   241  0753  3443               	retlw	67	;'C'
   242  0754  3461               	retlw	97	;'a'
   243  0755  346E               	retlw	110	;'n'
   244  0756  3461               	retlw	97	;'a'
   245  0757  346C               	retlw	108	;'l'
   246  0758  3420               	retlw	32	;' '
   247  0759  3430               	retlw	48	;'0'
   248  075A  3420               	retlw	32	;' '
   249  075B  340D               	retlw	13
   250  075C  340A               	retlw	10
   251  075D  3400               	retlw	0
   252  075E                     STR_3:	
   253  075E  3425               	retlw	37	;'%'
   254  075F  3433               	retlw	51	;'3'
   255  0760  3469               	retlw	105	;'i'
   256  0761  342C               	retlw	44	;','
   257  0762  3425               	retlw	37	;'%'
   258  0763  3431               	retlw	49	;'1'
   259  0764  3469               	retlw	105	;'i'
   260  0765  3425               	retlw	37	;'%'
   261  0766  3431               	retlw	49	;'1'
   262  0767  3469               	retlw	105	;'i'
   263  0768  3420               	retlw	32	;' '
   264  0769  3420               	retlw	32	;' '
   265  076A  3420               	retlw	32	;' '
   266  076B  3420               	retlw	32	;' '
   267  076C  3420               	retlw	32	;' '
   268  076D  3420               	retlw	32	;' '
   269  076E  3420               	retlw	32	;' '
   270  076F  3420               	retlw	32	;' '
   271  0770  3400               	retlw	0
   272  0771                     STR_2:	
   273  0771  3446               	retlw	70	;'F'
   274  0772  3455               	retlw	85	;'U'
   275  0773  3445               	retlw	69	;'E'
   276  0774  3452               	retlw	82	;'R'
   277  0775  3441               	retlw	65	;'A'
   278  0776  3420               	retlw	32	;' '
   279  0777  3444               	retlw	68	;'D'
   280  0778  3445               	retlw	69	;'E'
   281  0779  3420               	retlw	32	;' '
   282  077A  3452               	retlw	82	;'R'
   283  077B  3441               	retlw	65	;'A'
   284  077C  344E               	retlw	78	;'N'
   285  077D  3447               	retlw	71	;'G'
   286  077E  344F               	retlw	79	;'O'
   287  077F  3400               	retlw	0
   288                           
   289                           ; #config settings
   290  0000                     
   291                           	psect	cinit
   292  0015                     start_initialization:	
   293  0015                     __initialization:	
   294                           
   295                           ; Initialize objects allocated to COMMON
   296  0015  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   297  001A  00F9               	movwf	__pdataCOMMON& (0+127)
   298                           
   299                           ; Clear objects allocated to BANK1
   300  001B  1383               	bcf	3,7	;select IRP bank0
   301  001C  30A0               	movlw	low __pbssBANK1
   302  001D  0084               	movwf	4
   303  001E  30ED               	movlw	low (__pbssBANK1+77)
   304  001F  120A  158A  26C6  120A  118A  	fcall	clear_ram0
   305                           
   306                           ; Clear objects allocated to BANK0
   307  0024  3062               	movlw	low __pbssBANK0
   308  0025  0084               	movwf	4
   309  0026  306F               	movlw	low (__pbssBANK0+13)
   310  0027  120A  158A  26C6   	fcall	clear_ram0
   311                           
   312                           ; Clear objects allocated to COMMON
   313  002A  01F5               	clrf	__pbssCOMMON& (0+127)
   314  002B  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   315  002C  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   316  002D  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   317  002E                     end_of_initialization:	
   318                           ;End of C runtime variable initialization code
   319                           
   320  002E                     __end_of__initialization:	
   321  002E  0183               	clrf	3
   322  002F  120A  118A  2BEE   	ljmp	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMMON
   325  0075                     __pbssCOMMON:	
   326  0075                     _valor1:	
   327  0075                     	ds	2
   328  0077                     _dato:	
   329  0077                     	ds	1
   330  0078                     _Contador:	
   331  0078                     	ds	1
   332                           
   333                           	psect	dataCOMMON
   334  0079                     __pdataCOMMON:	
   335  0079                     _linea:	
   336  0079                     	ds	1
   337                           
   338                           	psect	bssBANK0
   339  0062                     __pbssBANK0:	
   340  0062                     _temp:	
   341  0062                     	ds	3
   342  0065                     _centemp:	
   343  0065                     	ds	2
   344  0067                     _dectemp:	
   345  0067                     	ds	2
   346  0069                     _unitemp:	
   347  0069                     	ds	2
   348  006B                     _banderaadquirido:	
   349  006B                     	ds	1
   350  006C                     _Banderaconv:	
   351  006C                     	ds	1
   352  006D                     _adc:	
   353  006D                     	ds	2
   354                           
   355                           	psect	bssBANK1
   356  00A0                     __pbssBANK1:	
   357  00A0                     _valor2:	
   358  00A0                     	ds	2
   359  00A2                     _escritura:	
   360  00A2                     	ds	40
   361  00CA                     _valormedido:	
   362  00CA                     	ds	35
   363                           
   364                           	psect	clrtext
   365  0EC6                     clear_ram0:	
   366                           ;	Called with FSR containing the base address, and
   367                           ;	W with the last address+1
   368                           
   369  0EC6  0064               	clrwdt	;clear the watchdog before getting into this loop
   370  0EC7                     clrloop0:	
   371  0EC7  0180               	clrf	0	;clear RAM location pointed to by FSR
   372  0EC8  0A84               	incf	4,f	;increment pointer
   373  0EC9  0604               	xorwf	4,w	;XOR with final address
   374  0ECA  1903               	btfsc	3,2	;have we reached the end yet?
   375  0ECB  3400               	retlw	0	;all done for this memory range, return
   376  0ECC  0604               	xorwf	4,w	;XOR again to restore value
   377  0ECD  2EC7               	goto	clrloop0	;do the next byte
   378                           
   379                           	psect	cstackBANK3
   380  0190                     __pcstackBANK3:	
   381  0190                     main@i:	
   382                           
   383                           ; 2 bytes @ 0x0
   384  0190                     	ds	2
   385                           
   386                           	psect	cstackBANK1
   387  00ED                     __pcstackBANK1:	
   388  00ED                     ??_main:	
   389                           
   390                           ; 1 bytes @ 0x0
   391  00ED                     	ds	2
   392                           
   393                           	psect	cstackCOMMON
   394  0070                     __pcstackCOMMON:	
   395  0070                     ?_isdigit:	
   396  0070                     ?_InitES:	
   397                           ; 1 bit 
   398                           
   399  0070                     ?_InitTMR1:	
   400                           ; 1 bytes @ 0x0
   401                           
   402  0070                     ?_InitUSART:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_correccion:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_Adquisicion:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_rutinainterrupciones:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ??_rutinainterrupciones:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_main:	
   418                           ; 1 bytes @ 0x0
   419                           
   420                           
   421                           ; 1 bytes @ 0x0
   422  0070                     	ds	5
   423                           
   424                           	psect	cstackBANK0
   425  0020                     __pcstackBANK0:	
   426  0020                     ?___ftge:	
   427  0020                     ??_InitES:	
   428                           ; 1 bit 
   429                           
   430  0020                     ??_InitTMR1:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0020                     ??_InitUSART:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0020                     ??_correccion:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0020                     ??_isdigit:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     ?___wmul:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     ?___awdiv:	
   446                           ; 2 bytes @ 0x0
   447                           
   448  0020                     ?___lwdiv:	
   449                           ; 2 bytes @ 0x0
   450                           
   451  0020                     ?___ftpack:	
   452                           ; 2 bytes @ 0x0
   453                           
   454  0020                     _isdigit$681:	
   455                           ; 3 bytes @ 0x0
   456                           
   457  0020                     correccion@i:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0020                     ___wmul@multiplier:	
   461                           ; 2 bytes @ 0x0
   462                           
   463  0020                     ___awdiv@divisor:	
   464                           ; 2 bytes @ 0x0
   465                           
   466  0020                     ___lwdiv@divisor:	
   467                           ; 2 bytes @ 0x0
   468                           
   469  0020                     ___ftpack@arg:	
   470                           ; 2 bytes @ 0x0
   471                           
   472  0020                     ___ftge@ff1:	
   473                           ; 3 bytes @ 0x0
   474                           
   475                           
   476                           ; 3 bytes @ 0x0
   477  0020                     	ds	1
   478  0021                     isdigit@c:	
   479                           
   480                           ; 1 bytes @ 0x1
   481  0021                     	ds	1
   482  0022                     ___wmul@multiplicand:	
   483  0022                     ___awdiv@dividend:	
   484                           ; 2 bytes @ 0x2
   485                           
   486  0022                     ___lwdiv@dividend:	
   487                           ; 2 bytes @ 0x2
   488                           
   489                           
   490                           ; 2 bytes @ 0x2
   491  0022                     	ds	1
   492  0023                     ___ftpack@exp:	
   493  0023                     ___ftge@ff2:	
   494                           ; 1 bytes @ 0x3
   495                           
   496                           
   497                           ; 3 bytes @ 0x3
   498  0023                     	ds	1
   499  0024                     ??___wmul:	
   500  0024                     ??___awdiv:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0024                     ??___lwdiv:	
   504                           ; 1 bytes @ 0x4
   505                           
   506  0024                     ___ftpack@sign:	
   507                           ; 1 bytes @ 0x4
   508                           
   509  0024                     ___wmul@product:	
   510                           ; 1 bytes @ 0x4
   511                           
   512                           
   513                           ; 2 bytes @ 0x4
   514  0024                     	ds	1
   515  0025                     ??___ftpack:	
   516  0025                     ___awdiv@counter:	
   517                           ; 1 bytes @ 0x5
   518                           
   519  0025                     ___lwdiv@counter:	
   520                           ; 1 bytes @ 0x5
   521                           
   522                           
   523                           ; 1 bytes @ 0x5
   524  0025                     	ds	1
   525  0026                     ??___ftge:	
   526  0026                     ___awdiv@sign:	
   527                           ; 1 bytes @ 0x6
   528                           
   529  0026                     ___lwdiv@quotient:	
   530                           ; 1 bytes @ 0x6
   531                           
   532                           
   533                           ; 2 bytes @ 0x6
   534  0026                     	ds	1
   535  0027                     ___awdiv@quotient:	
   536                           
   537                           ; 2 bytes @ 0x7
   538  0027                     	ds	1
   539  0028                     ?___lwmod:	
   540  0028                     ___lwmod@divisor:	
   541                           ; 2 bytes @ 0x8
   542                           
   543                           
   544                           ; 2 bytes @ 0x8
   545  0028                     	ds	1
   546  0029                     ?___awtoft:	
   547  0029                     ___awtoft@c:	
   548                           ; 3 bytes @ 0x9
   549                           
   550                           
   551                           ; 2 bytes @ 0x9
   552  0029                     	ds	1
   553  002A                     ___lwmod@dividend:	
   554                           
   555                           ; 2 bytes @ 0xA
   556  002A                     	ds	2
   557  002C                     ??___awtoft:	
   558  002C                     ??___lwmod:	
   559                           ; 1 bytes @ 0xC
   560                           
   561                           
   562                           ; 1 bytes @ 0xC
   563  002C                     	ds	1
   564  002D                     ___lwmod@counter:	
   565                           
   566                           ; 1 bytes @ 0xD
   567  002D                     	ds	1
   568  002E                     ?_sprintf:	
   569  002E                     sprintf@f:	
   570                           ; 2 bytes @ 0xE
   571                           
   572  002E                     ___awtoft@sign:	
   573                           ; 1 bytes @ 0xE
   574                           
   575                           
   576                           ; 1 bytes @ 0xE
   577  002E                     	ds	1
   578  002F                     ?___ftneg:	
   579  002F                     ___ftneg@f1:	
   580                           ; 3 bytes @ 0xF
   581                           
   582                           
   583                           ; 3 bytes @ 0xF
   584  002F                     	ds	3
   585  0032                     ??___ftneg:	
   586  0032                     ?___ftmul:	
   587                           ; 1 bytes @ 0x12
   588                           
   589  0032                     ___ftmul@f1:	
   590                           ; 3 bytes @ 0x12
   591                           
   592                           
   593                           ; 3 bytes @ 0x12
   594  0032                     	ds	3
   595  0035                     ??_sprintf:	
   596  0035                     ___ftmul@f2:	
   597                           ; 1 bytes @ 0x15
   598                           
   599                           
   600                           ; 3 bytes @ 0x15
   601  0035                     	ds	3
   602  0038                     ??___ftmul:	
   603  0038                     sprintf@ap:	
   604                           ; 1 bytes @ 0x18
   605                           
   606                           
   607                           ; 1 bytes @ 0x18
   608  0038                     	ds	1
   609  0039                     sprintf@prec:	
   610                           
   611                           ; 1 bytes @ 0x19
   612  0039                     	ds	1
   613  003A                     sprintf@flag:	
   614                           
   615                           ; 1 bytes @ 0x1A
   616  003A                     	ds	1
   617  003B                     sprintf@val:	
   618                           
   619                           ; 2 bytes @ 0x1B
   620  003B                     	ds	1
   621  003C                     ___ftmul@exp:	
   622                           
   623                           ; 1 bytes @ 0x1C
   624  003C                     	ds	1
   625  003D                     sprintf@width:	
   626  003D                     ___ftmul@f3_as_product:	
   627                           ; 2 bytes @ 0x1D
   628                           
   629                           
   630                           ; 3 bytes @ 0x1D
   631  003D                     	ds	2
   632  003F                     sprintf@sp:	
   633                           
   634                           ; 1 bytes @ 0x1F
   635  003F                     	ds	1
   636  0040                     sprintf@c:	
   637  0040                     ___ftmul@cntr:	
   638                           ; 1 bytes @ 0x20
   639                           
   640                           
   641                           ; 1 bytes @ 0x20
   642  0040                     	ds	1
   643  0041                     ___ftmul@sign:	
   644                           
   645                           ; 1 bytes @ 0x21
   646  0041                     	ds	1
   647  0042                     ?___ftadd:	
   648  0042                     ___ftadd@f1:	
   649                           ; 3 bytes @ 0x22
   650                           
   651                           
   652                           ; 3 bytes @ 0x22
   653  0042                     	ds	3
   654  0045                     ___ftadd@f2:	
   655                           
   656                           ; 3 bytes @ 0x25
   657  0045                     	ds	3
   658  0048                     ??___ftadd:	
   659                           
   660                           ; 1 bytes @ 0x28
   661  0048                     	ds	4
   662  004C                     ___ftadd@sign:	
   663                           
   664                           ; 1 bytes @ 0x2C
   665  004C                     	ds	1
   666  004D                     ___ftadd@exp2:	
   667                           
   668                           ; 1 bytes @ 0x2D
   669  004D                     	ds	1
   670  004E                     ___ftadd@exp1:	
   671                           
   672                           ; 1 bytes @ 0x2E
   673  004E                     	ds	1
   674  004F                     ?___fttol:	
   675  004F                     ___fttol@f1:	
   676                           ; 4 bytes @ 0x2F
   677                           
   678                           
   679                           ; 3 bytes @ 0x2F
   680  004F                     	ds	4
   681  0053                     ??___fttol:	
   682                           
   683                           ; 1 bytes @ 0x33
   684  0053                     	ds	4
   685  0057                     ___fttol@sign1:	
   686                           
   687                           ; 1 bytes @ 0x37
   688  0057                     	ds	1
   689  0058                     ___fttol@lval:	
   690                           
   691                           ; 4 bytes @ 0x38
   692  0058                     	ds	4
   693  005C                     ___fttol@exp1:	
   694                           
   695                           ; 1 bytes @ 0x3C
   696  005C                     	ds	1
   697  005D                     ??_Adquisicion:	
   698                           
   699                           ; 1 bytes @ 0x3D
   700  005D                     	ds	2
   701  005F                     _Adquisicion$882:	
   702                           
   703                           ; 3 bytes @ 0x3F
   704  005F                     	ds	3
   705                           
   706                           	psect	maintext
   707  03EE                     __pmaintext:	
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 62 in file "lab5ej2.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  i               2    0[BANK3 ] unsigned int 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : B00/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   727 ;;      Params:         0       0       0       0       0
   728 ;;      Locals:         0       0       0       2       0
   729 ;;      Temps:          0       0       2       0       0
   730 ;;      Totals:         0       0       2       2       0
   731 ;;Total ram usage:        4 bytes
   732 ;; Hardware stack levels required when called:    4
   733 ;; This function calls:
   734 ;;		_Adquisicion
   735 ;;		_InitES
   736 ;;		_InitTMR1
   737 ;;		_InitUSART
   738 ;;		___ftge
   739 ;;		_correccion
   740 ;;		_sprintf
   741 ;; This function is called by:
   742 ;;		Startup code after reset
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _main
   748  03EE                     _main:	
   749                           
   750                           ;lab5ej2.c: 64: InitES();
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   754  03EE  120A  158A  26FC  120A  118A  	fcall	_InitES
   755                           
   756                           ;lab5ej2.c: 65: InitTMR1();
   757  03F3  120A  158A  2711  120A  118A  	fcall	_InitTMR1
   758                           
   759                           ;lab5ej2.c: 66: InitUSART();
   760  03F8  120A  158A  26E8  120A  118A  	fcall	_InitUSART
   761                           
   762                           ;lab5ej2.c: 67: unsigned int i=0;
   763  03FD  1683               	bsf	3,5	;RP0=1, select bank3
   764  03FE  1703               	bsf	3,6	;RP1=1, select bank3
   765  03FF  0190               	clrf	main@i^(0+384)
   766  0400  0191               	clrf	(main@i+1)^(0+384)
   767                           
   768                           ;lab5ej2.c: 69: sprintf(escritura," Grupo 3 Sensor de Temperatura Canal 0 \r\n");
   769  0401  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   770  0402  1683               	bsf	3,5	;RP0=1, select bank1
   771  0403  1303               	bcf	3,6	;RP1=0, select bank1
   772  0404  00ED               	movwf	??_main^(0+128)
   773  0405  086D               	movf	??_main^(0+128),w
   774  0406  1283               	bcf	3,5	;RP0=0, select bank0
   775  0407  1303               	bcf	3,6	;RP1=0, select bank0
   776  0408  00AE               	movwf	sprintf@f
   777  0409  30A2               	movlw	(low (_escritura| 0))& (0+255)
   778  040A  120A  118A  2032  120A  118A  	fcall	_sprintf
   779                           
   780                           ;lab5ej2.c: 70: for(i=0;i<41;i++)
   781  040F  1683               	bsf	3,5	;RP0=1, select bank3
   782  0410  1703               	bsf	3,6	;RP1=1, select bank3
   783  0411  0190               	clrf	main@i^(0+384)
   784  0412  0191               	clrf	(main@i+1)^(0+384)
   785  0413  3000               	movlw	0
   786  0414  0211               	subwf	(main@i+1)^(0+384),w
   787  0415  3029               	movlw	41
   788  0416  1903               	skipnz
   789  0417  0210               	subwf	main@i^(0+384),w
   790  0418  1803               	btfsc	3,0
   791  0419  2C3D               	goto	l2401
   792  041A                     l2397:	
   793                           
   794                           ;lab5ej2.c: 71: {
   795                           ;lab5ej2.c: 72: TXREG=escritura[i];
   796  041A  0810               	movf	main@i^(0+384),w
   797  041B  3EA2               	addlw	(low (_escritura| 0))& (0+255)
   798  041C  0084               	movwf	4
   799  041D  1383               	bcf	3,7	;select IRP bank1
   800  041E  0800               	movf	0,w
   801  041F  1283               	bcf	3,5	;RP0=0, select bank0
   802  0420  1303               	bcf	3,6	;RP1=0, select bank0
   803  0421  0099               	movwf	25	;volatile
   804  0422                     l102:	
   805                           ;lab5ej2.c: 73: while(PIR1bits.TXIF==0);
   806                           
   807  0422  1E0C               	btfss	12,4	;volatile
   808  0423  2C22               	goto	l102
   809                           
   810                           ;lab5ej2.c: 74: _delay((unsigned long)((20)*(20000000/4000.0)));
   811  0424  3082               	movlw	130
   812  0425  1683               	bsf	3,5	;RP0=1, select bank1
   813  0426  1303               	bcf	3,6	;RP1=0, select bank1
   814  0427  00EE               	movwf	(??_main^(0+128)+1)
   815  0428  30DD               	movlw	221
   816  0429  00ED               	movwf	??_main^(0+128)
   817  042A                     u4047:	
   818  042A  0BED               	decfsz	??_main^(0+128),f
   819  042B  2C2A               	goto	u4047
   820  042C  0BEE               	decfsz	(??_main^(0+128)+1),f
   821  042D  2C2A               	goto	u4047
   822  042E  3001               	movlw	1
   823  042F  1683               	bsf	3,5	;RP0=1, select bank3
   824  0430  1703               	bsf	3,6	;RP1=1, select bank3
   825  0431  0790               	addwf	main@i^(0+384),f
   826  0432  1803               	skipnc
   827  0433  0A91               	incf	(main@i+1)^(0+384),f
   828  0434  3000               	movlw	0
   829  0435  0791               	addwf	(main@i+1)^(0+384),f
   830  0436  3000               	movlw	0
   831  0437  0211               	subwf	(main@i+1)^(0+384),w
   832  0438  3029               	movlw	41
   833  0439  1903               	skipnz
   834  043A  0210               	subwf	main@i^(0+384),w
   835  043B  1C03               	skipc
   836  043C  2C1A               	goto	l2397
   837  043D                     l2401:	
   838                           
   839                           ;lab5ej2.c: 76: }
   840                           ;lab5ej2.c: 77: TXREG=0X0D;
   841  043D  300D               	movlw	13
   842  043E  1283               	bcf	3,5	;RP0=0, select bank0
   843  043F  1303               	bcf	3,6	;RP1=0, select bank0
   844  0440  0099               	movwf	25	;volatile
   845  0441                     l105:	
   846                           ;lab5ej2.c: 78: while(PIR1bits.TXIF==0);
   847                           
   848  0441  1E0C               	btfss	12,4	;volatile
   849  0442  2C41               	goto	l105
   850                           
   851                           ;lab5ej2.c: 79: TXREG=0X0D;
   852  0443  300D               	movlw	13
   853  0444  0099               	movwf	25	;volatile
   854  0445                     l108:	
   855                           ;lab5ej2.c: 80: while(PIR1bits.TXIF==0);
   856                           
   857  0445  1E0C               	btfss	12,4	;volatile
   858  0446  2C45               	goto	l108
   859                           
   860                           ;lab5ej2.c: 81: TXREG=0X20;
   861  0447  3020               	movlw	32
   862  0448  0099               	movwf	25	;volatile
   863  0449                     l111:	
   864                           ;lab5ej2.c: 82: while(PIR1bits.TXIF==0);
   865                           
   866  0449  1E0C               	btfss	12,4	;volatile
   867  044A  2C49               	goto	l111
   868  044B                     l2407:	
   869                           ;lab5ej2.c: 84: while(1)
   870                           
   871                           
   872                           ;lab5ej2.c: 85: {
   873                           ;lab5ej2.c: 87: if(banderaadquirido==1)
   874  044B  1283               	bcf	3,5	;RP0=0, select bank0
   875  044C  1303               	bcf	3,6	;RP1=0, select bank0
   876  044D  036B               	decf	_banderaadquirido,w
   877  044E  1D03               	btfss	3,2
   878  044F  2CE9               	goto	l2441
   879                           
   880                           ;lab5ej2.c: 88: {
   881                           ;lab5ej2.c: 89: correccion();
   882  0450  120A  158A  2766  120A  118A  	fcall	_correccion
   883                           
   884                           ;lab5ej2.c: 90: if(temp<0)
   885  0455  1283               	bcf	3,5	;RP0=0, select bank0
   886  0456  1303               	bcf	3,6	;RP1=0, select bank0
   887  0457  0862               	movf	_temp,w
   888  0458  00A0               	movwf	___ftge@ff1
   889  0459  0863               	movf	_temp+1,w
   890  045A  00A1               	movwf	___ftge@ff1+1
   891  045B  0864               	movf	_temp+2,w
   892  045C  00A2               	movwf	___ftge@ff1+2
   893  045D  3000               	movlw	0
   894  045E  00A3               	movwf	___ftge@ff2
   895  045F  3000               	movlw	0
   896  0460  00A4               	movwf	___ftge@ff2+1
   897  0461  3000               	movlw	0
   898  0462  00A5               	movwf	___ftge@ff2+2
   899  0463  120A  118A  26C5  120A  118A  	fcall	___ftge
   900  0468  1803               	btfsc	3,0
   901  0469  2C9A               	goto	l2425
   902                           
   903                           ;lab5ej2.c: 91: {
   904                           ;lab5ej2.c: 92: sprintf(valormedido,"FUERA DE RANGO");
   905  046A  3048               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   906  046B  1683               	bsf	3,5	;RP0=1, select bank1
   907  046C  1303               	bcf	3,6	;RP1=0, select bank1
   908  046D  00ED               	movwf	??_main^(0+128)
   909  046E  086D               	movf	??_main^(0+128),w
   910  046F  1283               	bcf	3,5	;RP0=0, select bank0
   911  0470  1303               	bcf	3,6	;RP1=0, select bank0
   912  0471  00AE               	movwf	sprintf@f
   913  0472  30CA               	movlw	(low (_valormedido| 0))& (0+255)
   914  0473  120A  118A  2032  120A  118A  	fcall	_sprintf
   915                           
   916                           ;lab5ej2.c: 93: for(i=0;i<14;i++)
   917  0478  1683               	bsf	3,5	;RP0=1, select bank3
   918  0479  1703               	bsf	3,6	;RP1=1, select bank3
   919  047A  0190               	clrf	main@i^(0+384)
   920  047B  0191               	clrf	(main@i+1)^(0+384)
   921  047C                     L1:	
   922  047C  3000               	movlw	0
   923  047D  0211               	subwf	(main@i+1)^(0+384),w
   924  047E  300E               	movlw	14
   925  047F  1903               	skipnz
   926  0480  0210               	subwf	main@i^(0+384),w
   927  0481  1803               	btfsc	3,0
   928  0482  2CE2               	goto	l2437
   929                           
   930                           ;lab5ej2.c: 94: {
   931                           ;lab5ej2.c: 95: TXREG=valormedido[i];
   932  0483  0810               	movf	main@i^(0+384),w
   933  0484  3ECA               	addlw	(low (_valormedido| 0))& (0+255)
   934  0485  0084               	movwf	4
   935  0486  1383               	bcf	3,7	;select IRP bank1
   936  0487  0800               	movf	0,w
   937  0488  1283               	bcf	3,5	;RP0=0, select bank0
   938  0489  1303               	bcf	3,6	;RP1=0, select bank0
   939  048A  0099               	movwf	25	;volatile
   940  048B                     l119:	
   941                           ;lab5ej2.c: 96: while(PIR1bits.TXIF==0);
   942                           
   943  048B  1E0C               	btfss	12,4	;volatile
   944  048C  2C8B               	goto	l119
   945  048D                     l122:	
   946                           ;lab5ej2.c: 97: while(TXSTAbits.TRMT==0);
   947                           
   948  048D  1683               	bsf	3,5	;RP0=1, select bank1
   949  048E  1303               	bcf	3,6	;RP1=0, select bank1
   950  048F  1C98               	btfss	24,1	;volatile
   951  0490  2C8D               	goto	l122
   952  0491  3001               	movlw	1
   953  0492  1683               	bsf	3,5	;RP0=1, select bank3
   954  0493  1703               	bsf	3,6	;RP1=1, select bank3
   955  0494  0790               	addwf	main@i^(0+384),f
   956  0495  1803               	skipnc
   957  0496  0A91               	incf	(main@i+1)^(0+384),f
   958  0497  3000               	movlw	0
   959  0498  0791               	addwf	(main@i+1)^(0+384),f
   960  0499  2C7C               	goto	L1
   961  049A                     l2425:	
   962                           ;lab5ej2.c: 99: }
   963                           ;lab5ej2.c: 101: }
   964                           
   965                           
   966                           ;lab5ej2.c: 102: else
   967                           ;lab5ej2.c: 103: {
   968                           ;lab5ej2.c: 104: sprintf(valormedido, "%3i,%1i%1i        ",unitemp,dectemp,centemp);
   969  049A  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   970  049B  1683               	bsf	3,5	;RP0=1, select bank1
   971  049C  1303               	bcf	3,6	;RP1=0, select bank1
   972  049D  00ED               	movwf	??_main^(0+128)
   973  049E  086D               	movf	??_main^(0+128),w
   974  049F  1283               	bcf	3,5	;RP0=0, select bank0
   975  04A0  1303               	bcf	3,6	;RP1=0, select bank0
   976  04A1  00AE               	movwf	sprintf@f
   977  04A2  086A               	movf	_unitemp+1,w
   978  04A3  00B0               	movwf	?_sprintf+2
   979  04A4  0869               	movf	_unitemp,w
   980  04A5  00AF               	movwf	?_sprintf+1
   981  04A6  0868               	movf	_dectemp+1,w
   982  04A7  00B2               	movwf	?_sprintf+4
   983  04A8  0867               	movf	_dectemp,w
   984  04A9  00B1               	movwf	?_sprintf+3
   985  04AA  0866               	movf	_centemp+1,w
   986  04AB  00B4               	movwf	?_sprintf+6
   987  04AC  0865               	movf	_centemp,w
   988  04AD  00B3               	movwf	?_sprintf+5
   989  04AE  30CA               	movlw	(low (_valormedido| 0))& (0+255)
   990  04AF  120A  118A  2032  120A  118A  	fcall	_sprintf
   991                           
   992                           ;lab5ej2.c: 105: for(i=0;i<14;i++)
   993  04B4  1683               	bsf	3,5	;RP0=1, select bank3
   994  04B5  1703               	bsf	3,6	;RP1=1, select bank3
   995  04B6  0190               	clrf	main@i^(0+384)
   996  04B7  0191               	clrf	(main@i+1)^(0+384)
   997  04B8  3000               	movlw	0
   998  04B9  0211               	subwf	(main@i+1)^(0+384),w
   999  04BA  300E               	movlw	14
  1000  04BB  1903               	skipnz
  1001  04BC  0210               	subwf	main@i^(0+384),w
  1002  04BD  1803               	btfsc	3,0
  1003  04BE  2CE2               	goto	l2437
  1004  04BF                     l2433:	
  1005                           
  1006                           ;lab5ej2.c: 106: {
  1007                           ;lab5ej2.c: 107: TXREG=valormedido[i];
  1008  04BF  0810               	movf	main@i^(0+384),w
  1009  04C0  3ECA               	addlw	(low (_valormedido| 0))& (0+255)
  1010  04C1  0084               	movwf	4
  1011  04C2  1383               	bcf	3,7	;select IRP bank1
  1012  04C3  0800               	movf	0,w
  1013  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1014  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1015  04C6  0099               	movwf	25	;volatile
  1016  04C7                     l128:	
  1017                           ;lab5ej2.c: 108: while(PIR1bits.TXIF==0);
  1018                           
  1019  04C7  1E0C               	btfss	12,4	;volatile
  1020  04C8  2CC7               	goto	l128
  1021                           
  1022                           ;lab5ej2.c: 109: _delay((unsigned long)((20)*(20000000/4000.0)));
  1023  04C9  3082               	movlw	130
  1024  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  1025  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  1026  04CC  00EE               	movwf	(??_main^(0+128)+1)
  1027  04CD  30DD               	movlw	221
  1028  04CE  00ED               	movwf	??_main^(0+128)
  1029  04CF                     u4057:	
  1030  04CF  0BED               	decfsz	??_main^(0+128),f
  1031  04D0  2CCF               	goto	u4057
  1032  04D1  0BEE               	decfsz	(??_main^(0+128)+1),f
  1033  04D2  2CCF               	goto	u4057
  1034  04D3  3001               	movlw	1
  1035  04D4  1683               	bsf	3,5	;RP0=1, select bank3
  1036  04D5  1703               	bsf	3,6	;RP1=1, select bank3
  1037  04D6  0790               	addwf	main@i^(0+384),f
  1038  04D7  1803               	skipnc
  1039  04D8  0A91               	incf	(main@i+1)^(0+384),f
  1040  04D9  3000               	movlw	0
  1041  04DA  0791               	addwf	(main@i+1)^(0+384),f
  1042  04DB  3000               	movlw	0
  1043  04DC  0211               	subwf	(main@i+1)^(0+384),w
  1044  04DD  300E               	movlw	14
  1045  04DE  1903               	skipnz
  1046  04DF  0210               	subwf	main@i^(0+384),w
  1047  04E0  1C03               	skipc
  1048  04E1  2CBF               	goto	l2433
  1049  04E2                     l2437:	
  1050                           
  1051                           ;lab5ej2.c: 110: }
  1052                           ;lab5ej2.c: 112: }
  1053                           ;lab5ej2.c: 114: valor1=1;
  1054  04E2  3001               	movlw	1
  1055  04E3  00F5               	movwf	_valor1
  1056  04E4  3000               	movlw	0
  1057  04E5  00F6               	movwf	_valor1+1
  1058                           
  1059                           ;lab5ej2.c: 115: banderaadquirido=0;
  1060  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1061  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1062  04E8  01EB               	clrf	_banderaadquirido
  1063  04E9                     l2441:	
  1064                           
  1065                           ;lab5ej2.c: 116: }
  1066                           ;lab5ej2.c: 117: if(Banderaconv==1)
  1067  04E9  036C               	decf	_Banderaconv,w
  1068  04EA  1D03               	btfss	3,2
  1069  04EB  2C4B               	goto	l2407
  1070                           
  1071                           ;lab5ej2.c: 118: {
  1072                           ;lab5ej2.c: 119: ADCON0bits.GO_DONE=1;
  1073  04EC  149F               	bsf	31,1	;volatile
  1074  04ED                     l132:	
  1075                           ;lab5ej2.c: 120: while(ADCON0bits.GO_DONE==1);
  1076                           
  1077  04ED  189F               	btfsc	31,1	;volatile
  1078  04EE  2CED               	goto	l132
  1079                           
  1080                           ;lab5ej2.c: 121: Banderaconv=0;
  1081  04EF  01EC               	clrf	_Banderaconv
  1082                           
  1083                           ;lab5ej2.c: 122: Adquisicion();
  1084  04F0  120A  118A  21A8  120A  118A  	fcall	_Adquisicion
  1085  04F5  2C4B               	goto	l2407
  1086  04F6                     __end_of_main:	
  1087                           
  1088                           	psect	text1
  1089  0032                     __ptext1:	
  1090 ;; *************** function _sprintf *****************
  1091 ;; Defined at:
  1092 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  sp              1    wreg     PTR unsigned char 
  1095 ;;		 -> valormedido(35), escritura(40), 
  1096 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  1097 ;;		 -> STR_3(19), STR_2(15), STR_1(42), 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  sp              1   31[BANK0 ] PTR unsigned char 
  1100 ;;		 -> valormedido(35), escritura(40), 
  1101 ;;  tmpval          4    0        struct .
  1102 ;;  width           2   29[BANK0 ] int 
  1103 ;;  val             2   27[BANK0 ] unsigned int 
  1104 ;;  cp              2    0        PTR const unsigned char 
  1105 ;;  len             2    0        unsigned int 
  1106 ;;  c               1   32[BANK0 ] char 
  1107 ;;  flag            1   26[BANK0 ] unsigned char 
  1108 ;;  prec            1   25[BANK0 ] char 
  1109 ;;  ap              1   24[BANK0 ] PTR void [1]
  1110 ;;		 -> ?_sprintf(2), 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2   14[BANK0 ] int 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       7       0       0       0
  1121 ;;      Locals:         0       9       0       0       0
  1122 ;;      Temps:          0       3       0       0       0
  1123 ;;      Totals:         0      19       0       0       0
  1124 ;;Total ram usage:       19 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    2
  1127 ;; This function calls:
  1128 ;;		___lwdiv
  1129 ;;		___lwmod
  1130 ;;		___wmul
  1131 ;;		_isdigit
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _sprintf
  1139  0032                     _sprintf:	
  1140                           
  1141                           ;incstack = 0
  1142                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1143                           ;sprintf@sp stored from wreg
  1144  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1145  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1146  0034  00BF               	movwf	sprintf@sp
  1147                           
  1148                           ;doprnt.c: 494: va_list ap;
  1149                           ;doprnt.c: 499: signed char c;
  1150                           ;doprnt.c: 501: int width;
  1151                           ;doprnt.c: 506: signed char prec;
  1152                           ;doprnt.c: 508: unsigned char flag;
  1153                           ;doprnt.c: 523: union {
  1154                           ;doprnt.c: 524: unsigned long vd;
  1155                           ;doprnt.c: 525: double integ;
  1156                           ;doprnt.c: 526: } tmpval;
  1157                           ;doprnt.c: 528: unsigned int val;
  1158                           ;doprnt.c: 529: unsigned len;
  1159                           ;doprnt.c: 530: const char * cp;
  1160                           ;doprnt.c: 533: *ap = __va_start();
  1161  0035  302F               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1162  0036  00B5               	movwf	??_sprintf
  1163  0037  0835               	movf	??_sprintf,w
  1164  0038  00B8               	movwf	sprintf@ap
  1165  0039                     l2325:	
  1166                           ;doprnt.c: 536: while(c = *f++) {
  1167                           
  1168  0039  3001               	movlw	1
  1169  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1170  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1171  003C  07AE               	addwf	sprintf@f,f
  1172  003D  30FF               	movlw	-1
  1173  003E  072E               	addwf	sprintf@f,w
  1174  003F  0084               	movwf	4
  1175  0040  120A  118A  2724  120A  118A  	fcall	stringdir
  1176  0045  00B5               	movwf	??_sprintf
  1177  0046  0835               	movf	??_sprintf,w
  1178  0047  00C0               	movwf	sprintf@c
  1179  0048  0840               	movf	sprintf@c,w
  1180  0049  1903               	btfsc	3,2
  1181  004A  29A1               	goto	l2327
  1182                           
  1183                           ;doprnt.c: 538: if(c != '%')
  1184  004B  3025               	movlw	37
  1185  004C  0640               	xorwf	sprintf@c,w
  1186  004D  1903               	btfsc	3,2
  1187  004E  285B               	goto	l2251
  1188                           
  1189                           ;doprnt.c: 540: {
  1190                           ;doprnt.c: 541: ((*sp++ = (c)));
  1191  004F  0840               	movf	sprintf@c,w
  1192  0050  00B5               	movwf	??_sprintf
  1193  0051  083F               	movf	sprintf@sp,w
  1194  0052  0084               	movwf	4
  1195  0053  0835               	movf	??_sprintf,w
  1196  0054  1383               	bcf	3,7	;select IRP bank0
  1197  0055  0080               	movwf	0
  1198  0056  3001               	movlw	1
  1199  0057  00B5               	movwf	??_sprintf
  1200  0058  0835               	movf	??_sprintf,w
  1201  0059  07BF               	addwf	sprintf@sp,f
  1202                           
  1203                           ;doprnt.c: 542: continue;
  1204  005A  2839               	goto	l2325
  1205  005B                     l2251:	
  1206                           
  1207                           ;doprnt.c: 543: }
  1208                           ;doprnt.c: 546: width = 0;
  1209  005B  01BD               	clrf	sprintf@width
  1210  005C  01BE               	clrf	sprintf@width+1
  1211                           
  1212                           ;doprnt.c: 548: flag = 0;
  1213  005D  01BA               	clrf	sprintf@flag
  1214                           
  1215                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1216  005E  082E               	movf	sprintf@f,w
  1217  005F  0084               	movwf	4
  1218  0060  120A  118A  2724  120A  118A  	fcall	stringdir
  1219  0065  120A  158A  26D8  120A  118A  	fcall	_isdigit
  1220  006A  1C03               	btfss	3,0
  1221  006B  28AA               	goto	l2267
  1222                           
  1223                           ;doprnt.c: 598: width = 0;
  1224  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1225  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1226  006E  01BD               	clrf	sprintf@width
  1227  006F  01BE               	clrf	sprintf@width+1
  1228  0070                     l2257:	
  1229                           ;doprnt.c: 599: do {
  1230                           
  1231                           
  1232                           ;doprnt.c: 600: width *= 10;
  1233  0070  300A               	movlw	10
  1234  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0073  00A0               	movwf	___wmul@multiplier
  1237  0074  3000               	movlw	0
  1238  0075  00A1               	movwf	___wmul@multiplier+1
  1239  0076  083E               	movf	sprintf@width+1,w
  1240  0077  00A3               	movwf	___wmul@multiplicand+1
  1241  0078  083D               	movf	sprintf@width,w
  1242  0079  00A2               	movwf	___wmul@multiplicand
  1243  007A  120A  158A  2743  120A  118A  	fcall	___wmul
  1244  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0081  0821               	movf	?___wmul+1,w
  1247  0082  00BE               	movwf	sprintf@width+1
  1248  0083  0820               	movf	?___wmul,w
  1249  0084  00BD               	movwf	sprintf@width
  1250                           
  1251                           ;doprnt.c: 601: width += *f++ - '0';
  1252  0085  082E               	movf	sprintf@f,w
  1253  0086  0084               	movwf	4
  1254  0087  120A  118A  2724  120A  118A  	fcall	stringdir
  1255  008C  3ED0               	addlw	208
  1256  008D  00B5               	movwf	??_sprintf
  1257  008E  30FF               	movlw	255
  1258  008F  1803               	skipnc
  1259  0090  3000               	movlw	0
  1260  0091  00B6               	movwf	??_sprintf+1
  1261  0092  0835               	movf	??_sprintf,w
  1262  0093  07BD               	addwf	sprintf@width,f
  1263  0094  1803               	skipnc
  1264  0095  0ABE               	incf	sprintf@width+1,f
  1265  0096  0836               	movf	??_sprintf+1,w
  1266  0097  07BE               	addwf	sprintf@width+1,f
  1267  0098  3001               	movlw	1
  1268  0099  00B5               	movwf	??_sprintf
  1269  009A  0835               	movf	??_sprintf,w
  1270  009B  07AE               	addwf	sprintf@f,f
  1271                           
  1272                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1273  009C  082E               	movf	sprintf@f,w
  1274  009D  0084               	movwf	4
  1275  009E  120A  118A  2724  120A  118A  	fcall	stringdir
  1276  00A3  120A  158A  26D8  120A  118A  	fcall	_isdigit
  1277  00A8  1803               	btfsc	3,0
  1278  00A9  2870               	goto	l2257
  1279  00AA                     l2267:	
  1280                           ;doprnt.c: 822: }
  1281                           
  1282                           ;doprnt.c: 813: continue;
  1283                           
  1284                           ;doprnt.c: 802: default:
  1285                           
  1286                           ;doprnt.c: 698: case 'i':
  1287                           ;doprnt.c: 699: break;
  1288                           
  1289                           ;doprnt.c: 697: case 'd':
  1290                           
  1291                           ;doprnt.c: 638: goto alldone;
  1292                           
  1293                           ;doprnt.c: 637: case 0:
  1294                           
  1295                           ;doprnt.c: 608: }
  1296                           ;doprnt.c: 635: switch(c = *f++) {
  1297                           
  1298  00AA  3001               	movlw	1
  1299  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1300  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1301  00AD  07AE               	addwf	sprintf@f,f
  1302  00AE  30FF               	movlw	-1
  1303  00AF  072E               	addwf	sprintf@f,w
  1304  00B0  0084               	movwf	4
  1305  00B1  120A  118A  2724  120A  118A  	fcall	stringdir
  1306  00B6  00C0               	movwf	sprintf@c
  1307                           
  1308                           ; Switch size 1, requested type "space"
  1309                           ; Number of cases is 3, Range of values is 0 to 105
  1310                           ; switch strategies available:
  1311                           ; Name         Instructions Cycles
  1312                           ; simple_byte           10     6 (average)
  1313                           ; jumptable            260     6 (fixed)
  1314                           ;	Chosen strategy is simple_byte
  1315  00B7  3A00               	xorlw	0	; case 0
  1316  00B8  1903               	skipnz
  1317  00B9  29A1               	goto	l2327
  1318  00BA  3A64               	xorlw	100	; case 100
  1319  00BB  1903               	skipnz
  1320  00BC  28C1               	goto	l2269
  1321  00BD  3A0D               	xorlw	13	; case 105
  1322  00BE  1903               	skipnz
  1323  00BF  28C1               	goto	l2269
  1324  00C0  2839               	goto	l2325
  1325  00C1                     l2269:	
  1326                           
  1327                           ;doprnt.c: 1253: {
  1328                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1329  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1330  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1331  00C3  0838               	movf	sprintf@ap,w
  1332  00C4  0084               	movwf	4
  1333  00C5  1383               	bcf	3,7	;select IRP bank0
  1334  00C6  0800               	movf	0,w
  1335  00C7  00BB               	movwf	sprintf@val
  1336  00C8  0A84               	incf	4,f
  1337  00C9  0800               	movf	0,w
  1338  00CA  00BC               	movwf	sprintf@val+1
  1339  00CB  3002               	movlw	2
  1340  00CC  00B5               	movwf	??_sprintf
  1341  00CD  0835               	movf	??_sprintf,w
  1342  00CE  07B8               	addwf	sprintf@ap,f
  1343                           
  1344                           ;doprnt.c: 1261: if((int)val < 0) {
  1345  00CF  1FBC               	btfss	sprintf@val+1,7
  1346  00D0  28DA               	goto	l2279
  1347                           
  1348                           ;doprnt.c: 1262: flag |= 0x03;
  1349  00D1  3003               	movlw	3
  1350  00D2  00B5               	movwf	??_sprintf
  1351  00D3  0835               	movf	??_sprintf,w
  1352  00D4  04BA               	iorwf	sprintf@flag,f
  1353                           
  1354                           ;doprnt.c: 1263: val = -val;
  1355  00D5  09BB               	comf	sprintf@val,f
  1356  00D6  09BC               	comf	sprintf@val+1,f
  1357  00D7  0ABB               	incf	sprintf@val,f
  1358  00D8  1903               	skipnz
  1359  00D9  0ABC               	incf	sprintf@val+1,f
  1360  00DA                     l2279:	
  1361                           
  1362                           ;doprnt.c: 1264: }
  1363                           ;doprnt.c: 1266: }
  1364                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1365  00DA  01C0               	clrf	sprintf@c
  1366  00DB  0AC0               	incf	sprintf@c,f
  1367  00DC  3005               	movlw	5
  1368  00DD  0640               	xorwf	sprintf@c,w
  1369  00DE  1903               	btfsc	3,2
  1370  00DF  2901               	goto	l2291
  1371  00E0                     l2285:	
  1372                           
  1373                           ;doprnt.c: 1306: if(val < dpowers[c])
  1374  00E0  0840               	movf	sprintf@c,w
  1375  00E1  00B5               	movwf	??_sprintf
  1376  00E2  0735               	addwf	??_sprintf,w
  1377  00E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1378  00E4  0084               	movwf	4
  1379  00E5  120A  118A  2724  120A  118A  	fcall	stringdir
  1380  00EA  00B6               	movwf	??_sprintf+1
  1381  00EB  120A  118A  2724  120A  118A  	fcall	stringdir
  1382  00F0  00B7               	movwf	??_sprintf+2
  1383  00F1  0837               	movf	??_sprintf+2,w
  1384  00F2  023C               	subwf	sprintf@val+1,w
  1385  00F3  1D03               	skipz
  1386  00F4  28F7               	goto	u3675
  1387  00F5  0836               	movf	??_sprintf+1,w
  1388  00F6  023B               	subwf	sprintf@val,w
  1389  00F7                     u3675:	
  1390  00F7  1C03               	btfss	3,0
  1391  00F8  2901               	goto	l2291
  1392                           
  1393                           ;doprnt.c: 1307: break;
  1394  00F9  3001               	movlw	1
  1395  00FA  00B5               	movwf	??_sprintf
  1396  00FB  0835               	movf	??_sprintf,w
  1397  00FC  07C0               	addwf	sprintf@c,f
  1398  00FD  3005               	movlw	5
  1399  00FE  0640               	xorwf	sprintf@c,w
  1400  00FF  1D03               	btfss	3,2
  1401  0100  28E0               	goto	l2285
  1402  0101                     l2291:	
  1403                           
  1404                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1405  0101  083D               	movf	sprintf@width,w
  1406  0102  043E               	iorwf	sprintf@width+1,w
  1407  0103  1903               	btfsc	3,2
  1408  0104  290F               	goto	l189
  1409  0105  083A               	movf	sprintf@flag,w
  1410  0106  3903               	andlw	3
  1411  0107  1903               	btfsc	3,2
  1412  0108  290F               	goto	l189
  1413                           
  1414                           ;doprnt.c: 1346: width--;
  1415  0109  30FF               	movlw	255
  1416  010A  07BD               	addwf	sprintf@width,f
  1417  010B  1803               	skipnc
  1418  010C  0ABE               	incf	sprintf@width+1,f
  1419  010D  30FF               	movlw	255
  1420  010E  07BE               	addwf	sprintf@width+1,f
  1421  010F                     l189:	
  1422                           
  1423                           ;doprnt.c: 1381: if(width > c)
  1424  010F  0840               	movf	sprintf@c,w
  1425  0110  00B5               	movwf	??_sprintf
  1426  0111  01B6               	clrf	??_sprintf+1
  1427  0112  1BB5               	btfsc	??_sprintf,7
  1428  0113  03B6               	decf	??_sprintf+1,f
  1429  0114  0836               	movf	??_sprintf+1,w
  1430  0115  3A80               	xorlw	128
  1431  0116  00B7               	movwf	??_sprintf+2
  1432  0117  083E               	movf	sprintf@width+1,w
  1433  0118  3A80               	xorlw	128
  1434  0119  0237               	subwf	??_sprintf+2,w
  1435  011A  1D03               	skipz
  1436  011B  291E               	goto	u3715
  1437  011C  083D               	movf	sprintf@width,w
  1438  011D  0235               	subwf	??_sprintf,w
  1439  011E                     u3715:	
  1440  011E  1803               	skipnc
  1441  011F  292E               	goto	l2299
  1442                           
  1443                           ;doprnt.c: 1382: width -= c;
  1444  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0122  0840               	movf	sprintf@c,w
  1447  0123  00B5               	movwf	??_sprintf
  1448  0124  01B6               	clrf	??_sprintf+1
  1449  0125  1BB5               	btfsc	??_sprintf,7
  1450  0126  03B6               	decf	??_sprintf+1,f
  1451  0127  0835               	movf	??_sprintf,w
  1452  0128  02BD               	subwf	sprintf@width,f
  1453  0129  0836               	movf	??_sprintf+1,w
  1454  012A  1C03               	skipc
  1455  012B  03BE               	decf	sprintf@width+1,f
  1456  012C  02BE               	subwf	sprintf@width+1,f
  1457  012D  2932               	goto	l2301
  1458  012E                     l2299:	
  1459                           
  1460                           ;doprnt.c: 1383: else
  1461                           ;doprnt.c: 1384: width = 0;
  1462  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1463  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0130  01BD               	clrf	sprintf@width
  1465  0131  01BE               	clrf	sprintf@width+1
  1466  0132                     l2301:	
  1467                           
  1468                           ;doprnt.c: 1422: {
  1469                           ;doprnt.c: 1424: if(width
  1470                           ;doprnt.c: 1428: )
  1471  0132  083D               	movf	sprintf@width,w
  1472  0133  043E               	iorwf	sprintf@width+1,w
  1473  0134  1903               	btfsc	3,2
  1474  0135  294B               	goto	l2309
  1475  0136                     l2303:	
  1476                           ;doprnt.c: 1429: do
  1477                           
  1478                           
  1479                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1480  0136  3020               	movlw	32
  1481  0137  00B5               	movwf	??_sprintf
  1482  0138  083F               	movf	sprintf@sp,w
  1483  0139  0084               	movwf	4
  1484  013A  0835               	movf	??_sprintf,w
  1485  013B  1383               	bcf	3,7	;select IRP bank0
  1486  013C  0080               	movwf	0
  1487  013D  3001               	movlw	1
  1488  013E  00B5               	movwf	??_sprintf
  1489  013F  0835               	movf	??_sprintf,w
  1490  0140  07BF               	addwf	sprintf@sp,f
  1491                           
  1492                           ;doprnt.c: 1431: while(--width);
  1493  0141  30FF               	movlw	255
  1494  0142  07BD               	addwf	sprintf@width,f
  1495  0143  1803               	skipnc
  1496  0144  0ABE               	incf	sprintf@width+1,f
  1497  0145  30FF               	movlw	255
  1498  0146  07BE               	addwf	sprintf@width+1,f
  1499  0147  083D               	movf	sprintf@width,w
  1500  0148  043E               	iorwf	sprintf@width+1,w
  1501  0149  1D03               	btfss	3,2
  1502  014A  2936               	goto	l2303
  1503  014B                     l2309:	
  1504                           
  1505                           ;doprnt.c: 1438: if(flag & 0x03)
  1506  014B  083A               	movf	sprintf@flag,w
  1507  014C  3903               	andlw	3
  1508  014D  1903               	btfsc	3,2
  1509  014E  295A               	goto	l2315
  1510                           
  1511                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1512  014F  302D               	movlw	45
  1513  0150  00B5               	movwf	??_sprintf
  1514  0151  083F               	movf	sprintf@sp,w
  1515  0152  0084               	movwf	4
  1516  0153  0835               	movf	??_sprintf,w
  1517  0154  1383               	bcf	3,7	;select IRP bank0
  1518  0155  0080               	movwf	0
  1519  0156  3001               	movlw	1
  1520  0157  00B5               	movwf	??_sprintf
  1521  0158  0835               	movf	??_sprintf,w
  1522  0159  07BF               	addwf	sprintf@sp,f
  1523  015A                     l2315:	
  1524                           
  1525                           ;doprnt.c: 1469: }
  1526                           ;doprnt.c: 1472: prec = c;
  1527  015A  0840               	movf	sprintf@c,w
  1528  015B  00B5               	movwf	??_sprintf
  1529  015C  0835               	movf	??_sprintf,w
  1530  015D  00B9               	movwf	sprintf@prec
  1531  015E                     l2323:	
  1532                           ;doprnt.c: 1474: while(prec--) {
  1533                           
  1534  015E  30FF               	movlw	255
  1535  015F  00B5               	movwf	??_sprintf
  1536  0160  0835               	movf	??_sprintf,w
  1537  0161  07B9               	addwf	sprintf@prec,f
  1538  0162  0A39               	incf	sprintf@prec,w
  1539  0163  1903               	btfsc	3,2
  1540  0164  2839               	goto	l2325
  1541                           
  1542                           ;doprnt.c: 1478: {
  1543                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1544  0165  300A               	movlw	10
  1545  0166  00A8               	movwf	___lwmod@divisor
  1546  0167  3000               	movlw	0
  1547  0168  00A9               	movwf	___lwmod@divisor+1
  1548  0169  0839               	movf	sprintf@prec,w
  1549  016A  00B5               	movwf	??_sprintf
  1550  016B  0735               	addwf	??_sprintf,w
  1551  016C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1552  016D  0084               	movwf	4
  1553  016E  120A  118A  2724  120A  118A  	fcall	stringdir
  1554  0173  00A0               	movwf	___lwdiv@divisor
  1555  0174  120A  118A  2724  120A  118A  	fcall	stringdir
  1556  0179  00A1               	movwf	___lwdiv@divisor+1
  1557  017A  083C               	movf	sprintf@val+1,w
  1558  017B  00A3               	movwf	___lwdiv@dividend+1
  1559  017C  083B               	movf	sprintf@val,w
  1560  017D  00A2               	movwf	___lwdiv@dividend
  1561  017E  120A  158A  27C2  120A  118A  	fcall	___lwdiv
  1562  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0185  0821               	movf	?___lwdiv+1,w
  1565  0186  00AB               	movwf	___lwmod@dividend+1
  1566  0187  0820               	movf	?___lwdiv,w
  1567  0188  00AA               	movwf	___lwmod@dividend
  1568  0189  120A  158A  278E  120A  118A  	fcall	___lwmod
  1569  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1570  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0190  0828               	movf	?___lwmod,w
  1572  0191  3E30               	addlw	48
  1573  0192  00B6               	movwf	??_sprintf+1
  1574  0193  0836               	movf	??_sprintf+1,w
  1575  0194  00C0               	movwf	sprintf@c
  1576                           
  1577                           ;doprnt.c: 1523: }
  1578                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1579  0195  0840               	movf	sprintf@c,w
  1580  0196  00B5               	movwf	??_sprintf
  1581  0197  083F               	movf	sprintf@sp,w
  1582  0198  0084               	movwf	4
  1583  0199  0835               	movf	??_sprintf,w
  1584  019A  1383               	bcf	3,7	;select IRP bank0
  1585  019B  0080               	movwf	0
  1586  019C  3001               	movlw	1
  1587  019D  00B5               	movwf	??_sprintf
  1588  019E  0835               	movf	??_sprintf,w
  1589  019F  07BF               	addwf	sprintf@sp,f
  1590  01A0  295E               	goto	l2323
  1591  01A1                     l2327:	
  1592                           ;doprnt.c: 1525: }
  1593                           ;doprnt.c: 1533: }
  1594                           ;doprnt.c: 1535: alldone:
  1595                           
  1596                           
  1597                           ;doprnt.c: 1538: *sp = 0;
  1598  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1599  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1600  01A3  083F               	movf	sprintf@sp,w
  1601  01A4  0084               	movwf	4
  1602  01A5  1383               	bcf	3,7	;select IRP bank0
  1603  01A6  0180               	clrf	0
  1604  01A7  0008               	return
  1605  01A8                     __end_of_sprintf:	
  1606                           ;doprnt.c: 1540: return 0;
  1607                           ;	Return value of _sprintf is never used
  1608                           
  1609                           
  1610                           	psect	text2
  1611  0ED8                     __ptext2:	
  1612 ;; *************** function _isdigit *****************
  1613 ;; Defined at:
  1614 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  c               1    wreg     unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  c               1    1[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;		None               void
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       2       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         0       2       0       0       0
  1632 ;;Total ram usage:        2 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_sprintf
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _isdigit
  1644  0ED8                     _isdigit:	
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1648                           ;isdigit@c stored from wreg
  1649  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0EDA  00A1               	movwf	isdigit@c
  1652  0EDB  01A0               	clrf	_isdigit$681
  1653  0EDC  303A               	movlw	58
  1654  0EDD  0221               	subwf	isdigit@c,w
  1655  0EDE  1803               	skipnc
  1656  0EDF  2EE6               	goto	l1909
  1657  0EE0  3030               	movlw	48
  1658  0EE1  0221               	subwf	isdigit@c,w
  1659  0EE2  1C03               	skipc
  1660  0EE3  2EE6               	goto	l1909
  1661  0EE4  01A0               	clrf	_isdigit$681
  1662  0EE5  0AA0               	incf	_isdigit$681,f
  1663  0EE6                     l1909:	
  1664  0EE6  0C20               	rrf	_isdigit$681,w
  1665  0EE7  0008               	return
  1666  0EE8                     __end_of_isdigit:	
  1667                           
  1668                           	psect	text3
  1669  0F43                     __ptext3:	
  1670 ;; *************** function ___wmul *****************
  1671 ;; Defined at:
  1672 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1675 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  product         2    4[BANK0 ] unsigned int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2    0[BANK0 ] unsigned int 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1687 ;;      Params:         0       4       0       0       0
  1688 ;;      Locals:         0       2       0       0       0
  1689 ;;      Temps:          0       0       0       0       0
  1690 ;;      Totals:         0       6       0       0       0
  1691 ;;Total ram usage:        6 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_sprintf
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           
  1702                           ;psect for function ___wmul
  1703  0F43                     ___wmul:	
  1704                           
  1705                           ;incstack = 0
  1706                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1707  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0F45  01A4               	clrf	___wmul@product
  1710  0F46  01A5               	clrf	___wmul@product+1
  1711  0F47                     l1915:	
  1712  0F47  1C20               	btfss	___wmul@multiplier,0
  1713  0F48  2F4F               	goto	l284
  1714  0F49  0822               	movf	___wmul@multiplicand,w
  1715  0F4A  07A4               	addwf	___wmul@product,f
  1716  0F4B  1803               	skipnc
  1717  0F4C  0AA5               	incf	___wmul@product+1,f
  1718  0F4D  0823               	movf	___wmul@multiplicand+1,w
  1719  0F4E  07A5               	addwf	___wmul@product+1,f
  1720  0F4F                     l284:	
  1721  0F4F  3001               	movlw	1
  1722  0F50                     u2865:	
  1723  0F50  1003               	clrc
  1724  0F51  0DA2               	rlf	___wmul@multiplicand,f
  1725  0F52  0DA3               	rlf	___wmul@multiplicand+1,f
  1726  0F53  3EFF               	addlw	-1
  1727  0F54  1D03               	skipz
  1728  0F55  2F50               	goto	u2865
  1729  0F56  3001               	movlw	1
  1730  0F57                     u2875:	
  1731  0F57  1003               	clrc
  1732  0F58  0CA1               	rrf	___wmul@multiplier+1,f
  1733  0F59  0CA0               	rrf	___wmul@multiplier,f
  1734  0F5A  3EFF               	addlw	-1
  1735  0F5B  1D03               	skipz
  1736  0F5C  2F57               	goto	u2875
  1737  0F5D  0820               	movf	___wmul@multiplier,w
  1738  0F5E  0421               	iorwf	___wmul@multiplier+1,w
  1739  0F5F  1D03               	btfss	3,2
  1740  0F60  2F47               	goto	l1915
  1741  0F61  0825               	movf	___wmul@product+1,w
  1742  0F62  00A1               	movwf	?___wmul+1
  1743  0F63  0824               	movf	___wmul@product,w
  1744  0F64  00A0               	movwf	?___wmul
  1745  0F65  0008               	return
  1746  0F66                     __end_of___wmul:	
  1747                           
  1748                           	psect	text4
  1749  0F8E                     __ptext4:	
  1750 ;; *************** function ___lwmod *****************
  1751 ;; Defined at:
  1752 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  divisor         2    8[BANK0 ] unsigned int 
  1755 ;;  dividend        2   10[BANK0 ] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  counter         1   13[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    8[BANK0 ] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       4       0       0       0
  1768 ;;      Locals:         0       1       0       0       0
  1769 ;;      Temps:          0       1       0       0       0
  1770 ;;      Totals:         0       6       0       0       0
  1771 ;;Total ram usage:        6 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    1
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_sprintf
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function ___lwmod
  1783  0F8E                     ___lwmod:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1787  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0F90  0828               	movf	___lwmod@divisor,w
  1790  0F91  0429               	iorwf	___lwmod@divisor+1,w
  1791  0F92  1903               	btfsc	3,2
  1792  0F93  2FBD               	goto	l2197
  1793  0F94  01AD               	clrf	___lwmod@counter
  1794  0F95  0AAD               	incf	___lwmod@counter,f
  1795  0F96                     l2187:	
  1796  0F96  1BA9               	btfsc	___lwmod@divisor+1,7
  1797  0F97  2FA4               	goto	l2189
  1798  0F98  3001               	movlw	1
  1799  0F99                     u3575:	
  1800  0F99  1003               	clrc
  1801  0F9A  0DA8               	rlf	___lwmod@divisor,f
  1802  0F9B  0DA9               	rlf	___lwmod@divisor+1,f
  1803  0F9C  3EFF               	addlw	-1
  1804  0F9D  1D03               	skipz
  1805  0F9E  2F99               	goto	u3575
  1806  0F9F  3001               	movlw	1
  1807  0FA0  00AC               	movwf	??___lwmod
  1808  0FA1  082C               	movf	??___lwmod,w
  1809  0FA2  07AD               	addwf	___lwmod@counter,f
  1810  0FA3  2F96               	goto	l2187
  1811  0FA4                     l2189:	
  1812  0FA4  0829               	movf	___lwmod@divisor+1,w
  1813  0FA5  022B               	subwf	___lwmod@dividend+1,w
  1814  0FA6  1D03               	skipz
  1815  0FA7  2FAA               	goto	u3595
  1816  0FA8  0828               	movf	___lwmod@divisor,w
  1817  0FA9  022A               	subwf	___lwmod@dividend,w
  1818  0FAA                     u3595:	
  1819  0FAA  1C03               	skipc
  1820  0FAB  2FB2               	goto	l2193
  1821  0FAC  0828               	movf	___lwmod@divisor,w
  1822  0FAD  02AA               	subwf	___lwmod@dividend,f
  1823  0FAE  0829               	movf	___lwmod@divisor+1,w
  1824  0FAF  1C03               	skipc
  1825  0FB0  03AB               	decf	___lwmod@dividend+1,f
  1826  0FB1  02AB               	subwf	___lwmod@dividend+1,f
  1827  0FB2                     l2193:	
  1828  0FB2  3001               	movlw	1
  1829  0FB3                     u3605:	
  1830  0FB3  1003               	clrc
  1831  0FB4  0CA9               	rrf	___lwmod@divisor+1,f
  1832  0FB5  0CA8               	rrf	___lwmod@divisor,f
  1833  0FB6  3EFF               	addlw	-1
  1834  0FB7  1D03               	skipz
  1835  0FB8  2FB3               	goto	u3605
  1836  0FB9  3001               	movlw	1
  1837  0FBA  02AD               	subwf	___lwmod@counter,f
  1838  0FBB  1D03               	btfss	3,2
  1839  0FBC  2FA4               	goto	l2189
  1840  0FBD                     l2197:	
  1841  0FBD  082B               	movf	___lwmod@dividend+1,w
  1842  0FBE  00A9               	movwf	?___lwmod+1
  1843  0FBF  082A               	movf	___lwmod@dividend,w
  1844  0FC0  00A8               	movwf	?___lwmod
  1845  0FC1  0008               	return
  1846  0FC2                     __end_of___lwmod:	
  1847                           
  1848                           	psect	text5
  1849  0FC2                     __ptext5:	
  1850 ;; *************** function ___lwdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    0[BANK0 ] unsigned int 
  1855 ;;  dividend        2    2[BANK0 ] unsigned int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    6[BANK0 ] unsigned int 
  1858 ;;  counter         1    5[BANK0 ] unsigned char 
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  2    0[BANK0 ] unsigned int 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1868 ;;      Params:         0       4       0       0       0
  1869 ;;      Locals:         0       3       0       0       0
  1870 ;;      Temps:          0       1       0       0       0
  1871 ;;      Totals:         0       8       0       0       0
  1872 ;;Total ram usage:        8 bytes
  1873 ;; Hardware stack levels used:    1
  1874 ;; Hardware stack levels required when called:    1
  1875 ;; This function calls:
  1876 ;;		Nothing
  1877 ;; This function is called by:
  1878 ;;		_sprintf
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function ___lwdiv
  1884  0FC2                     ___lwdiv:	
  1885                           
  1886                           ;incstack = 0
  1887                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1888  0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0FC4  01A6               	clrf	___lwdiv@quotient
  1891  0FC5  01A7               	clrf	___lwdiv@quotient+1
  1892  0FC6  0820               	movf	___lwdiv@divisor,w
  1893  0FC7  0421               	iorwf	___lwdiv@divisor+1,w
  1894  0FC8  1903               	btfsc	3,2
  1895  0FC9  2FFB               	goto	l2175
  1896  0FCA  01A5               	clrf	___lwdiv@counter
  1897  0FCB  0AA5               	incf	___lwdiv@counter,f
  1898  0FCC                     l2163:	
  1899  0FCC  1BA1               	btfsc	___lwdiv@divisor+1,7
  1900  0FCD  2FDA               	goto	l2165
  1901  0FCE  3001               	movlw	1
  1902  0FCF                     u3505:	
  1903  0FCF  1003               	clrc
  1904  0FD0  0DA0               	rlf	___lwdiv@divisor,f
  1905  0FD1  0DA1               	rlf	___lwdiv@divisor+1,f
  1906  0FD2  3EFF               	addlw	-1
  1907  0FD3  1D03               	skipz
  1908  0FD4  2FCF               	goto	u3505
  1909  0FD5  3001               	movlw	1
  1910  0FD6  00A4               	movwf	??___lwdiv
  1911  0FD7  0824               	movf	??___lwdiv,w
  1912  0FD8  07A5               	addwf	___lwdiv@counter,f
  1913  0FD9  2FCC               	goto	l2163
  1914  0FDA                     l2165:	
  1915  0FDA  3001               	movlw	1
  1916  0FDB                     u3525:	
  1917  0FDB  1003               	clrc
  1918  0FDC  0DA6               	rlf	___lwdiv@quotient,f
  1919  0FDD  0DA7               	rlf	___lwdiv@quotient+1,f
  1920  0FDE  3EFF               	addlw	-1
  1921  0FDF  1D03               	skipz
  1922  0FE0  2FDB               	goto	u3525
  1923  0FE1  0821               	movf	___lwdiv@divisor+1,w
  1924  0FE2  0223               	subwf	___lwdiv@dividend+1,w
  1925  0FE3  1D03               	skipz
  1926  0FE4  2FE7               	goto	u3535
  1927  0FE5  0820               	movf	___lwdiv@divisor,w
  1928  0FE6  0222               	subwf	___lwdiv@dividend,w
  1929  0FE7                     u3535:	
  1930  0FE7  1C03               	skipc
  1931  0FE8  2FF0               	goto	l2171
  1932  0FE9  0820               	movf	___lwdiv@divisor,w
  1933  0FEA  02A2               	subwf	___lwdiv@dividend,f
  1934  0FEB  0821               	movf	___lwdiv@divisor+1,w
  1935  0FEC  1C03               	skipc
  1936  0FED  03A3               	decf	___lwdiv@dividend+1,f
  1937  0FEE  02A3               	subwf	___lwdiv@dividend+1,f
  1938  0FEF  1426               	bsf	___lwdiv@quotient,0
  1939  0FF0                     l2171:	
  1940  0FF0  3001               	movlw	1
  1941  0FF1                     u3545:	
  1942  0FF1  1003               	clrc
  1943  0FF2  0CA1               	rrf	___lwdiv@divisor+1,f
  1944  0FF3  0CA0               	rrf	___lwdiv@divisor,f
  1945  0FF4  3EFF               	addlw	-1
  1946  0FF5  1D03               	skipz
  1947  0FF6  2FF1               	goto	u3545
  1948  0FF7  3001               	movlw	1
  1949  0FF8  02A5               	subwf	___lwdiv@counter,f
  1950  0FF9  1D03               	btfss	3,2
  1951  0FFA  2FDA               	goto	l2165
  1952  0FFB                     l2175:	
  1953  0FFB  0827               	movf	___lwdiv@quotient+1,w
  1954  0FFC  00A1               	movwf	?___lwdiv+1
  1955  0FFD  0826               	movf	___lwdiv@quotient,w
  1956  0FFE  00A0               	movwf	?___lwdiv
  1957  0FFF  0008               	return
  1958  1000                     __end_of___lwdiv:	
  1959                           
  1960                           	psect	text6
  1961  0F66                     __ptext6:	
  1962 ;; *************** function _correccion *****************
  1963 ;; Defined at:
  1964 ;;		line 184 in file "lab5ej2.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  i               2    0[BANK0 ] int 
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2, status,0, btemp+1
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1978 ;;      Params:         0       0       0       0       0
  1979 ;;      Locals:         0       2       0       0       0
  1980 ;;      Temps:          0       0       0       0       0
  1981 ;;      Totals:         0       2       0       0       0
  1982 ;;Total ram usage:        2 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    1
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           
  1993                           ;psect for function _correccion
  1994  0F66                     _correccion:	
  1995                           
  1996                           ;lab5ej2.c: 186: int i=0;
  1997                           
  1998                           ;incstack = 0
  1999                           ; Regs used in _correccion: [wreg+status,2+status,0+btemp+1]
  2000  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0F68  01A0               	clrf	correccion@i
  2003  0F69  01A1               	clrf	correccion@i+1
  2004                           
  2005                           ;lab5ej2.c: 187: if(valor1==1)
  2006  0F6A  0375               	decf	_valor1,w
  2007  0F6B  0476               	iorwf	_valor1+1,w
  2008  0F6C  1D03               	btfss	3,2
  2009  0F6D  0008               	return
  2010                           
  2011                           ;lab5ej2.c: 188: {
  2012                           ;lab5ej2.c: 189: for(i=0;i<14;i++)
  2013  0F6E  01A0               	clrf	correccion@i
  2014  0F6F  01A1               	clrf	correccion@i+1
  2015  0F70                     L2:	
  2016  0F70  0821               	movf	correccion@i+1,w
  2017  0F71  3A80               	xorlw	128
  2018  0F72  00FF               	movwf	127
  2019  0F73  3080               	movlw	128
  2020  0F74  027F               	subwf	127,w
  2021  0F75  1D03               	skipz
  2022  0F76  2F79               	goto	u3785
  2023  0F77  300E               	movlw	14
  2024  0F78  0220               	subwf	correccion@i,w
  2025  0F79                     u3785:	
  2026  0F79  1803               	btfsc	3,0
  2027  0F7A  0008               	return
  2028                           
  2029                           ;lab5ej2.c: 190: {
  2030                           ;lab5ej2.c: 191: TXREG=0X08;
  2031  0F7B  3008               	movlw	8
  2032  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0F7E  0099               	movwf	25	;volatile
  2035  0F7F                     l155:	
  2036                           ;lab5ej2.c: 192: while(PIR1bits.TXIF==0);
  2037                           
  2038  0F7F  1E0C               	btfss	12,4	;volatile
  2039  0F80  2F7F               	goto	l155
  2040  0F81                     l158:	
  2041                           ;lab5ej2.c: 193: while(TXSTAbits.TRMT==0);
  2042                           
  2043  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0F83  1C98               	btfss	24,1	;volatile
  2046  0F84  2F81               	goto	l158
  2047  0F85  3001               	movlw	1
  2048  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0F88  07A0               	addwf	correccion@i,f
  2051  0F89  1803               	skipnc
  2052  0F8A  0AA1               	incf	correccion@i+1,f
  2053  0F8B  3000               	movlw	0
  2054  0F8C  07A1               	addwf	correccion@i+1,f
  2055  0F8D  2F70               	goto	L2
  2056  0F8E                     __end_of_correccion:	
  2057                           
  2058                           	psect	text7
  2059  06C5                     __ptext7:	
  2060 ;; *************** function ___ftge *****************
  2061 ;; Defined at:
  2062 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  ff1             3    0[BANK0 ] float 
  2065 ;;  ff2             3    3[BANK0 ] float 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       6       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       6       0       0       0
  2080 ;;      Totals:         0      12       0       0       0
  2081 ;;Total ram usage:       12 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function ___ftge
  2093  06C5                     ___ftge:	
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2097  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2098  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2099  06C7  1FA2               	btfss	___ftge@ff1+2,7
  2100  06C8  2EEE               	goto	l2369
  2101  06C9  3000               	movlw	0
  2102  06CA  00A6               	movwf	??___ftge
  2103  06CB  3000               	movlw	0
  2104  06CC  00A7               	movwf	??___ftge+1
  2105  06CD  3080               	movlw	128
  2106  06CE  00A8               	movwf	??___ftge+2
  2107  06CF  0920               	comf	___ftge@ff1,w
  2108  06D0  00A9               	movwf	??___ftge+3
  2109  06D1  0921               	comf	___ftge@ff1+1,w
  2110  06D2  00AA               	movwf	??___ftge+4
  2111  06D3  0922               	comf	___ftge@ff1+2,w
  2112  06D4  00AB               	movwf	??___ftge+5
  2113  06D5  0AA9               	incf	??___ftge+3,f
  2114  06D6  1903               	skipnz
  2115  06D7  0AAA               	incf	??___ftge+4,f
  2116  06D8  1903               	skipnz
  2117  06D9  0AAB               	incf	??___ftge+5,f
  2118  06DA  0829               	movf	??___ftge+3,w
  2119  06DB  07A6               	addwf	??___ftge,f
  2120  06DC  082A               	movf	??___ftge+4,w
  2121  06DD  1803               	skipnc
  2122  06DE  0F2A               	incfsz	??___ftge+4,w
  2123  06DF  2EE1               	goto	u3831
  2124  06E0  2EE2               	goto	u3832
  2125  06E1                     u3831:	
  2126  06E1  07A7               	addwf	??___ftge+1,f
  2127  06E2                     u3832:	
  2128  06E2  082B               	movf	??___ftge+5,w
  2129  06E3  1803               	skipnc
  2130  06E4  0F2B               	incfsz	??___ftge+5,w
  2131  06E5  2EE7               	goto	u3833
  2132  06E6  2EE8               	goto	u3834
  2133  06E7                     u3833:	
  2134  06E7  07A8               	addwf	??___ftge+2,f
  2135  06E8                     u3834:	
  2136  06E8  0826               	movf	??___ftge,w
  2137  06E9  00A0               	movwf	___ftge@ff1
  2138  06EA  0827               	movf	??___ftge+1,w
  2139  06EB  00A1               	movwf	___ftge@ff1+1
  2140  06EC  0828               	movf	??___ftge+2,w
  2141  06ED  00A2               	movwf	___ftge@ff1+2
  2142  06EE                     l2369:	
  2143  06EE  1FA5               	btfss	___ftge@ff2+2,7
  2144  06EF  2F15               	goto	l2373
  2145  06F0  3000               	movlw	0
  2146  06F1  00A6               	movwf	??___ftge
  2147  06F2  3000               	movlw	0
  2148  06F3  00A7               	movwf	??___ftge+1
  2149  06F4  3080               	movlw	128
  2150  06F5  00A8               	movwf	??___ftge+2
  2151  06F6  0923               	comf	___ftge@ff2,w
  2152  06F7  00A9               	movwf	??___ftge+3
  2153  06F8  0924               	comf	___ftge@ff2+1,w
  2154  06F9  00AA               	movwf	??___ftge+4
  2155  06FA  0925               	comf	___ftge@ff2+2,w
  2156  06FB  00AB               	movwf	??___ftge+5
  2157  06FC  0AA9               	incf	??___ftge+3,f
  2158  06FD  1903               	skipnz
  2159  06FE  0AAA               	incf	??___ftge+4,f
  2160  06FF  1903               	skipnz
  2161  0700  0AAB               	incf	??___ftge+5,f
  2162  0701  0829               	movf	??___ftge+3,w
  2163  0702  07A6               	addwf	??___ftge,f
  2164  0703  082A               	movf	??___ftge+4,w
  2165  0704  1803               	skipnc
  2166  0705  0F2A               	incfsz	??___ftge+4,w
  2167  0706  2F08               	goto	u3851
  2168  0707  2F09               	goto	u3852
  2169  0708                     u3851:	
  2170  0708  07A7               	addwf	??___ftge+1,f
  2171  0709                     u3852:	
  2172  0709  082B               	movf	??___ftge+5,w
  2173  070A  1803               	skipnc
  2174  070B  0F2B               	incfsz	??___ftge+5,w
  2175  070C  2F0E               	goto	u3853
  2176  070D  2F0F               	goto	u3854
  2177  070E                     u3853:	
  2178  070E  07A8               	addwf	??___ftge+2,f
  2179  070F                     u3854:	
  2180  070F  0826               	movf	??___ftge,w
  2181  0710  00A3               	movwf	___ftge@ff2
  2182  0711  0827               	movf	??___ftge+1,w
  2183  0712  00A4               	movwf	___ftge@ff2+1
  2184  0713  0828               	movf	??___ftge+2,w
  2185  0714  00A5               	movwf	___ftge@ff2+2
  2186  0715                     l2373:	
  2187  0715  3080               	movlw	128
  2188  0716  06A2               	xorwf	___ftge@ff1+2,f
  2189  0717  3080               	movlw	128
  2190  0718  06A5               	xorwf	___ftge@ff2+2,f
  2191  0719  0825               	movf	___ftge@ff2+2,w
  2192  071A  0222               	subwf	___ftge@ff1+2,w
  2193  071B  1D03               	skipz
  2194  071C  0008               	return
  2195  071D  0824               	movf	___ftge@ff2+1,w
  2196  071E  0221               	subwf	___ftge@ff1+1,w
  2197  071F  1D03               	skipz
  2198  0720  0008               	return
  2199  0721  0823               	movf	___ftge@ff2,w
  2200  0722  0220               	subwf	___ftge@ff1,w
  2201  0723  0008               	return
  2202  0724                     __end_of___ftge:	
  2203                           
  2204                           	psect	text8
  2205  0EE8                     __ptext8:	
  2206 ;; *************** function _InitUSART *****************
  2207 ;; Defined at:
  2208 ;;		line 157 in file "lab5ej2.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _InitUSART
  2238  0EE8                     _InitUSART:	
  2239                           
  2240                           ;lab5ej2.c: 162: TXSTAbits.SYNC=0;
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in _InitUSART: [wreg]
  2244  0EE8  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0EE9  1303               	bcf	3,6	;RP1=0, select bank1
  2246  0EEA  1218               	bcf	24,4	;volatile
  2247                           
  2248                           ;lab5ej2.c: 163: RCSTAbits.SPEN=1;
  2249  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0EED  1798               	bsf	24,7	;volatile
  2252                           
  2253                           ;lab5ej2.c: 164: TXSTAbits.BRGH=1;
  2254  0EEE  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0EEF  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0EF0  1518               	bsf	24,2	;volatile
  2257                           
  2258                           ;lab5ej2.c: 165: BAUDCTLbits.BRG16=1;
  2259  0EF1  1683               	bsf	3,5	;RP0=1, select bank3
  2260  0EF2  1703               	bsf	3,6	;RP1=1, select bank3
  2261  0EF3  1587               	bsf	7,3	;volatile
  2262                           
  2263                           ;lab5ej2.c: 166: SPBRG=0x08;
  2264  0EF4  3008               	movlw	8
  2265  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  2266  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  2267  0EF7  0099               	movwf	25	;volatile
  2268                           
  2269                           ;lab5ej2.c: 167: SPBRGH=0x02;
  2270  0EF8  3002               	movlw	2
  2271  0EF9  009A               	movwf	26	;volatile
  2272                           
  2273                           ;lab5ej2.c: 168: TXSTAbits.TXEN=1;
  2274  0EFA  1698               	bsf	24,5	;volatile
  2275  0EFB  0008               	return
  2276  0EFC                     __end_of_InitUSART:	
  2277                           
  2278                           	psect	text9
  2279  0F11                     __ptext9:	
  2280 ;; *************** function _InitTMR1 *****************
  2281 ;; Defined at:
  2282 ;;		line 145 in file "lab5ej2.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, status,2
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           
  2311                           ;psect for function _InitTMR1
  2312  0F11                     _InitTMR1:	
  2313                           
  2314                           ;lab5ej2.c: 147: T1CON=T1CON | 0x30;
  2315                           
  2316                           ;incstack = 0
  2317                           ; Regs used in _InitTMR1: [wreg+status,2]
  2318  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0F13  0810               	movf	16,w	;volatile
  2321  0F14  3830               	iorlw	48
  2322  0F15  0090               	movwf	16	;volatile
  2323                           
  2324                           ;lab5ej2.c: 148: T1CONbits.TMR1CS = 0;
  2325  0F16  1090               	bcf	16,1	;volatile
  2326                           
  2327                           ;lab5ej2.c: 149: T1CONbits.TMR1GE = 0;
  2328  0F17  1310               	bcf	16,6	;volatile
  2329                           
  2330                           ;lab5ej2.c: 150: TMR1= 3036;
  2331  0F18  300B               	movlw	11
  2332  0F19  008F               	movwf	15	;volatile
  2333  0F1A  30DC               	movlw	220
  2334  0F1B  008E               	movwf	14	;volatile
  2335                           
  2336                           ;lab5ej2.c: 151: PIR1bits.TMR1IF = 0;
  2337  0F1C  100C               	bcf	12,0	;volatile
  2338                           
  2339                           ;lab5ej2.c: 152: INTCONbits.GIE = 1;
  2340  0F1D  178B               	bsf	11,7	;volatile
  2341                           
  2342                           ;lab5ej2.c: 153: INTCONbits.PEIE = 1;
  2343  0F1E  170B               	bsf	11,6	;volatile
  2344                           
  2345                           ;lab5ej2.c: 154: PIE1bits.TMR1IE = 1;
  2346  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0F21  140C               	bsf	12,0	;volatile
  2349                           
  2350                           ;lab5ej2.c: 155: T1CONbits.TMR1ON = 1;
  2351  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0F24  1410               	bsf	16,0	;volatile
  2354  0F25  0008               	return
  2355  0F26                     __end_of_InitTMR1:	
  2356                           
  2357                           	psect	text10
  2358  0EFC                     __ptext10:	
  2359 ;; *************** function _InitES *****************
  2360 ;; Defined at:
  2361 ;;		line 130 in file "lab5ej2.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  1    wreg      void 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2375 ;;      Params:         0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0
  2377 ;;      Temps:          0       0       0       0       0
  2378 ;;      Totals:         0       0       0       0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    1
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_main
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function _InitES
  2391  0EFC                     _InitES:	
  2392                           
  2393                           ;lab5ej2.c: 132: ANSEL=0b00000001;
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in _InitES: [wreg+status,2]
  2397  0EFC  3001               	movlw	1
  2398  0EFD  1683               	bsf	3,5	;RP0=1, select bank3
  2399  0EFE  1703               	bsf	3,6	;RP1=1, select bank3
  2400  0EFF  0088               	movwf	8	;volatile
  2401                           
  2402                           ;lab5ej2.c: 133: ANSELH=0;
  2403  0F00  0189               	clrf	9	;volatile
  2404                           
  2405                           ;lab5ej2.c: 134: TRISB=0b00000000;
  2406  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0F03  0186               	clrf	6	;volatile
  2409                           
  2410                           ;lab5ej2.c: 135: TRISCbits.TRISC6=0;
  2411  0F04  1307               	bcf	7,6	;volatile
  2412                           
  2413                           ;lab5ej2.c: 136: TRISCbits.TRISC7=1;
  2414  0F05  1787               	bsf	7,7	;volatile
  2415                           
  2416                           ;lab5ej2.c: 137: TRISA=0b00000001;
  2417  0F06  3001               	movlw	1
  2418  0F07  0085               	movwf	5	;volatile
  2419                           
  2420                           ;lab5ej2.c: 138: ADCON1bits.VCFG0=0;
  2421  0F08  121F               	bcf	31,4	;volatile
  2422                           
  2423                           ;lab5ej2.c: 139: ADCON1bits.VCFG1=0;
  2424  0F09  129F               	bcf	31,5	;volatile
  2425                           
  2426                           ;lab5ej2.c: 140: ADCON1bits.ADFM=1;
  2427  0F0A  179F               	bsf	31,7	;volatile
  2428                           
  2429                           ;lab5ej2.c: 141: ADCON0=0b10000001;
  2430  0F0B  3081               	movlw	129
  2431  0F0C  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0F0D  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0F0E  009F               	movwf	31	;volatile
  2434                           
  2435                           ;lab5ej2.c: 142: PORTA=0;
  2436  0F0F  0185               	clrf	5	;volatile
  2437  0F10  0008               	return
  2438  0F11                     __end_of_InitES:	
  2439                           
  2440                           	psect	text11
  2441  01A8                     __ptext11:	
  2442 ;; *************** function _Adquisicion *****************
  2443 ;; Defined at:
  2444 ;;		line 172 in file "lab5ej2.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;		None
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         0       0       0       0       0
  2459 ;;      Locals:         0       3       0       0       0
  2460 ;;      Temps:          0       2       0       0       0
  2461 ;;      Totals:         0       5       0       0       0
  2462 ;;Total ram usage:        5 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    3
  2465 ;; This function calls:
  2466 ;;		___awdiv
  2467 ;;		___awtoft
  2468 ;;		___ftadd
  2469 ;;		___ftmul
  2470 ;;		___ftneg
  2471 ;;		___fttol
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _Adquisicion
  2479  01A8                     _Adquisicion:	
  2480                           
  2481                           ;lab5ej2.c: 174: adc=ADRESH;
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _Adquisicion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2485  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  2486  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  2487  01AA  081E               	movf	30,w	;volatile
  2488  01AB  00DD               	movwf	??_Adquisicion
  2489  01AC  01DE               	clrf	??_Adquisicion+1
  2490  01AD  085D               	movf	??_Adquisicion,w
  2491  01AE  00ED               	movwf	_adc
  2492  01AF  085E               	movf	??_Adquisicion+1,w
  2493  01B0  00EE               	movwf	_adc+1
  2494                           
  2495                           ;lab5ej2.c: 175: adc=adc<<8;
  2496  01B1  086E               	movf	_adc+1,w
  2497  01B2  00DE               	movwf	??_Adquisicion+1
  2498  01B3  086D               	movf	_adc,w
  2499  01B4  00DD               	movwf	??_Adquisicion
  2500  01B5  085D               	movf	??_Adquisicion,w
  2501  01B6  00DE               	movwf	??_Adquisicion+1
  2502  01B7  01DD               	clrf	??_Adquisicion
  2503  01B8  085D               	movf	??_Adquisicion,w
  2504  01B9  00ED               	movwf	_adc
  2505  01BA  085E               	movf	??_Adquisicion+1,w
  2506  01BB  00EE               	movwf	_adc+1
  2507                           
  2508                           ;lab5ej2.c: 176: adc=adc+ADRESL;
  2509  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2510  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2511  01BE  081E               	movf	30,w	;volatile
  2512  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2513  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2514  01C1  076D               	addwf	_adc,w
  2515  01C2  00DD               	movwf	??_Adquisicion
  2516  01C3  086E               	movf	_adc+1,w
  2517  01C4  1803               	skipnc
  2518  01C5  0A6E               	incf	_adc+1,w
  2519  01C6  00DE               	movwf	??_Adquisicion+1
  2520  01C7  085D               	movf	??_Adquisicion,w
  2521  01C8  00ED               	movwf	_adc
  2522  01C9  085E               	movf	??_Adquisicion+1,w
  2523  01CA  00EE               	movwf	_adc+1
  2524                           
  2525                           ;lab5ej2.c: 177: temp=(125/1023.0)*adc-25.0;
  2526  01CB  3000               	movlw	0
  2527  01CC  00C2               	movwf	___ftadd@f1
  2528  01CD  30C8               	movlw	200
  2529  01CE  00C3               	movwf	___ftadd@f1+1
  2530  01CF  30C1               	movlw	193
  2531  01D0  00C4               	movwf	___ftadd@f1+2
  2532  01D1  303F               	movlw	63
  2533  01D2  00B2               	movwf	___ftmul@f1
  2534  01D3  30FA               	movlw	250
  2535  01D4  00B3               	movwf	___ftmul@f1+1
  2536  01D5  303D               	movlw	61
  2537  01D6  00B4               	movwf	___ftmul@f1+2
  2538  01D7  086E               	movf	_adc+1,w
  2539  01D8  00AA               	movwf	___awtoft@c+1
  2540  01D9  086D               	movf	_adc,w
  2541  01DA  00A9               	movwf	___awtoft@c
  2542  01DB  120A  118A  27DB  120A  118A  	fcall	___awtoft
  2543  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2544  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  2545  01E2  0829               	movf	?___awtoft,w
  2546  01E3  00B5               	movwf	___ftmul@f2
  2547  01E4  082A               	movf	?___awtoft+1,w
  2548  01E5  00B6               	movwf	___ftmul@f2+1
  2549  01E6  082B               	movf	?___awtoft+2,w
  2550  01E7  00B7               	movwf	___ftmul@f2+2
  2551  01E8  120A  118A  24F6  120A  118A  	fcall	___ftmul
  2552  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  2553  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  2554  01EF  0832               	movf	?___ftmul,w
  2555  01F0  00C5               	movwf	___ftadd@f2
  2556  01F1  0833               	movf	?___ftmul+1,w
  2557  01F2  00C6               	movwf	___ftadd@f2+1
  2558  01F3  0834               	movf	?___ftmul+2,w
  2559  01F4  00C7               	movwf	___ftadd@f2+2
  2560  01F5  120A  118A  22E5  120A  118A  	fcall	___ftadd
  2561  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2562  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2563  01FC  0842               	movf	?___ftadd,w
  2564  01FD  00E2               	movwf	_temp
  2565  01FE  0843               	movf	?___ftadd+1,w
  2566  01FF  00E3               	movwf	_temp+1
  2567  0200  0844               	movf	?___ftadd+2,w
  2568  0201  00E4               	movwf	_temp+2
  2569                           
  2570                           ;lab5ej2.c: 178: unitemp=temp;
  2571  0202  0862               	movf	_temp,w
  2572  0203  00CF               	movwf	___fttol@f1
  2573  0204  0863               	movf	_temp+1,w
  2574  0205  00D0               	movwf	___fttol@f1+1
  2575  0206  0864               	movf	_temp+2,w
  2576  0207  00D1               	movwf	___fttol@f1+2
  2577  0208  120A  118A  25C9  120A  118A  	fcall	___fttol
  2578  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2579  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2580  020F  0850               	movf	?___fttol+1,w
  2581  0210  00EA               	movwf	_unitemp+1
  2582  0211  084F               	movf	?___fttol,w
  2583  0212  00E9               	movwf	_unitemp
  2584                           
  2585                           ;lab5ej2.c: 179: dectemp=(temp-unitemp)*10;
  2586  0213  086A               	movf	_unitemp+1,w
  2587  0214  00AA               	movwf	___awtoft@c+1
  2588  0215  0869               	movf	_unitemp,w
  2589  0216  00A9               	movwf	___awtoft@c
  2590  0217  120A  118A  27DB  120A  118A  	fcall	___awtoft
  2591  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2592  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2593  021E  0829               	movf	?___awtoft,w
  2594  021F  00AF               	movwf	___ftneg@f1
  2595  0220  082A               	movf	?___awtoft+1,w
  2596  0221  00B0               	movwf	___ftneg@f1+1
  2597  0222  082B               	movf	?___awtoft+2,w
  2598  0223  00B1               	movwf	___ftneg@f1+2
  2599  0224  120A  158A  26CE  120A  118A  	fcall	___ftneg
  2600  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2601  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2602  022B  082F               	movf	?___ftneg,w
  2603  022C  00C5               	movwf	___ftadd@f2
  2604  022D  0830               	movf	?___ftneg+1,w
  2605  022E  00C6               	movwf	___ftadd@f2+1
  2606  022F  0831               	movf	?___ftneg+2,w
  2607  0230  00C7               	movwf	___ftadd@f2+2
  2608  0231  0862               	movf	_temp,w
  2609  0232  00C2               	movwf	___ftadd@f1
  2610  0233  0863               	movf	_temp+1,w
  2611  0234  00C3               	movwf	___ftadd@f1+1
  2612  0235  0864               	movf	_temp+2,w
  2613  0236  00C4               	movwf	___ftadd@f1+2
  2614  0237  120A  118A  22E5  120A  118A  	fcall	___ftadd
  2615  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2616  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2617  023E  0842               	movf	?___ftadd,w
  2618  023F  00B5               	movwf	___ftmul@f2
  2619  0240  0843               	movf	?___ftadd+1,w
  2620  0241  00B6               	movwf	___ftmul@f2+1
  2621  0242  0844               	movf	?___ftadd+2,w
  2622  0243  00B7               	movwf	___ftmul@f2+2
  2623  0244  3000               	movlw	0
  2624  0245  00B2               	movwf	___ftmul@f1
  2625  0246  3020               	movlw	32
  2626  0247  00B3               	movwf	___ftmul@f1+1
  2627  0248  3041               	movlw	65
  2628  0249  00B4               	movwf	___ftmul@f1+2
  2629  024A  120A  118A  24F6  120A  118A  	fcall	___ftmul
  2630  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0251  0832               	movf	?___ftmul,w
  2633  0252  00CF               	movwf	___fttol@f1
  2634  0253  0833               	movf	?___ftmul+1,w
  2635  0254  00D0               	movwf	___fttol@f1+1
  2636  0255  0834               	movf	?___ftmul+2,w
  2637  0256  00D1               	movwf	___fttol@f1+2
  2638  0257  120A  118A  25C9  120A  118A  	fcall	___fttol
  2639  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2640  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2641  025E  0850               	movf	?___fttol+1,w
  2642  025F  00E8               	movwf	_dectemp+1
  2643  0260  084F               	movf	?___fttol,w
  2644  0261  00E7               	movwf	_dectemp
  2645                           
  2646                           ;lab5ej2.c: 180: centemp=(temp-unitemp-dectemp/10)*100;
  2647  0262  086A               	movf	_unitemp+1,w
  2648  0263  00AA               	movwf	___awtoft@c+1
  2649  0264  0869               	movf	_unitemp,w
  2650  0265  00A9               	movwf	___awtoft@c
  2651  0266  120A  118A  27DB  120A  118A  	fcall	___awtoft
  2652  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2653  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2654  026D  0829               	movf	?___awtoft,w
  2655  026E  00C5               	movwf	___ftadd@f2
  2656  026F  082A               	movf	?___awtoft+1,w
  2657  0270  00C6               	movwf	___ftadd@f2+1
  2658  0271  082B               	movf	?___awtoft+2,w
  2659  0272  00C7               	movwf	___ftadd@f2+2
  2660  0273  0868               	movf	_dectemp+1,w
  2661  0274  00A3               	movwf	___awdiv@dividend+1
  2662  0275  0867               	movf	_dectemp,w
  2663  0276  00A2               	movwf	___awdiv@dividend
  2664  0277  300A               	movlw	10
  2665  0278  00A0               	movwf	___awdiv@divisor
  2666  0279  3000               	movlw	0
  2667  027A  00A1               	movwf	___awdiv@divisor+1
  2668  027B  120A  118A  2780  120A  118A  	fcall	___awdiv
  2669  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0282  0821               	movf	?___awdiv+1,w
  2672  0283  00AA               	movwf	___awtoft@c+1
  2673  0284  0820               	movf	?___awdiv,w
  2674  0285  00A9               	movwf	___awtoft@c
  2675  0286  120A  118A  27DB  120A  118A  	fcall	___awtoft
  2676  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2677  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2678  028D  0829               	movf	?___awtoft,w
  2679  028E  00C2               	movwf	___ftadd@f1
  2680  028F  082A               	movf	?___awtoft+1,w
  2681  0290  00C3               	movwf	___ftadd@f1+1
  2682  0291  082B               	movf	?___awtoft+2,w
  2683  0292  00C4               	movwf	___ftadd@f1+2
  2684  0293  120A  118A  22E5  120A  118A  	fcall	___ftadd
  2685  0298  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0299  1303               	bcf	3,6	;RP1=0, select bank0
  2687  029A  0842               	movf	?___ftadd,w
  2688  029B  00AF               	movwf	___ftneg@f1
  2689  029C  0843               	movf	?___ftadd+1,w
  2690  029D  00B0               	movwf	___ftneg@f1+1
  2691  029E  0844               	movf	?___ftadd+2,w
  2692  029F  00B1               	movwf	___ftneg@f1+2
  2693  02A0  120A  158A  26CE  120A  118A  	fcall	___ftneg
  2694  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2695  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2696  02A7  082F               	movf	?___ftneg,w
  2697  02A8  00DF               	movwf	_Adquisicion$882
  2698  02A9  0830               	movf	?___ftneg+1,w
  2699  02AA  00E0               	movwf	_Adquisicion$882+1
  2700  02AB  0831               	movf	?___ftneg+2,w
  2701  02AC  00E1               	movwf	_Adquisicion$882+2
  2702                           
  2703                           ;lab5ej2.c: 180: centemp=(temp-unitemp-dectemp/10)*100;
  2704  02AD  085F               	movf	_Adquisicion$882,w
  2705  02AE  00C5               	movwf	___ftadd@f2
  2706  02AF  0860               	movf	_Adquisicion$882+1,w
  2707  02B0  00C6               	movwf	___ftadd@f2+1
  2708  02B1  0861               	movf	_Adquisicion$882+2,w
  2709  02B2  00C7               	movwf	___ftadd@f2+2
  2710  02B3  0862               	movf	_temp,w
  2711  02B4  00C2               	movwf	___ftadd@f1
  2712  02B5  0863               	movf	_temp+1,w
  2713  02B6  00C3               	movwf	___ftadd@f1+1
  2714  02B7  0864               	movf	_temp+2,w
  2715  02B8  00C4               	movwf	___ftadd@f1+2
  2716  02B9  120A  118A  22E5  120A  118A  	fcall	___ftadd
  2717  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2718  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2719  02C0  0842               	movf	?___ftadd,w
  2720  02C1  00B5               	movwf	___ftmul@f2
  2721  02C2  0843               	movf	?___ftadd+1,w
  2722  02C3  00B6               	movwf	___ftmul@f2+1
  2723  02C4  0844               	movf	?___ftadd+2,w
  2724  02C5  00B7               	movwf	___ftmul@f2+2
  2725  02C6  3000               	movlw	0
  2726  02C7  00B2               	movwf	___ftmul@f1
  2727  02C8  30C8               	movlw	200
  2728  02C9  00B3               	movwf	___ftmul@f1+1
  2729  02CA  3042               	movlw	66
  2730  02CB  00B4               	movwf	___ftmul@f1+2
  2731  02CC  120A  118A  24F6  120A  118A  	fcall	___ftmul
  2732  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2733  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2734  02D3  0832               	movf	?___ftmul,w
  2735  02D4  00CF               	movwf	___fttol@f1
  2736  02D5  0833               	movf	?___ftmul+1,w
  2737  02D6  00D0               	movwf	___fttol@f1+1
  2738  02D7  0834               	movf	?___ftmul+2,w
  2739  02D8  00D1               	movwf	___fttol@f1+2
  2740  02D9  120A  118A  25C9   	fcall	___fttol
  2741  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2742  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2743  02DE  0850               	movf	?___fttol+1,w
  2744  02DF  00E6               	movwf	_centemp+1
  2745  02E0  084F               	movf	?___fttol,w
  2746  02E1  00E5               	movwf	_centemp
  2747                           
  2748                           ;lab5ej2.c: 181: banderaadquirido=1;
  2749  02E2  01EB               	clrf	_banderaadquirido
  2750  02E3  0AEB               	incf	_banderaadquirido,f
  2751  02E4  0008               	return
  2752  02E5                     __end_of_Adquisicion:	
  2753                           
  2754                           	psect	text12
  2755  05C9                     __ptext12:	
  2756 ;; *************** function ___fttol *****************
  2757 ;; Defined at:
  2758 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  f1              3   47[BANK0 ] float 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  lval            4   56[BANK0 ] unsigned long 
  2763 ;;  exp1            1   60[BANK0 ] unsigned char 
  2764 ;;  sign1           1   55[BANK0 ] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  4   47[BANK0 ] long 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       4       0       0       0
  2775 ;;      Locals:         0       6       0       0       0
  2776 ;;      Temps:          0       4       0       0       0
  2777 ;;      Totals:         0      14       0       0       0
  2778 ;;Total ram usage:       14 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_Adquisicion
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function ___fttol
  2790  05C9                     ___fttol:	
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2794  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  2795  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  2796  05CB  084F               	movf	___fttol@f1,w
  2797  05CC  00D3               	movwf	??___fttol
  2798  05CD  0850               	movf	___fttol@f1+1,w
  2799  05CE  00D4               	movwf	??___fttol+1
  2800  05CF  0851               	movf	___fttol@f1+2,w
  2801  05D0  00D5               	movwf	??___fttol+2
  2802  05D1  1003               	clrc
  2803  05D2  0D54               	rlf	??___fttol+1,w
  2804  05D3  0D55               	rlf	??___fttol+2,w
  2805  05D4  00D6               	movwf	??___fttol+3
  2806  05D5  0856               	movf	??___fttol+3,w
  2807  05D6  00DC               	movwf	___fttol@exp1
  2808  05D7  085C               	movf	___fttol@exp1,w
  2809  05D8  1D03               	btfss	3,2
  2810  05D9  2DE3               	goto	l2117
  2811  05DA  3000               	movlw	0
  2812  05DB  00D2               	movwf	?___fttol+3
  2813  05DC  3000               	movlw	0
  2814  05DD  00D1               	movwf	?___fttol+2
  2815  05DE  3000               	movlw	0
  2816  05DF  00D0               	movwf	?___fttol+1
  2817  05E0  3000               	movlw	0
  2818  05E1  00CF               	movwf	?___fttol
  2819  05E2  0008               	return
  2820  05E3                     l2117:	
  2821  05E3  084F               	movf	___fttol@f1,w
  2822  05E4  00D3               	movwf	??___fttol
  2823  05E5  0850               	movf	___fttol@f1+1,w
  2824  05E6  00D4               	movwf	??___fttol+1
  2825  05E7  0851               	movf	___fttol@f1+2,w
  2826  05E8  00D5               	movwf	??___fttol+2
  2827  05E9  3017               	movlw	23
  2828  05EA                     u3405:	
  2829  05EA  1003               	clrc
  2830  05EB  0CD5               	rrf	??___fttol+2,f
  2831  05EC  0CD4               	rrf	??___fttol+1,f
  2832  05ED  0CD3               	rrf	??___fttol,f
  2833  05EE  3EFF               	addlw	-1
  2834  05EF  1D03               	skipz
  2835  05F0  2DEA               	goto	u3405
  2836  05F1  0853               	movf	??___fttol,w
  2837  05F2  00D6               	movwf	??___fttol+3
  2838  05F3  0856               	movf	??___fttol+3,w
  2839  05F4  00D7               	movwf	___fttol@sign1
  2840  05F5  17D0               	bsf	___fttol@f1+1,7
  2841  05F6  30FF               	movlw	255
  2842  05F7  05CF               	andwf	___fttol@f1,f
  2843  05F8  30FF               	movlw	255
  2844  05F9  05D0               	andwf	___fttol@f1+1,f
  2845  05FA  3000               	movlw	0
  2846  05FB  05D1               	andwf	___fttol@f1+2,f
  2847  05FC  084F               	movf	___fttol@f1,w
  2848  05FD  00D8               	movwf	___fttol@lval
  2849  05FE  0850               	movf	___fttol@f1+1,w
  2850  05FF  00D9               	movwf	___fttol@lval+1
  2851  0600  0851               	movf	___fttol@f1+2,w
  2852  0601  00DA               	movwf	___fttol@lval+2
  2853  0602  01DB               	clrf	___fttol@lval+3
  2854  0603  308E               	movlw	142
  2855  0604  02DC               	subwf	___fttol@exp1,f
  2856  0605  1FDC               	btfss	___fttol@exp1,7
  2857  0606  2E25               	goto	l2137
  2858  0607  085C               	movf	___fttol@exp1,w
  2859  0608  3A80               	xorlw	128
  2860  0609  3E8F               	addlw	143
  2861  060A  1803               	skipnc
  2862  060B  2E15               	goto	l2135
  2863  060C  3000               	movlw	0
  2864  060D  00D2               	movwf	?___fttol+3
  2865  060E  3000               	movlw	0
  2866  060F  00D1               	movwf	?___fttol+2
  2867  0610  3000               	movlw	0
  2868  0611  00D0               	movwf	?___fttol+1
  2869  0612  3000               	movlw	0
  2870  0613  00CF               	movwf	?___fttol
  2871  0614  0008               	return
  2872  0615                     l2135:	
  2873  0615  3001               	movlw	1
  2874  0616                     u3435:	
  2875  0616  1003               	clrc
  2876  0617  0CDB               	rrf	___fttol@lval+3,f
  2877  0618  0CDA               	rrf	___fttol@lval+2,f
  2878  0619  0CD9               	rrf	___fttol@lval+1,f
  2879  061A  0CD8               	rrf	___fttol@lval,f
  2880  061B  3EFF               	addlw	-1
  2881  061C  1D03               	skipz
  2882  061D  2E16               	goto	u3435
  2883  061E  3001               	movlw	1
  2884  061F  00D3               	movwf	??___fttol
  2885  0620  0853               	movf	??___fttol,w
  2886  0621  07DC               	addwf	___fttol@exp1,f
  2887  0622  1903               	btfsc	3,2
  2888  0623  2E40               	goto	l2145
  2889  0624  2E15               	goto	l2135
  2890  0625                     l2137:	
  2891  0625  3018               	movlw	24
  2892  0626  025C               	subwf	___fttol@exp1,w
  2893  0627  1C03               	skipc
  2894  0628  2E3D               	goto	l536
  2895  0629  3000               	movlw	0
  2896  062A  00D2               	movwf	?___fttol+3
  2897  062B  3000               	movlw	0
  2898  062C  00D1               	movwf	?___fttol+2
  2899  062D  3000               	movlw	0
  2900  062E  00D0               	movwf	?___fttol+1
  2901  062F  3000               	movlw	0
  2902  0630  00CF               	movwf	?___fttol
  2903  0631  0008               	return
  2904  0632                     l2143:	
  2905  0632  3001               	movlw	1
  2906  0633  00D3               	movwf	??___fttol
  2907  0634                     u3465:	
  2908  0634  1003               	clrc
  2909  0635  0DD8               	rlf	___fttol@lval,f
  2910  0636  0DD9               	rlf	___fttol@lval+1,f
  2911  0637  0DDA               	rlf	___fttol@lval+2,f
  2912  0638  0DDB               	rlf	___fttol@lval+3,f
  2913  0639  0BD3               	decfsz	??___fttol,f
  2914  063A  2E34               	goto	u3465
  2915  063B  3001               	movlw	1
  2916  063C  02DC               	subwf	___fttol@exp1,f
  2917  063D                     l536:	
  2918  063D  085C               	movf	___fttol@exp1,w
  2919  063E  1D03               	btfss	3,2
  2920  063F  2E32               	goto	l2143
  2921  0640                     l2145:	
  2922  0640  0857               	movf	___fttol@sign1,w
  2923  0641  1903               	btfsc	3,2
  2924  0642  2E4E               	goto	l2149
  2925  0643  09D8               	comf	___fttol@lval,f
  2926  0644  09D9               	comf	___fttol@lval+1,f
  2927  0645  09DA               	comf	___fttol@lval+2,f
  2928  0646  09DB               	comf	___fttol@lval+3,f
  2929  0647  0AD8               	incf	___fttol@lval,f
  2930  0648  1903               	skipnz
  2931  0649  0AD9               	incf	___fttol@lval+1,f
  2932  064A  1903               	skipnz
  2933  064B  0ADA               	incf	___fttol@lval+2,f
  2934  064C  1903               	skipnz
  2935  064D  0ADB               	incf	___fttol@lval+3,f
  2936  064E                     l2149:	
  2937  064E  085B               	movf	___fttol@lval+3,w
  2938  064F  00D2               	movwf	?___fttol+3
  2939  0650  085A               	movf	___fttol@lval+2,w
  2940  0651  00D1               	movwf	?___fttol+2
  2941  0652  0859               	movf	___fttol@lval+1,w
  2942  0653  00D0               	movwf	?___fttol+1
  2943  0654  0858               	movf	___fttol@lval,w
  2944  0655  00CF               	movwf	?___fttol
  2945  0656  0008               	return
  2946  0657                     __end_of___fttol:	
  2947                           
  2948                           	psect	text13
  2949  0ECE                     __ptext13:	
  2950 ;; *************** function ___ftneg *****************
  2951 ;; Defined at:
  2952 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  f1              3   15[BANK0 ] float 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  3   15[BANK0 ] float 
  2959 ;; Registers used:
  2960 ;;		wreg
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       3       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          0       0       0       0       0
  2969 ;;      Totals:         0       3       0       0       0
  2970 ;;Total ram usage:        3 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_Adquisicion
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function ___ftneg
  2982  0ECE                     ___ftneg:	
  2983                           
  2984                           ;incstack = 0
  2985                           ; Regs used in ___ftneg: [wreg]
  2986  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2987  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2988  0ED0  0831               	movf	___ftneg@f1+2,w
  2989  0ED1  0430               	iorwf	___ftneg@f1+1,w
  2990  0ED2  042F               	iorwf	___ftneg@f1,w
  2991  0ED3  1903               	skipnz
  2992  0ED4  0008               	return
  2993  0ED5  3080               	movlw	128
  2994  0ED6  06B1               	xorwf	___ftneg@f1+2,f
  2995  0ED7  0008               	return
  2996  0ED8                     __end_of___ftneg:	
  2997                           
  2998                           	psect	text14
  2999  04F6                     __ptext14:	
  3000 ;; *************** function ___ftmul *****************
  3001 ;; Defined at:
  3002 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  f1              3   18[BANK0 ] float 
  3005 ;;  f2              3   21[BANK0 ] float 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  f3_as_produc    3   29[BANK0 ] unsigned um
  3008 ;;  sign            1   33[BANK0 ] unsigned char 
  3009 ;;  cntr            1   32[BANK0 ] unsigned char 
  3010 ;;  exp             1   28[BANK0 ] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  3   18[BANK0 ] float 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         0       6       0       0       0
  3021 ;;      Locals:         0       6       0       0       0
  3022 ;;      Temps:          0       4       0       0       0
  3023 ;;      Totals:         0      16       0       0       0
  3024 ;;Total ram usage:       16 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    2
  3027 ;; This function calls:
  3028 ;;		___ftpack
  3029 ;; This function is called by:
  3030 ;;		_Adquisicion
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function ___ftmul
  3036  04F6                     ___ftmul:	
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3040  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3041  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3042  04F8  0832               	movf	___ftmul@f1,w
  3043  04F9  00B8               	movwf	??___ftmul
  3044  04FA  0833               	movf	___ftmul@f1+1,w
  3045  04FB  00B9               	movwf	??___ftmul+1
  3046  04FC  0834               	movf	___ftmul@f1+2,w
  3047  04FD  00BA               	movwf	??___ftmul+2
  3048  04FE  1003               	clrc
  3049  04FF  0D39               	rlf	??___ftmul+1,w
  3050  0500  0D3A               	rlf	??___ftmul+2,w
  3051  0501  00BB               	movwf	??___ftmul+3
  3052  0502  083B               	movf	??___ftmul+3,w
  3053  0503  00BC               	movwf	___ftmul@exp
  3054  0504  083C               	movf	___ftmul@exp,w
  3055  0505  1D03               	btfss	3,2
  3056  0506  2D0E               	goto	l2059
  3057  0507  3000               	movlw	0
  3058  0508  00B2               	movwf	?___ftmul
  3059  0509  3000               	movlw	0
  3060  050A  00B3               	movwf	?___ftmul+1
  3061  050B  3000               	movlw	0
  3062  050C  00B4               	movwf	?___ftmul+2
  3063  050D  0008               	return
  3064  050E                     l2059:	
  3065  050E  0835               	movf	___ftmul@f2,w
  3066  050F  00B8               	movwf	??___ftmul
  3067  0510  0836               	movf	___ftmul@f2+1,w
  3068  0511  00B9               	movwf	??___ftmul+1
  3069  0512  0837               	movf	___ftmul@f2+2,w
  3070  0513  00BA               	movwf	??___ftmul+2
  3071  0514  1003               	clrc
  3072  0515  0D39               	rlf	??___ftmul+1,w
  3073  0516  0D3A               	rlf	??___ftmul+2,w
  3074  0517  00BB               	movwf	??___ftmul+3
  3075  0518  083B               	movf	??___ftmul+3,w
  3076  0519  00C1               	movwf	___ftmul@sign
  3077  051A  0841               	movf	___ftmul@sign,w
  3078  051B  1D03               	btfss	3,2
  3079  051C  2D24               	goto	l2065
  3080  051D  3000               	movlw	0
  3081  051E  00B2               	movwf	?___ftmul
  3082  051F  3000               	movlw	0
  3083  0520  00B3               	movwf	?___ftmul+1
  3084  0521  3000               	movlw	0
  3085  0522  00B4               	movwf	?___ftmul+2
  3086  0523  0008               	return
  3087  0524                     l2065:	
  3088  0524  0841               	movf	___ftmul@sign,w
  3089  0525  3E7B               	addlw	123
  3090  0526  00B8               	movwf	??___ftmul
  3091  0527  0838               	movf	??___ftmul,w
  3092  0528  07BC               	addwf	___ftmul@exp,f
  3093  0529  0832               	movf	___ftmul@f1,w
  3094  052A  00B8               	movwf	??___ftmul
  3095  052B  0833               	movf	___ftmul@f1+1,w
  3096  052C  00B9               	movwf	??___ftmul+1
  3097  052D  0834               	movf	___ftmul@f1+2,w
  3098  052E  00BA               	movwf	??___ftmul+2
  3099  052F  3010               	movlw	16
  3100  0530                     u3265:	
  3101  0530  1003               	clrc
  3102  0531  0CBA               	rrf	??___ftmul+2,f
  3103  0532  0CB9               	rrf	??___ftmul+1,f
  3104  0533  0CB8               	rrf	??___ftmul,f
  3105  0534  3EFF               	addlw	-1
  3106  0535  1D03               	skipz
  3107  0536  2D30               	goto	u3265
  3108  0537  0838               	movf	??___ftmul,w
  3109  0538  00BB               	movwf	??___ftmul+3
  3110  0539  083B               	movf	??___ftmul+3,w
  3111  053A  00C1               	movwf	___ftmul@sign
  3112  053B  0835               	movf	___ftmul@f2,w
  3113  053C  00B8               	movwf	??___ftmul
  3114  053D  0836               	movf	___ftmul@f2+1,w
  3115  053E  00B9               	movwf	??___ftmul+1
  3116  053F  0837               	movf	___ftmul@f2+2,w
  3117  0540  00BA               	movwf	??___ftmul+2
  3118  0541  3010               	movlw	16
  3119  0542                     u3275:	
  3120  0542  1003               	clrc
  3121  0543  0CBA               	rrf	??___ftmul+2,f
  3122  0544  0CB9               	rrf	??___ftmul+1,f
  3123  0545  0CB8               	rrf	??___ftmul,f
  3124  0546  3EFF               	addlw	-1
  3125  0547  1D03               	skipz
  3126  0548  2D42               	goto	u3275
  3127  0549  0838               	movf	??___ftmul,w
  3128  054A  00BB               	movwf	??___ftmul+3
  3129  054B  083B               	movf	??___ftmul+3,w
  3130  054C  06C1               	xorwf	___ftmul@sign,f
  3131  054D  3080               	movlw	128
  3132  054E  00B8               	movwf	??___ftmul
  3133  054F  0838               	movf	??___ftmul,w
  3134  0550  05C1               	andwf	___ftmul@sign,f
  3135  0551  17B3               	bsf	___ftmul@f1+1,7
  3136  0552  17B6               	bsf	___ftmul@f2+1,7
  3137  0553  30FF               	movlw	255
  3138  0554  05B5               	andwf	___ftmul@f2,f
  3139  0555  30FF               	movlw	255
  3140  0556  05B6               	andwf	___ftmul@f2+1,f
  3141  0557  3000               	movlw	0
  3142  0558  05B7               	andwf	___ftmul@f2+2,f
  3143  0559  3000               	movlw	0
  3144  055A  00BD               	movwf	___ftmul@f3_as_product
  3145  055B  3000               	movlw	0
  3146  055C  00BE               	movwf	___ftmul@f3_as_product+1
  3147  055D  3000               	movlw	0
  3148  055E  00BF               	movwf	___ftmul@f3_as_product+2
  3149  055F  3007               	movlw	7
  3150  0560  00B8               	movwf	??___ftmul
  3151  0561  0838               	movf	??___ftmul,w
  3152  0562  00C0               	movwf	___ftmul@cntr
  3153  0563                     l2077:	
  3154  0563  1C32               	btfss	___ftmul@f1,0
  3155  0564  2D73               	goto	l2081
  3156  0565  0835               	movf	___ftmul@f2,w
  3157  0566  07BD               	addwf	___ftmul@f3_as_product,f
  3158  0567  0836               	movf	___ftmul@f2+1,w
  3159  0568  1103               	clrz
  3160  0569  1803               	skipnc
  3161  056A  0A36               	incf	___ftmul@f2+1,w
  3162  056B  1D03               	btfss	3,2
  3163  056C  07BE               	addwf	___ftmul@f3_as_product+1,f
  3164  056D  0837               	movf	___ftmul@f2+2,w
  3165  056E  1103               	clrz
  3166  056F  1803               	skipnc
  3167  0570  0A37               	incf	___ftmul@f2+2,w
  3168  0571  1D03               	btfss	3,2
  3169  0572  07BF               	addwf	___ftmul@f3_as_product+2,f
  3170  0573                     l2081:	
  3171  0573  3001               	movlw	1
  3172  0574                     u3305:	
  3173  0574  1003               	clrc
  3174  0575  0CB4               	rrf	___ftmul@f1+2,f
  3175  0576  0CB3               	rrf	___ftmul@f1+1,f
  3176  0577  0CB2               	rrf	___ftmul@f1,f
  3177  0578  3EFF               	addlw	-1
  3178  0579  1D03               	skipz
  3179  057A  2D74               	goto	u3305
  3180  057B  3001               	movlw	1
  3181  057C                     u3315:	
  3182  057C  1003               	clrc
  3183  057D  0DB5               	rlf	___ftmul@f2,f
  3184  057E  0DB6               	rlf	___ftmul@f2+1,f
  3185  057F  0DB7               	rlf	___ftmul@f2+2,f
  3186  0580  3EFF               	addlw	-1
  3187  0581  1D03               	skipz
  3188  0582  2D7C               	goto	u3315
  3189  0583  3001               	movlw	1
  3190  0584  02C0               	subwf	___ftmul@cntr,f
  3191  0585  1D03               	btfss	3,2
  3192  0586  2D63               	goto	l2077
  3193  0587  3009               	movlw	9
  3194  0588  00B8               	movwf	??___ftmul
  3195  0589  0838               	movf	??___ftmul,w
  3196  058A  00C0               	movwf	___ftmul@cntr
  3197  058B                     l2089:	
  3198  058B  1C32               	btfss	___ftmul@f1,0
  3199  058C  2D9B               	goto	l2093
  3200  058D  0835               	movf	___ftmul@f2,w
  3201  058E  07BD               	addwf	___ftmul@f3_as_product,f
  3202  058F  0836               	movf	___ftmul@f2+1,w
  3203  0590  1103               	clrz
  3204  0591  1803               	skipnc
  3205  0592  0A36               	incf	___ftmul@f2+1,w
  3206  0593  1D03               	btfss	3,2
  3207  0594  07BE               	addwf	___ftmul@f3_as_product+1,f
  3208  0595  0837               	movf	___ftmul@f2+2,w
  3209  0596  1103               	clrz
  3210  0597  1803               	skipnc
  3211  0598  0A37               	incf	___ftmul@f2+2,w
  3212  0599  1D03               	btfss	3,2
  3213  059A  07BF               	addwf	___ftmul@f3_as_product+2,f
  3214  059B                     l2093:	
  3215  059B  3001               	movlw	1
  3216  059C                     u3355:	
  3217  059C  1003               	clrc
  3218  059D  0CB4               	rrf	___ftmul@f1+2,f
  3219  059E  0CB3               	rrf	___ftmul@f1+1,f
  3220  059F  0CB2               	rrf	___ftmul@f1,f
  3221  05A0  3EFF               	addlw	-1
  3222  05A1  1D03               	skipz
  3223  05A2  2D9C               	goto	u3355
  3224  05A3  3001               	movlw	1
  3225  05A4                     u3365:	
  3226  05A4  1003               	clrc
  3227  05A5  0CBF               	rrf	___ftmul@f3_as_product+2,f
  3228  05A6  0CBE               	rrf	___ftmul@f3_as_product+1,f
  3229  05A7  0CBD               	rrf	___ftmul@f3_as_product,f
  3230  05A8  3EFF               	addlw	-1
  3231  05A9  1D03               	skipz
  3232  05AA  2DA4               	goto	u3365
  3233  05AB  3001               	movlw	1
  3234  05AC  02C0               	subwf	___ftmul@cntr,f
  3235  05AD  1D03               	btfss	3,2
  3236  05AE  2D8B               	goto	l2089
  3237  05AF  083D               	movf	___ftmul@f3_as_product,w
  3238  05B0  00A0               	movwf	___ftpack@arg
  3239  05B1  083E               	movf	___ftmul@f3_as_product+1,w
  3240  05B2  00A1               	movwf	___ftpack@arg+1
  3241  05B3  083F               	movf	___ftmul@f3_as_product+2,w
  3242  05B4  00A2               	movwf	___ftpack@arg+2
  3243  05B5  083C               	movf	___ftmul@exp,w
  3244  05B6  00B8               	movwf	??___ftmul
  3245  05B7  0838               	movf	??___ftmul,w
  3246  05B8  00A3               	movwf	___ftpack@exp
  3247  05B9  0841               	movf	___ftmul@sign,w
  3248  05BA  00B9               	movwf	??___ftmul+1
  3249  05BB  0839               	movf	??___ftmul+1,w
  3250  05BC  00A4               	movwf	___ftpack@sign
  3251  05BD  120A  118A  2657   	fcall	___ftpack
  3252  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3253  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  3254  05C2  0820               	movf	?___ftpack,w
  3255  05C3  00B2               	movwf	?___ftmul
  3256  05C4  0821               	movf	?___ftpack+1,w
  3257  05C5  00B3               	movwf	?___ftmul+1
  3258  05C6  0822               	movf	?___ftpack+2,w
  3259  05C7  00B4               	movwf	?___ftmul+2
  3260  05C8  0008               	return
  3261  05C9                     __end_of___ftmul:	
  3262                           
  3263                           	psect	text15
  3264  02E5                     __ptext15:	
  3265 ;; *************** function ___ftadd *****************
  3266 ;; Defined at:
  3267 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  f1              3   34[BANK0 ] float 
  3270 ;;  f2              3   37[BANK0 ] float 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  exp1            1   46[BANK0 ] unsigned char 
  3273 ;;  exp2            1   45[BANK0 ] unsigned char 
  3274 ;;  sign            1   44[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  3   34[BANK0 ] float 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       6       0       0       0
  3285 ;;      Locals:         0       3       0       0       0
  3286 ;;      Temps:          0       4       0       0       0
  3287 ;;      Totals:         0      13       0       0       0
  3288 ;;Total ram usage:       13 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    2
  3291 ;; This function calls:
  3292 ;;		___ftpack
  3293 ;; This function is called by:
  3294 ;;		_Adquisicion
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function ___ftadd
  3300  02E5                     ___ftadd:	
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3304  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3305  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3306  02E7  0842               	movf	___ftadd@f1,w
  3307  02E8  00C8               	movwf	??___ftadd
  3308  02E9  0843               	movf	___ftadd@f1+1,w
  3309  02EA  00C9               	movwf	??___ftadd+1
  3310  02EB  0844               	movf	___ftadd@f1+2,w
  3311  02EC  00CA               	movwf	??___ftadd+2
  3312  02ED  1003               	clrc
  3313  02EE  0D49               	rlf	??___ftadd+1,w
  3314  02EF  0D4A               	rlf	??___ftadd+2,w
  3315  02F0  00CB               	movwf	??___ftadd+3
  3316  02F1  084B               	movf	??___ftadd+3,w
  3317  02F2  00CE               	movwf	___ftadd@exp1
  3318  02F3  0845               	movf	___ftadd@f2,w
  3319  02F4  00C8               	movwf	??___ftadd
  3320  02F5  0846               	movf	___ftadd@f2+1,w
  3321  02F6  00C9               	movwf	??___ftadd+1
  3322  02F7  0847               	movf	___ftadd@f2+2,w
  3323  02F8  00CA               	movwf	??___ftadd+2
  3324  02F9  1003               	clrc
  3325  02FA  0D49               	rlf	??___ftadd+1,w
  3326  02FB  0D4A               	rlf	??___ftadd+2,w
  3327  02FC  00CB               	movwf	??___ftadd+3
  3328  02FD  084B               	movf	??___ftadd+3,w
  3329  02FE  00CD               	movwf	___ftadd@exp2
  3330  02FF  084E               	movf	___ftadd@exp1,w
  3331  0300  1903               	btfsc	3,2
  3332  0301  2B0E               	goto	l1989
  3333  0302  084D               	movf	___ftadd@exp2,w
  3334  0303  024E               	subwf	___ftadd@exp1,w
  3335  0304  1803               	skipnc
  3336  0305  2B15               	goto	l1993
  3337  0306  034E               	decf	___ftadd@exp1,w
  3338  0307  3AFF               	xorlw	255
  3339  0308  074D               	addwf	___ftadd@exp2,w
  3340  0309  00C8               	movwf	??___ftadd
  3341  030A  3019               	movlw	25
  3342  030B  0248               	subwf	??___ftadd,w
  3343  030C  1C03               	skipc
  3344  030D  2B15               	goto	l1993
  3345  030E                     l1989:	
  3346  030E  0845               	movf	___ftadd@f2,w
  3347  030F  00C2               	movwf	?___ftadd
  3348  0310  0846               	movf	___ftadd@f2+1,w
  3349  0311  00C3               	movwf	?___ftadd+1
  3350  0312  0847               	movf	___ftadd@f2+2,w
  3351  0313  00C4               	movwf	?___ftadd+2
  3352  0314  0008               	return
  3353  0315                     l1993:	
  3354  0315  084D               	movf	___ftadd@exp2,w
  3355  0316  1903               	btfsc	3,2
  3356  0317  0008               	return
  3357  0318  084E               	movf	___ftadd@exp1,w
  3358  0319  024D               	subwf	___ftadd@exp2,w
  3359  031A  1803               	skipnc
  3360  031B  2B24               	goto	l1999
  3361  031C  034D               	decf	___ftadd@exp2,w
  3362  031D  3AFF               	xorlw	255
  3363  031E  074E               	addwf	___ftadd@exp1,w
  3364  031F  00C8               	movwf	??___ftadd
  3365  0320  3019               	movlw	25
  3366  0321  0248               	subwf	??___ftadd,w
  3367  0322  1803               	btfsc	3,0
  3368  0323  0008               	return
  3369  0324                     l1999:	
  3370  0324  3006               	movlw	6
  3371  0325  00C8               	movwf	??___ftadd
  3372  0326  0848               	movf	??___ftadd,w
  3373  0327  00CC               	movwf	___ftadd@sign
  3374  0328  1BC4               	btfsc	___ftadd@f1+2,7
  3375  0329  17CC               	bsf	___ftadd@sign,7
  3376  032A  1BC7               	btfsc	___ftadd@f2+2,7
  3377  032B  174C               	bsf	___ftadd@sign,6
  3378  032C  17C3               	bsf	___ftadd@f1+1,7
  3379  032D  30FF               	movlw	255
  3380  032E  05C2               	andwf	___ftadd@f1,f
  3381  032F  30FF               	movlw	255
  3382  0330  05C3               	andwf	___ftadd@f1+1,f
  3383  0331  3000               	movlw	0
  3384  0332  05C4               	andwf	___ftadd@f1+2,f
  3385  0333  17C6               	bsf	___ftadd@f2+1,7
  3386  0334  30FF               	movlw	255
  3387  0335  05C5               	andwf	___ftadd@f2,f
  3388  0336  30FF               	movlw	255
  3389  0337  05C6               	andwf	___ftadd@f2+1,f
  3390  0338  3000               	movlw	0
  3391  0339  05C7               	andwf	___ftadd@f2+2,f
  3392  033A  084D               	movf	___ftadd@exp2,w
  3393  033B  024E               	subwf	___ftadd@exp1,w
  3394  033C  1803               	skipnc
  3395  033D  2B64               	goto	l2021
  3396  033E                     l2011:	
  3397  033E  3001               	movlw	1
  3398  033F                     u3095:	
  3399  033F  1003               	clrc
  3400  0340  0DC5               	rlf	___ftadd@f2,f
  3401  0341  0DC6               	rlf	___ftadd@f2+1,f
  3402  0342  0DC7               	rlf	___ftadd@f2+2,f
  3403  0343  3EFF               	addlw	-1
  3404  0344  1D03               	skipz
  3405  0345  2B3F               	goto	u3095
  3406  0346  3001               	movlw	1
  3407  0347  02CD               	subwf	___ftadd@exp2,f
  3408  0348  084D               	movf	___ftadd@exp2,w
  3409  0349  064E               	xorwf	___ftadd@exp1,w
  3410  034A  1903               	skipnz
  3411  034B  2B5F               	goto	l2019
  3412  034C  3001               	movlw	1
  3413  034D  02CC               	subwf	___ftadd@sign,f
  3414  034E  084C               	movf	___ftadd@sign,w
  3415  034F  3907               	andlw	7
  3416  0350  1903               	btfsc	3,2
  3417  0351  2B5F               	goto	l2019
  3418  0352  2B3E               	goto	l2011
  3419  0353                     l2017:	
  3420  0353  3001               	movlw	1
  3421  0354                     u3125:	
  3422  0354  1003               	clrc
  3423  0355  0CC4               	rrf	___ftadd@f1+2,f
  3424  0356  0CC3               	rrf	___ftadd@f1+1,f
  3425  0357  0CC2               	rrf	___ftadd@f1,f
  3426  0358  3EFF               	addlw	-1
  3427  0359  1D03               	skipz
  3428  035A  2B54               	goto	u3125
  3429  035B  3001               	movlw	1
  3430  035C  00C8               	movwf	??___ftadd
  3431  035D  0848               	movf	??___ftadd,w
  3432  035E  07CE               	addwf	___ftadd@exp1,f
  3433  035F                     l2019:	
  3434  035F  084E               	movf	___ftadd@exp1,w
  3435  0360  064D               	xorwf	___ftadd@exp2,w
  3436  0361  1903               	btfsc	3,2
  3437  0362  2B8D               	goto	l476
  3438  0363  2B53               	goto	l2017
  3439  0364                     l2021:	
  3440  0364  084E               	movf	___ftadd@exp1,w
  3441  0365  024D               	subwf	___ftadd@exp2,w
  3442  0366  1803               	skipnc
  3443  0367  2B8D               	goto	l476
  3444  0368                     l2023:	
  3445  0368  3001               	movlw	1
  3446  0369                     u3155:	
  3447  0369  1003               	clrc
  3448  036A  0DC2               	rlf	___ftadd@f1,f
  3449  036B  0DC3               	rlf	___ftadd@f1+1,f
  3450  036C  0DC4               	rlf	___ftadd@f1+2,f
  3451  036D  3EFF               	addlw	-1
  3452  036E  1D03               	skipz
  3453  036F  2B69               	goto	u3155
  3454  0370  3001               	movlw	1
  3455  0371  02CE               	subwf	___ftadd@exp1,f
  3456  0372  084D               	movf	___ftadd@exp2,w
  3457  0373  064E               	xorwf	___ftadd@exp1,w
  3458  0374  1903               	skipnz
  3459  0375  2B89               	goto	l2031
  3460  0376  3001               	movlw	1
  3461  0377  02CC               	subwf	___ftadd@sign,f
  3462  0378  084C               	movf	___ftadd@sign,w
  3463  0379  3907               	andlw	7
  3464  037A  1903               	btfsc	3,2
  3465  037B  2B89               	goto	l2031
  3466  037C  2B68               	goto	l2023
  3467  037D                     l2029:	
  3468  037D  3001               	movlw	1
  3469  037E                     u3185:	
  3470  037E  1003               	clrc
  3471  037F  0CC7               	rrf	___ftadd@f2+2,f
  3472  0380  0CC6               	rrf	___ftadd@f2+1,f
  3473  0381  0CC5               	rrf	___ftadd@f2,f
  3474  0382  3EFF               	addlw	-1
  3475  0383  1D03               	skipz
  3476  0384  2B7E               	goto	u3185
  3477  0385  3001               	movlw	1
  3478  0386  00C8               	movwf	??___ftadd
  3479  0387  0848               	movf	??___ftadd,w
  3480  0388  07CD               	addwf	___ftadd@exp2,f
  3481  0389                     l2031:	
  3482  0389  084E               	movf	___ftadd@exp1,w
  3483  038A  064D               	xorwf	___ftadd@exp2,w
  3484  038B  1D03               	skipz
  3485  038C  2B7D               	goto	l2029
  3486  038D                     l476:	
  3487  038D  1FCC               	btfss	___ftadd@sign,7
  3488  038E  2B9F               	goto	l2035
  3489  038F  30FF               	movlw	255
  3490  0390  06C2               	xorwf	___ftadd@f1,f
  3491  0391  30FF               	movlw	255
  3492  0392  06C3               	xorwf	___ftadd@f1+1,f
  3493  0393  30FF               	movlw	255
  3494  0394  06C4               	xorwf	___ftadd@f1+2,f
  3495  0395  3001               	movlw	1
  3496  0396  07C2               	addwf	___ftadd@f1,f
  3497  0397  3000               	movlw	0
  3498  0398  1803               	skipnc
  3499  0399  3001               	movlw	1
  3500  039A  07C3               	addwf	___ftadd@f1+1,f
  3501  039B  3000               	movlw	0
  3502  039C  1803               	skipnc
  3503  039D  3001               	movlw	1
  3504  039E  07C4               	addwf	___ftadd@f1+2,f
  3505  039F                     l2035:	
  3506  039F  1F4C               	btfss	___ftadd@sign,6
  3507  03A0  2BB1               	goto	l2039
  3508  03A1  30FF               	movlw	255
  3509  03A2  06C5               	xorwf	___ftadd@f2,f
  3510  03A3  30FF               	movlw	255
  3511  03A4  06C6               	xorwf	___ftadd@f2+1,f
  3512  03A5  30FF               	movlw	255
  3513  03A6  06C7               	xorwf	___ftadd@f2+2,f
  3514  03A7  3001               	movlw	1
  3515  03A8  07C5               	addwf	___ftadd@f2,f
  3516  03A9  3000               	movlw	0
  3517  03AA  1803               	skipnc
  3518  03AB  3001               	movlw	1
  3519  03AC  07C6               	addwf	___ftadd@f2+1,f
  3520  03AD  3000               	movlw	0
  3521  03AE  1803               	skipnc
  3522  03AF  3001               	movlw	1
  3523  03B0  07C7               	addwf	___ftadd@f2+2,f
  3524  03B1                     l2039:	
  3525  03B1  01CC               	clrf	___ftadd@sign
  3526  03B2  0842               	movf	___ftadd@f1,w
  3527  03B3  07C5               	addwf	___ftadd@f2,f
  3528  03B4  0843               	movf	___ftadd@f1+1,w
  3529  03B5  1103               	clrz
  3530  03B6  1803               	skipnc
  3531  03B7  0A43               	incf	___ftadd@f1+1,w
  3532  03B8  1D03               	btfss	3,2
  3533  03B9  07C6               	addwf	___ftadd@f2+1,f
  3534  03BA  0844               	movf	___ftadd@f1+2,w
  3535  03BB  1103               	clrz
  3536  03BC  1803               	skipnc
  3537  03BD  0A44               	incf	___ftadd@f1+2,w
  3538  03BE  1D03               	btfss	3,2
  3539  03BF  07C7               	addwf	___ftadd@f2+2,f
  3540  03C0  1FC7               	btfss	___ftadd@f2+2,7
  3541  03C1  2BD4               	goto	l2049
  3542  03C2  30FF               	movlw	255
  3543  03C3  06C5               	xorwf	___ftadd@f2,f
  3544  03C4  30FF               	movlw	255
  3545  03C5  06C6               	xorwf	___ftadd@f2+1,f
  3546  03C6  30FF               	movlw	255
  3547  03C7  06C7               	xorwf	___ftadd@f2+2,f
  3548  03C8  3001               	movlw	1
  3549  03C9  07C5               	addwf	___ftadd@f2,f
  3550  03CA  3000               	movlw	0
  3551  03CB  1803               	skipnc
  3552  03CC  3001               	movlw	1
  3553  03CD  07C6               	addwf	___ftadd@f2+1,f
  3554  03CE  3000               	movlw	0
  3555  03CF  1803               	skipnc
  3556  03D0  3001               	movlw	1
  3557  03D1  07C7               	addwf	___ftadd@f2+2,f
  3558  03D2  01CC               	clrf	___ftadd@sign
  3559  03D3  0ACC               	incf	___ftadd@sign,f
  3560  03D4                     l2049:	
  3561  03D4  0845               	movf	___ftadd@f2,w
  3562  03D5  00A0               	movwf	___ftpack@arg
  3563  03D6  0846               	movf	___ftadd@f2+1,w
  3564  03D7  00A1               	movwf	___ftpack@arg+1
  3565  03D8  0847               	movf	___ftadd@f2+2,w
  3566  03D9  00A2               	movwf	___ftpack@arg+2
  3567  03DA  084E               	movf	___ftadd@exp1,w
  3568  03DB  00C8               	movwf	??___ftadd
  3569  03DC  0848               	movf	??___ftadd,w
  3570  03DD  00A3               	movwf	___ftpack@exp
  3571  03DE  084C               	movf	___ftadd@sign,w
  3572  03DF  00C9               	movwf	??___ftadd+1
  3573  03E0  0849               	movf	??___ftadd+1,w
  3574  03E1  00A4               	movwf	___ftpack@sign
  3575  03E2  120A  118A  2657   	fcall	___ftpack
  3576  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3577  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3578  03E7  0820               	movf	?___ftpack,w
  3579  03E8  00C2               	movwf	?___ftadd
  3580  03E9  0821               	movf	?___ftpack+1,w
  3581  03EA  00C3               	movwf	?___ftadd+1
  3582  03EB  0822               	movf	?___ftpack+2,w
  3583  03EC  00C4               	movwf	?___ftadd+2
  3584  03ED  0008               	return
  3585  03EE                     __end_of___ftadd:	
  3586                           
  3587                           	psect	text16
  3588  07DB                     __ptext16:	
  3589 ;; *************** function ___awtoft *****************
  3590 ;; Defined at:
  3591 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  c               2    9[BANK0 ] int 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  sign            1   14[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  3    9[BANK0 ] float 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       3       0       0       0
  3606 ;;      Locals:         0       1       0       0       0
  3607 ;;      Temps:          0       2       0       0       0
  3608 ;;      Totals:         0       6       0       0       0
  3609 ;;Total ram usage:        6 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    2
  3612 ;; This function calls:
  3613 ;;		___ftpack
  3614 ;; This function is called by:
  3615 ;;		_Adquisicion
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function ___awtoft
  3621  07DB                     ___awtoft:	
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3625  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  3626  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  3627  07DD  01AE               	clrf	___awtoft@sign
  3628  07DE  1FAA               	btfss	___awtoft@c+1,7
  3629  07DF  2FE7               	goto	l1979
  3630  07E0  09A9               	comf	___awtoft@c,f
  3631  07E1  09AA               	comf	___awtoft@c+1,f
  3632  07E2  0AA9               	incf	___awtoft@c,f
  3633  07E3  1903               	skipnz
  3634  07E4  0AAA               	incf	___awtoft@c+1,f
  3635  07E5  01AE               	clrf	___awtoft@sign
  3636  07E6  0AAE               	incf	___awtoft@sign,f
  3637  07E7                     l1979:	
  3638  07E7  0829               	movf	___awtoft@c,w
  3639  07E8  00A0               	movwf	___ftpack@arg
  3640  07E9  082A               	movf	___awtoft@c+1,w
  3641  07EA  00A1               	movwf	___ftpack@arg+1
  3642  07EB  01A2               	clrf	___ftpack@arg+2
  3643  07EC  308E               	movlw	142
  3644  07ED  00AC               	movwf	??___awtoft
  3645  07EE  082C               	movf	??___awtoft,w
  3646  07EF  00A3               	movwf	___ftpack@exp
  3647  07F0  082E               	movf	___awtoft@sign,w
  3648  07F1  00AD               	movwf	??___awtoft+1
  3649  07F2  082D               	movf	??___awtoft+1,w
  3650  07F3  00A4               	movwf	___ftpack@sign
  3651  07F4  120A  118A  2657   	fcall	___ftpack
  3652  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3653  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3654  07F9  0820               	movf	?___ftpack,w
  3655  07FA  00A9               	movwf	?___awtoft
  3656  07FB  0821               	movf	?___ftpack+1,w
  3657  07FC  00AA               	movwf	?___awtoft+1
  3658  07FD  0822               	movf	?___ftpack+2,w
  3659  07FE  00AB               	movwf	?___awtoft+2
  3660  07FF  0008               	return
  3661  0800                     __end_of___awtoft:	
  3662                           
  3663                           	psect	text17
  3664  0657                     __ptext17:	
  3665 ;; *************** function ___ftpack *****************
  3666 ;; Defined at:
  3667 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  arg             3    0[BANK0 ] unsigned um
  3670 ;;  exp             1    3[BANK0 ] unsigned char 
  3671 ;;  sign            1    4[BANK0 ] unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  3    0[BANK0 ] float 
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3683 ;;      Params:         0       5       0       0       0
  3684 ;;      Locals:         0       0       0       0       0
  3685 ;;      Temps:          0       3       0       0       0
  3686 ;;      Totals:         0       8       0       0       0
  3687 ;;Total ram usage:        8 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:    1
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		___awtoft
  3694 ;;		___ftadd
  3695 ;;		___ftmul
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function ___ftpack
  3701  0657                     ___ftpack:	
  3702                           
  3703                           ;incstack = 0
  3704                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3705  0657  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0658  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0659  0823               	movf	___ftpack@exp,w
  3708  065A  1903               	btfsc	3,2
  3709  065B  2E61               	goto	l1873
  3710  065C  0822               	movf	___ftpack@arg+2,w
  3711  065D  0421               	iorwf	___ftpack@arg+1,w
  3712  065E  0420               	iorwf	___ftpack@arg,w
  3713  065F  1D03               	skipz
  3714  0660  2E74               	goto	l1879
  3715  0661                     l1873:	
  3716  0661  3000               	movlw	0
  3717  0662  00A0               	movwf	?___ftpack
  3718  0663  3000               	movlw	0
  3719  0664  00A1               	movwf	?___ftpack+1
  3720  0665  3000               	movlw	0
  3721  0666  00A2               	movwf	?___ftpack+2
  3722  0667  0008               	return
  3723  0668                     l1877:	
  3724  0668  3001               	movlw	1
  3725  0669  00A5               	movwf	??___ftpack
  3726  066A  0825               	movf	??___ftpack,w
  3727  066B  07A3               	addwf	___ftpack@exp,f
  3728  066C  3001               	movlw	1
  3729  066D                     u2735:	
  3730  066D  1003               	clrc
  3731  066E  0CA2               	rrf	___ftpack@arg+2,f
  3732  066F  0CA1               	rrf	___ftpack@arg+1,f
  3733  0670  0CA0               	rrf	___ftpack@arg,f
  3734  0671  3EFF               	addlw	-1
  3735  0672  1D03               	skipz
  3736  0673  2E6D               	goto	u2735
  3737  0674                     l1879:	
  3738  0674  30FE               	movlw	254
  3739  0675  0522               	andwf	___ftpack@arg+2,w
  3740  0676  1903               	btfsc	3,2
  3741  0677  2E8F               	goto	l445
  3742  0678  2E68               	goto	l1877
  3743  0679                     l1881:	
  3744  0679  3001               	movlw	1
  3745  067A  00A5               	movwf	??___ftpack
  3746  067B  0825               	movf	??___ftpack,w
  3747  067C  07A3               	addwf	___ftpack@exp,f
  3748  067D  3001               	movlw	1
  3749  067E  07A0               	addwf	___ftpack@arg,f
  3750  067F  3000               	movlw	0
  3751  0680  1803               	skipnc
  3752  0681  3001               	movlw	1
  3753  0682  07A1               	addwf	___ftpack@arg+1,f
  3754  0683  3000               	movlw	0
  3755  0684  1803               	skipnc
  3756  0685  3001               	movlw	1
  3757  0686  07A2               	addwf	___ftpack@arg+2,f
  3758  0687  3001               	movlw	1
  3759  0688                     u2755:	
  3760  0688  1003               	clrc
  3761  0689  0CA2               	rrf	___ftpack@arg+2,f
  3762  068A  0CA1               	rrf	___ftpack@arg+1,f
  3763  068B  0CA0               	rrf	___ftpack@arg,f
  3764  068C  3EFF               	addlw	-1
  3765  068D  1D03               	skipz
  3766  068E  2E88               	goto	u2755
  3767  068F                     l445:	
  3768  068F  30FF               	movlw	255
  3769  0690  0522               	andwf	___ftpack@arg+2,w
  3770  0691  1903               	btfsc	3,2
  3771  0692  2E9E               	goto	l1889
  3772  0693  2E79               	goto	l1881
  3773  0694                     l1887:	
  3774  0694  3001               	movlw	1
  3775  0695  02A3               	subwf	___ftpack@exp,f
  3776  0696  3001               	movlw	1
  3777  0697                     u2775:	
  3778  0697  1003               	clrc
  3779  0698  0DA0               	rlf	___ftpack@arg,f
  3780  0699  0DA1               	rlf	___ftpack@arg+1,f
  3781  069A  0DA2               	rlf	___ftpack@arg+2,f
  3782  069B  3EFF               	addlw	-1
  3783  069C  1D03               	skipz
  3784  069D  2E97               	goto	u2775
  3785  069E                     l1889:	
  3786  069E  1BA1               	btfsc	___ftpack@arg+1,7
  3787  069F  2EA4               	goto	l452
  3788  06A0  3002               	movlw	2
  3789  06A1  0223               	subwf	___ftpack@exp,w
  3790  06A2  1803               	skipnc
  3791  06A3  2E94               	goto	l1887
  3792  06A4                     l452:	
  3793  06A4  1823               	btfsc	___ftpack@exp,0
  3794  06A5  2EAC               	goto	l453
  3795  06A6  30FF               	movlw	255
  3796  06A7  05A0               	andwf	___ftpack@arg,f
  3797  06A8  307F               	movlw	127
  3798  06A9  05A1               	andwf	___ftpack@arg+1,f
  3799  06AA  30FF               	movlw	255
  3800  06AB  05A2               	andwf	___ftpack@arg+2,f
  3801  06AC                     l453:	
  3802  06AC  1003               	clrc
  3803  06AD  0CA3               	rrf	___ftpack@exp,f
  3804  06AE  0823               	movf	___ftpack@exp,w
  3805  06AF  00A5               	movwf	??___ftpack
  3806  06B0  01A6               	clrf	??___ftpack+1
  3807  06B1  01A7               	clrf	??___ftpack+2
  3808  06B2  3010               	movlw	16
  3809  06B3                     u2815:	
  3810  06B3  1003               	clrc
  3811  06B4  0DA5               	rlf	??___ftpack,f
  3812  06B5  0DA6               	rlf	??___ftpack+1,f
  3813  06B6  0DA7               	rlf	??___ftpack+2,f
  3814  06B7  3EFF               	addlw	-1
  3815  06B8  1D03               	skipz
  3816  06B9  2EB3               	goto	u2815
  3817  06BA  0825               	movf	??___ftpack,w
  3818  06BB  04A0               	iorwf	___ftpack@arg,f
  3819  06BC  0826               	movf	??___ftpack+1,w
  3820  06BD  04A1               	iorwf	___ftpack@arg+1,f
  3821  06BE  0827               	movf	??___ftpack+2,w
  3822  06BF  04A2               	iorwf	___ftpack@arg+2,f
  3823  06C0  0824               	movf	___ftpack@sign,w
  3824  06C1  1903               	btfsc	3,2
  3825  06C2  0008               	return
  3826  06C3  17A2               	bsf	___ftpack@arg+2,7
  3827  06C4  0008               	return
  3828  06C5                     __end_of___ftpack:	
  3829                           
  3830                           	psect	text18
  3831  0780                     __ptext18:	
  3832 ;; *************** function ___awdiv *****************
  3833 ;; Defined at:
  3834 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  divisor         2    0[BANK0 ] int 
  3837 ;;  dividend        2    2[BANK0 ] int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  quotient        2    7[BANK0 ] int 
  3840 ;;  sign            1    6[BANK0 ] unsigned char 
  3841 ;;  counter         1    5[BANK0 ] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  2    0[BANK0 ] int 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       4       0       0       0
  3852 ;;      Locals:         0       4       0       0       0
  3853 ;;      Temps:          0       1       0       0       0
  3854 ;;      Totals:         0       9       0       0       0
  3855 ;;Total ram usage:        9 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		Nothing
  3860 ;; This function is called by:
  3861 ;;		_Adquisicion
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function ___awdiv
  3867  0780                     ___awdiv:	
  3868                           
  3869                           ;incstack = 0
  3870                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3871  0780  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0781  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0782  01A6               	clrf	___awdiv@sign
  3874  0783  1FA1               	btfss	___awdiv@divisor+1,7
  3875  0784  2F8C               	goto	l1935
  3876  0785  09A0               	comf	___awdiv@divisor,f
  3877  0786  09A1               	comf	___awdiv@divisor+1,f
  3878  0787  0AA0               	incf	___awdiv@divisor,f
  3879  0788  1903               	skipnz
  3880  0789  0AA1               	incf	___awdiv@divisor+1,f
  3881  078A  01A6               	clrf	___awdiv@sign
  3882  078B  0AA6               	incf	___awdiv@sign,f
  3883  078C                     l1935:	
  3884  078C  1FA3               	btfss	___awdiv@dividend+1,7
  3885  078D  2F97               	goto	l1941
  3886  078E  09A2               	comf	___awdiv@dividend,f
  3887  078F  09A3               	comf	___awdiv@dividend+1,f
  3888  0790  0AA2               	incf	___awdiv@dividend,f
  3889  0791  1903               	skipnz
  3890  0792  0AA3               	incf	___awdiv@dividend+1,f
  3891  0793  3001               	movlw	1
  3892  0794  00A4               	movwf	??___awdiv
  3893  0795  0824               	movf	??___awdiv,w
  3894  0796  06A6               	xorwf	___awdiv@sign,f
  3895  0797                     l1941:	
  3896  0797  01A7               	clrf	___awdiv@quotient
  3897  0798  01A8               	clrf	___awdiv@quotient+1
  3898  0799  0820               	movf	___awdiv@divisor,w
  3899  079A  0421               	iorwf	___awdiv@divisor+1,w
  3900  079B  1903               	btfsc	3,2
  3901  079C  2FCE               	goto	l1963
  3902  079D  01A5               	clrf	___awdiv@counter
  3903  079E  0AA5               	incf	___awdiv@counter,f
  3904  079F                     l1951:	
  3905  079F  1BA1               	btfsc	___awdiv@divisor+1,7
  3906  07A0  2FAD               	goto	l1953
  3907  07A1  3001               	movlw	1
  3908  07A2                     u2925:	
  3909  07A2  1003               	clrc
  3910  07A3  0DA0               	rlf	___awdiv@divisor,f
  3911  07A4  0DA1               	rlf	___awdiv@divisor+1,f
  3912  07A5  3EFF               	addlw	-1
  3913  07A6  1D03               	skipz
  3914  07A7  2FA2               	goto	u2925
  3915  07A8  3001               	movlw	1
  3916  07A9  00A4               	movwf	??___awdiv
  3917  07AA  0824               	movf	??___awdiv,w
  3918  07AB  07A5               	addwf	___awdiv@counter,f
  3919  07AC  2F9F               	goto	l1951
  3920  07AD                     l1953:	
  3921  07AD  3001               	movlw	1
  3922  07AE                     u2945:	
  3923  07AE  1003               	clrc
  3924  07AF  0DA7               	rlf	___awdiv@quotient,f
  3925  07B0  0DA8               	rlf	___awdiv@quotient+1,f
  3926  07B1  3EFF               	addlw	-1
  3927  07B2  1D03               	skipz
  3928  07B3  2FAE               	goto	u2945
  3929  07B4  0821               	movf	___awdiv@divisor+1,w
  3930  07B5  0223               	subwf	___awdiv@dividend+1,w
  3931  07B6  1D03               	skipz
  3932  07B7  2FBA               	goto	u2955
  3933  07B8  0820               	movf	___awdiv@divisor,w
  3934  07B9  0222               	subwf	___awdiv@dividend,w
  3935  07BA                     u2955:	
  3936  07BA  1C03               	skipc
  3937  07BB  2FC3               	goto	l1959
  3938  07BC  0820               	movf	___awdiv@divisor,w
  3939  07BD  02A2               	subwf	___awdiv@dividend,f
  3940  07BE  0821               	movf	___awdiv@divisor+1,w
  3941  07BF  1C03               	skipc
  3942  07C0  03A3               	decf	___awdiv@dividend+1,f
  3943  07C1  02A3               	subwf	___awdiv@dividend+1,f
  3944  07C2  1427               	bsf	___awdiv@quotient,0
  3945  07C3                     l1959:	
  3946  07C3  3001               	movlw	1
  3947  07C4                     u2965:	
  3948  07C4  1003               	clrc
  3949  07C5  0CA1               	rrf	___awdiv@divisor+1,f
  3950  07C6  0CA0               	rrf	___awdiv@divisor,f
  3951  07C7  3EFF               	addlw	-1
  3952  07C8  1D03               	skipz
  3953  07C9  2FC4               	goto	u2965
  3954  07CA  3001               	movlw	1
  3955  07CB  02A5               	subwf	___awdiv@counter,f
  3956  07CC  1D03               	btfss	3,2
  3957  07CD  2FAD               	goto	l1953
  3958  07CE                     l1963:	
  3959  07CE  0826               	movf	___awdiv@sign,w
  3960  07CF  1903               	btfsc	3,2
  3961  07D0  2FD6               	goto	l1967
  3962  07D1  09A7               	comf	___awdiv@quotient,f
  3963  07D2  09A8               	comf	___awdiv@quotient+1,f
  3964  07D3  0AA7               	incf	___awdiv@quotient,f
  3965  07D4  1903               	skipnz
  3966  07D5  0AA8               	incf	___awdiv@quotient+1,f
  3967  07D6                     l1967:	
  3968  07D6  0828               	movf	___awdiv@quotient+1,w
  3969  07D7  00A1               	movwf	?___awdiv+1
  3970  07D8  0827               	movf	___awdiv@quotient,w
  3971  07D9  00A0               	movwf	?___awdiv
  3972  07DA  0008               	return
  3973  07DB                     __end_of___awdiv:	
  3974                           
  3975                           	psect	text19
  3976  0F26                     __ptext19:	
  3977 ;; *************** function _rutinainterrupciones *****************
  3978 ;; Defined at:
  3979 ;;		line 47 in file "lab5ej2.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          5       0       0       0       0
  3996 ;;      Totals:         5       0       0       0       0
  3997 ;;Total ram usage:        5 bytes
  3998 ;; Hardware stack levels used:    1
  3999 ;; This function calls:
  4000 ;;		Nothing
  4001 ;; This function is called by:
  4002 ;;		Interrupt level 1
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function _rutinainterrupciones
  4008  0F26                     _rutinainterrupciones:	
  4009                           
  4010                           ;lab5ej2.c: 49: if(PIR1bits.TMR1IF==1)
  4011  0F26  1C0C               	btfss	12,0	;volatile
  4012  0F27  2F38               	goto	i1l95
  4013                           
  4014                           ;lab5ej2.c: 50: {
  4015                           ;lab5ej2.c: 51: PIR1bits.TMR1IF=0;
  4016  0F28  100C               	bcf	12,0	;volatile
  4017                           
  4018                           ;lab5ej2.c: 52: Contador++;
  4019  0F29  3001               	movlw	1
  4020  0F2A  00F0               	movwf	??_rutinainterrupciones
  4021  0F2B  0870               	movf	??_rutinainterrupciones,w
  4022  0F2C  07F8               	addwf	_Contador,f
  4023                           
  4024                           ;lab5ej2.c: 53: TMR1=3036;
  4025  0F2D  300B               	movlw	11
  4026  0F2E  008F               	movwf	15	;volatile
  4027  0F2F  30DC               	movlw	220
  4028  0F30  008E               	movwf	14	;volatile
  4029                           
  4030                           ;lab5ej2.c: 54: if(Contador==5)
  4031  0F31  3005               	movlw	5
  4032  0F32  0678               	xorwf	_Contador,w
  4033  0F33  1D03               	btfss	3,2
  4034  0F34  2F38               	goto	i1l95
  4035                           
  4036                           ;lab5ej2.c: 55: {
  4037                           ;lab5ej2.c: 56: Contador=0;
  4038  0F35  01F8               	clrf	_Contador
  4039                           
  4040                           ;lab5ej2.c: 57: Banderaconv=1;
  4041  0F36  01EC               	clrf	_Banderaconv
  4042  0F37  0AEC               	incf	_Banderaconv,f
  4043  0F38                     i1l95:	
  4044  0F38  0874               	movf	??_rutinainterrupciones+4,w
  4045  0F39  00FF               	movwf	127
  4046  0F3A  0873               	movf	??_rutinainterrupciones+3,w
  4047  0F3B  008A               	movwf	10
  4048  0F3C  0872               	movf	??_rutinainterrupciones+2,w
  4049  0F3D  0084               	movwf	4
  4050  0F3E  0E71               	swapf	(??_rutinainterrupciones+1)^(0+-128),w
  4051  0F3F  0083               	movwf	3
  4052  0F40  0EFE               	swapf	126,f
  4053  0F41  0E7E               	swapf	126,w
  4054  0F42  0009               	retfie
  4055  0F43                     __end_of_rutinainterrupciones:	
  4056  007E                     btemp	set	126	;btemp
  4057  007E                     wtemp0	set	126
  4058                           
  4059                           	psect	intentry
  4060  0004                     __pintentry:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _rutinainterrupciones: [wreg+status,2+status,0]
  4063                           
  4064  0004                     interrupt_function:	
  4065  007E                     saved_w	set	btemp
  4066  0004  00FE               	movwf	btemp
  4067  0005  0E03               	swapf	3,w
  4068  0006  00F1               	movwf	??_rutinainterrupciones+1
  4069  0007  0804               	movf	4,w
  4070  0008  00F2               	movwf	??_rutinainterrupciones+2
  4071  0009  080A               	movf	10,w
  4072  000A  00F3               	movwf	??_rutinainterrupciones+3
  4073  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4074  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4075  000D  087F               	movf	btemp+1,w
  4076  000E  00F4               	movwf	??_rutinainterrupciones+4
  4077  000F  120A  158A  2F26   	ljmp	_rutinainterrupciones


Data Sizes:
    Strings     76
    Constant    10
    Data        1
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     66      79
    BANK1            80      2      79
    BANK3            96      2       2
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_3(CODE[19]), STR_2(CODE[15]), STR_1(CODE[42]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> valormedido(BANK1[35]), escritura(BANK1[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _rutinainterrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Adquisicion
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Adquisicion->___fttol
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftneg
    ___ftadd->___ftmul
    ___awtoft->___awdiv

Critical Paths under _rutinainterrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutinainterrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutinainterrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinainterrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   13677
                                              0 BANK1      2     2      0
                                              0 BANK3      2     2      0
                        _Adquisicion
                             _InitES
                           _InitTMR1
                          _InitUSART
                             ___ftge
                         _correccion
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    20      7    2478
                                             14 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     362
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _correccion                                           2     2      0      71
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___ftge                                              12     6      6     328
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _InitUSART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTMR1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitES                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adquisicion                                          5     5      0   10500
                                             61 BANK0      5     5      0
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     566
                                             47 BANK0     14    10      4
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     195
                                             15 BANK0      3     0      3
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2886
                                             18 BANK0     16    10      6
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3843
                                             34 BANK0     13     7      6
                            ___awdiv (ARG)
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2401
                                              9 BANK0      6     3      3
                            ___awdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2008
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     575
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _rutinainterrupciones                                 5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adquisicion
     ___awdiv
     ___awtoft
       ___awdiv (ARG)
       ___ftpack (ARG)
     ___ftadd
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftneg
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___fttol
       ___awdiv (ARG)
       ___awtoft (ARG)
         ___awdiv (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awdiv (ARG)
             ___awtoft (ARG)
               ___awdiv (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awdiv (ARG)
           ___awtoft (ARG)
             ___awdiv (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awdiv (ARG)
         ___awtoft (ARG)
           ___awdiv (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
   _InitES
   _InitTMR1
   _InitUSART
   ___ftge
   _correccion
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 _rutinainterrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      2       2       9        2.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      2      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     42      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AA      12        0.0%
ABS                  0      0      AA       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 22 20:00:56 2018

                            pc 0002                    __CFG_CP$OFF 0000                   ___awdiv@sign 0026  
                           fsr 0004            ___wmul@multiplicand 0022                   ___ftadd@exp1 004E  
                 ___ftadd@exp2 004D                   ___ftadd@sign 004C                            l102 0422  
                          l111 0449                            l105 0441                            l122 048D  
                          l132 04ED                            l108 0445                            l119 048B  
                          l128 04C7                            l155 0F7F                            l158 0F81  
                          l452 06A4                            l284 0F4F                            l453 06AC  
                          l445 068F                            l189 010F                            l536 063D  
                          l476 038D                   __CFG_CPD$OFF 0000                            _adc 006D  
                          fsr0 0004                            indf 0000                   __CFG_IESO$ON 0000  
                 __CFG_FOSC$HS 0000                   __CFG_LVP$OFF 0000                           l2011 033E  
                         l2021 0364                           l2031 0389                           l2023 0368  
                         l2017 0353                           l2035 039F                           l2019 035F  
                         l2029 037D                           l2117 05E3                           l2301 0132  
                         l2039 03B1                           l2143 0632                           l2135 0615  
                         l2303 0136                           l2049 03D4                           l2081 0573  
                         l2065 0524                           l2145 0640                           l2137 0625  
                         l2401 043D                           l2059 050E                           l2171 0FF0  
                         l2163 0FCC                           l2323 015E                           l2315 015A  
                         l2251 005B                           l2093 059B                           l2077 0563  
                         l2149 064E                           l2165 0FDA                           l2309 014B  
                         l2325 0039                           l2175 0FFB                           l2327 01A1  
                         l2407 044B                           l2089 058B                           l2193 0FB2  
                         l2257 0070                           l2433 04BF                           l2425 049A  
                         l2441 04E9                           l2187 0F96                           l2291 0101  
                         l2267 00AA                           l2373 0715                           l2189 0FA4  
                         l2197 0FBD                           l2285 00E0                           l2269 00C1  
                         l2437 04E2                           l2279 00DA                           l2369 06EE  
                         l1915 0F47                           l2299 012E                           l1941 0797  
                         l1909 0EE6                           l2397 041A                           l1951 079F  
                         l1935 078C                           l1953 07AD                           l1881 0679  
                         l1873 0661                           l1963 07CE                           l1877 0668  
                         l1967 07D6                           l1959 07C3                           l1887 0694  
                         l1879 0674                           l1889 069E                           l1993 0315  
                         l1979 07E7                           l1989 030E                           l1999 0324  
                         STR_1 0734                           STR_2 0771                           STR_3 075E  
                         u3125 0354                           u3305 0574                           u3155 0369  
                         u3315 057C                           u3405 05EA                           u3095 033F  
                         u4047 042A                           u3185 037E                           u3265 0530  
                         u3505 0FCF                           u4057 04CF                           u3355 059C  
                         u3275 0542                           u3435 0616                           u3365 05A4  
                         u3525 0FDB                           u3605 0FB3                           u2815 06B3  
                         u2735 066D                           u3535 0FE7                           u3465 0634  
                         u3545 0FF1                           u2755 0688                           u3715 011E  
                         u2925 07A2                           u2775 0697                           u3831 06E1  
                         u3575 0F99                           u3832 06E2                           u2945 07AE  
                         u3833 06E7                           u2865 0F50                           u3834 06E8  
                         u2955 07BA                           u3851 0708                           u3595 0FAA  
                         u2875 0F57                           u3675 00F7                           u3852 0709  
                         u2965 07C4                           u3853 070E                           u3854 070F  
                         u3785 0F79                           i1l95 0F38                           _TMR1 000E  
                 __CFG_WRT$OFF 0000                  __CFG_FCMEN$ON 0000                    _Banderaconv 006C  
                         _dato 0077                           _main 03EE                   ___ftpack@arg 0020  
                 ___ftpack@exp 0023                           _temp 0062                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 0012                  __CFG_MCLRE$ON 0000  
                 ___ftmul@cntr 0040                   ___ftmul@sign 0041                   ___fttol@exp1 005C  
                 ___fttol@lval 0058                          ?_main 0070                __end_of___awdiv 07DB  
              __end_of___ftadd 03EE                  __CFG_WDTE$OFF 0000                __end_of___ftneg 0ED8  
                        _ANSEL 0188                __end_of___ftmul 05C9                ___awdiv@divisor 0020  
                        _T1CON 0010                __end_of___fttol 0657                __end_of___lwdiv 1000  
              __end_of___lwmod 0FC2                ___awdiv@counter 0025                          _SPBRG 0099  
                        _PORTA 0005                          _TRISA 0085                          _TRISB 0086  
                        _TXREG 0019                  ___awtoft@sign 002E                    correccion@i 0020  
              __end_of_dpowers 0734                          _linea 0079                __end_of_isdigit 0EE8  
                ___ftpack@sign 0024                          main@i 0190                          pclath 000A  
                  _Adquisicion 01A8                          status 0003                          wtemp0 007E  
              __end_of_sprintf 01A8         ??_rutinainterrupciones 0070                __initialization 0015  
                 __end_of_main 04F6               __end_of_InitTMR1 0F26                         ??_main 00ED  
                ___fttol@sign1 0057                         _ADCON0 001F                         _ADRESH 001E  
                       _ADRESL 009E               ___awdiv@dividend 0022               __end_of___awtoft 0800  
             __end_of___ftpack 06C5                         _ANSELH 0189             __size_of_InitUSART 0014  
                       _SPBRGH 009A                 __CFG_PWRTE$OFF 0000                         _InitES 0EFC  
                       ___ftge 06C5                         ___wmul 0F43                      ??___awdiv 0024  
                    ??___ftadd 0048                      ??___ftneg 0032                      ??___ftmul 0038  
                    ??___fttol 0053                      ??___lwdiv 0024                      ??___lwmod 002C  
             ___awdiv@quotient 0027                         _valor1 0075                         _valor2 00A0  
        ___ftmul@f3_as_product 003D                   __pdataCOMMON 0079                      ??_isdigit 0020  
                       saved_w 007E                      ??_sprintf 0035        __end_of__initialization 002E  
                   ___ftadd@f1 0042                     ___ftadd@f2 0045                     ___ftge@ff1 0020  
                   ___ftge@ff2 0023                     ___ftneg@f1 002F                     ___awtoft@c 0029  
                   ___ftmul@f1 0032                     ___ftmul@f2 0035                     ___fttol@f1 004F  
               __pcstackCOMMON 0070              __end_of_InitUSART 0EFC                   sprintf@width 003D  
                   __pbssBANK0 0062                     __pbssBANK1 00A0                      ?_InitTMR1 0070  
                      ?_InitES 0070                     __pmaintext 03EE                        ?___ftge 0020  
                      ?___wmul 0020                     __pintentry 0004                      ?___awtoft 0029  
                    ?___ftpack 0020                     __stringtab 0724                     ??_InitTMR1 0020  
                 ?_Adquisicion 0070                     _correccion 0F66                __size_of_InitES 0015  
              __size_of___ftge 005F                        ___awdiv 0780                        ___ftadd 02E5  
                      ___ftneg 0ECE                __size_of___wmul 0023                        ___ftmul 04F6  
                      ___fttol 05C9                        ___lwdiv 0FC2                        ___lwmod 0F8E  
                      _dectemp 0067                     ??___awtoft 002C                     ??___ftpack 0025  
                      _centemp 0065                        __ptext1 0032                        __ptext2 0ED8  
                      __ptext3 0F43                        __ptext4 0F8E                        __ptext5 0FC2  
                      __ptext6 0F66                        __ptext7 06C5                        __ptext8 0EE8  
                      __ptext9 0F11                      _T1CONbits 0010                        _dpowers 072A  
                      _isdigit 0ED8                        _unitemp 0069                        _sprintf 0032  
                      clrloop0 0EC7           end_of_initialization 002E  __size_of_rutinainterrupciones 001D  
                    _RCSTAbits 0018                      _TRISCbits 0087                    ?_correccion 0070  
                    _TXSTAbits 0098                    ___ftmul@exp 003C                 __end_of_InitES 0F11  
               __end_of___ftge 0724                 __end_of___wmul 0F66                  __pidataCOMMON 0003  
                  _BAUDCTLbits 0187                      _InitUSART 0EE8            start_initialization 0015  
            __size_of_InitTMR1 0015           __size_of_Adquisicion 013D                       ??_InitES 0020  
                     ??___ftge 0026                       ??___wmul 0024            __size_of_correccion 0028  
            __size_of___awtoft 0025              __size_of___ftpack 006E                     ?_InitUSART 0070  
                  __pbssCOMMON 0075                      ___latbits 0002                  __pcstackBANK0 0020  
                __pcstackBANK1 00ED                  __pcstackBANK3 0190                    sprintf@flag 003A  
                  sprintf@prec 0039               ___lwdiv@dividend 0022                       ?___awdiv 0020  
                     ?___ftadd 0042                       ?___ftneg 002F                       ?___ftmul 0032  
                     ?___fttol 004F                       ?___lwdiv 0020                       ?___lwmod 0028  
                    __pstrings 0724                       ?_isdigit 0070                      _escritura 00A2  
             ___lwdiv@quotient 0026                       ?_sprintf 002E              interrupt_function 0004  
               ___wmul@product 0024                      clear_ram0 0EC6                       _PIE1bits 008C  
                     _PIR1bits 000C                     _ADCON0bits 001F                    __stringbase 0729  
                   _ADCON1bits 009F              ___wmul@multiplier 0020                    ??_InitUSART 0020  
 __end_of_rutinainterrupciones 0F43                       _Contador 0078                       _InitTMR1 0F11  
                 ??_correccion 0020               __size_of___awdiv 005B               __size_of___ftadd 0109  
             __size_of___ftneg 000A               __size_of___ftmul 00D3               __size_of___fttol 008E  
             __size_of___lwdiv 003E               __size_of___lwmod 0034                       ___awtoft 07DB  
                     ___ftpack 0657             __end_of__stringtab 072A                    _isdigit$681 0020  
           __end_of_correccion 0F8E                     sprintf@val 003B               __size_of_isdigit 0010  
              ___lwdiv@divisor 0020                _Adquisicion$882 005F                ___lwdiv@counter 0025  
                     __ptext10 0EFC                       __ptext11 01A8                       __ptext12 05C9  
                     __ptext13 0ECE                       __ptext14 04F6                       __ptext15 02E5  
                     __ptext16 07DB                       __ptext17 0657                       __ptext18 0780  
                     __ptext19 0F26              __CFG_BOR4V$BOR40V 0000               __size_of_sprintf 0176  
                __size_of_main 0108                     _INTCONbits 000B                       isdigit@c 0021  
                     intlevel1 0000                  ??_Adquisicion 005D                      sprintf@ap 0038  
                    sprintf@sp 003F               ___lwmod@dividend 002A                      stringcode 0724  
         _rutinainterrupciones 0F26                       sprintf@c 0040                       sprintf@f 002E  
                  _valormedido 00CA                ___lwmod@divisor 0028                ___lwmod@counter 002D  
                     stringdir 0724                       stringtab 0724               _banderaadquirido 006B  
          __end_of_Adquisicion 02E5          ?_rutinainterrupciones 0070  
